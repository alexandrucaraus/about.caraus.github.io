{"version":3,"file":"index-24941fbb.js","sources":["../../src/assets/themes/dark-mode-setup.ts","../../src/components/nav-menu.vue","../../src/app.vue","../../../../packages/ui-components/src/assets/icons/photo-camera.vue","../../../../packages/ui-components/src/components/upload/image-upload.vue","../../../../packages/ui-components/src/components/upload/image-multi-upload.vue","../../../../packages/ui-components/src/components/upload/document-upload.vue","../../../../packages/home/domain/src/entities.ts","../../../../config/firebase/src/init-firebase.ts","../../../../packages/home/web-services/src/blob-to-file.ts","../../../../packages/home/web-services/src/firebase-db/employments.ts","../../../../packages/home/web-services/src/firebase-file-storage/image-file-storage.ts","../../../../packages/home/web-services/src/firebase-db/introduction.ts","../../../../packages/home/web-services/src/firebase-db/projects.ts","../../../../packages/home/web-services/src/firebase-db/cv-document.ts","../../../../packages/home/web-services/src/firebase-db/leads.ts","../../../../packages/home/web-services/src/firebase-db/technologies.ts","../../../../packages/home/web-services/src/firebase-auth/auth.ts","../../../../packages/home/web/src/ui/home/home.store.ts","../../../../packages/home/web/src/ui/home/technology/technology-list.vue","../../../../packages/home/web/src/ui/home/employment/employment-item.vue","../../../../packages/home/web/src/assets/icons/download-icon.vue","../../../../packages/home/web/src/ui/home/employment/employment-list.vue","../../../../packages/home/web/src/assets/icons/chain-icon.vue","../../../../packages/home/web/src/ui/home/projects/project-list.vue","../../../../packages/home/web/src/ui/home/get-in-touch/get-in-touch.store.ts","../../../../packages/home/web/src/ui/home/get-in-touch/get-in-touch-form.vue","../../../../packages/home/web/src/ui/home/page.vue","../../../../packages/home/web/src/ui/components/back-button.vue","../../../../packages/home/web/src/ui/tech/page.vue","../../../../packages/home/web/src/ui/employment/page.vue","../../../../packages/home/web/src/ui/project/page.vue","../../../../packages/home/web/src/routes/home.routes.ts","../../../../packages/blog/web-services/src/firebase-db/blog-post.ts","../../../../packages/blog/web/src/ui/store.ts","../../../../packages/blog/web/src/ui/blog-list/list-tags.vue","../../../../packages/blog/web/src/ui/blog-list/page.vue","../../../../packages/blog/web/src/ui/components/back-button.vue","../../../../packages/blog/web/src/ui/blog-post/page.vue","../../../../packages/blog/web/src/routes/blog.routes.ts","../../../../packages/admin/web/src/ui/dashboard/admin.store.ts","../../../../packages/admin/web/src/ui/dashboard/side-nav.vue","../../../../packages/admin/web/src/ui/dashboard/page.vue","../../../../packages/home/web-admin/src/shared/toast-message.ts","../../../../packages/home/web-admin/src/ui/introduction/introduction.store.ts","../../../../packages/home/web-admin/src/ui/introduction/introduction.vue","../../../../packages/home/web-admin/src/ui/introduction/page.vue","../../../../packages/home/web-admin/src/ui/document-cv/upload-cv.store.ts","../../../../packages/home/web-admin/src/ui/document-cv/page.vue","../../../../packages/home/web-admin/src/ui/employments/list/list.store.ts","../../../../packages/home/web-admin/src/ui/employments/list/list.page.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item-buttons.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item-table.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item.page.vue","../../../../packages/home/web-admin/src/ui/employments/item-sub/list-item-sub-buttons.vue","../../../../packages/home/web-admin/src/ui/employments/item-sub/list-item-sub.page.vue","../../../../packages/home/web-admin/src/routes/employment-routes.ts","../../../../packages/home/web-admin/src/ui/projects/projects.store.ts","../../../../packages/home/web-admin/src/ui/projects/projects-table.vue","../../../../packages/home/web-admin/src/ui/projects/action-buttons.vue","../../../../packages/home/web-admin/src/ui/projects/project-edit.vue","../../../../packages/home/web-admin/src/routes/project-routes.ts","../../../../packages/home/web-admin/src/ui/leads/leads.store.ts","../../../../packages/home/web-admin/src/ui/leads/list.page.vue","../../../../packages/home/web-admin/src/ui/leads/action-buttons.vue","../../../../packages/home/web-admin/src/ui/leads/details.page.vue","../../../../packages/home/web-admin/src/routes/leads-routes.ts","../../../../packages/home/web-admin/src/ui/technologies/technologies.store.ts","../../../../packages/home/web-admin/src/ui/technologies/list.page.vue","../../../../packages/home/web-admin/src/ui/technologies/action-buttons.vue","../../../../packages/home/web-admin/src/ui/technologies/edit.page.vue","../../../../packages/home/web-admin/src/routes/technologies-routes.ts","../../../../packages/admin/web/src/ui/dashboard/welcome.vue","../../../../packages/blog/domain/src/entities.ts","../../../../packages/blog/web-admin/src/ui/store.ts","../../../../packages/blog/web-admin/src/ui/blog-list/page.vue","../../../../packages/blog/web-admin/src/ui/blog-item/ckeditor.ts","../../../../packages/blog/web-admin/src/ui/blog-item/page.vue","../../../../packages/blog/web-admin/src/routes/blog.routes.ts","../../../../packages/admin/web/src/routes/admin-routes.ts","../../../../packages/admin/web/src/ui/login/login.store.ts","../../../../packages/admin/web/src/ui/login/page.vue","../../src/router/router.ts","../../src/index.ts"],"sourcesContent":["import { usePrimeVue } from \"primevue/config\"\n\nconst idTheme = \"theme-link\"\nconst lightTheme = \"bootstrap4-light-blue\"\nconst darkTheme = \"bootstrap4-dark-blue\"\n\nexport const darkModeSetup = () => {\n  const PrimeVue = usePrimeVue()\n  const isDarkMode = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  PrimeVue.changeTheme(\n    isDarkMode ? lightTheme : darkTheme,\n    isDarkMode ? darkTheme : lightTheme,\n    idTheme,\n    () => {},\n  )\n  window\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", event => {\n      const isDarkMode = event.matches\n      PrimeVue.changeTheme(\n        isDarkMode ? lightTheme : darkTheme,\n        isDarkMode ? darkTheme : lightTheme,\n        idTheme,\n        () => {},\n      )\n    })\n}\n","<template>\n  <transition>\n    <div\n      v-if=\"show\"\n      class=\"fixed top-0 left-0 flex flex-1 justify-end md:justify-center p-6 w-full z-20 pointer-events-none\">\n      <div\n        class=\"fixed inset-x-4 top-8 z-50 origin-top rounded-3xl bg-white p-8 ring-1 ring-zinc-900/5 dark:bg-zinc-900 dark:ring-zinc-800 opacity-100 scale-100 pointer-events-auto\"\n        tabindex=\"-1\"\n        v-if=\"open\">\n        <div class=\"flex flex-row-reverse items-center justify-between\">\n          <button\n            aria-label=\"Close menu\"\n            class=\"-m-1 p-1\"\n            type=\"button\"\n            @click=\"open = !open\"\n            v-if=\"open\">\n            <svg\n              viewBox=\"0 0 24 24\"\n              aria-hidden=\"true\"\n              class=\"h-6 w-6 text-zinc-500 dark:text-zinc-400\">\n              <path\n                d=\"m17.25 6.75-10.5 10.5M6.75 6.75l10.5 10.5\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                stroke-width=\"1.5\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"></path>\n            </svg>\n          </button>\n          <h2 class=\"text-sm font-medium text-zinc-600 dark:text-zinc-400\">\n            Navigation\n          </h2>\n        </div>\n        <nav class=\"mt-6\">\n          <ul\n            class=\"-my-2 divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300\">\n            <li>\n              <router-link\n                class=\"relative block px-3 py-2 transition\"\n                to=\"/#about\"\n                >About</router-link\n              >\n            </li>\n            <li>\n              <router-link\n                class=\"relative block px-3 py-2 transition\"\n                to=\"/#technologies\"\n                >Technologies</router-link\n              >\n            </li>\n            <li>\n              <router-link\n                class=\"relative block px-3 py-2 transition\"\n                to=\"/#teams\"\n                >Teams</router-link\n              >\n            </li>\n            <li>\n              <router-link\n                class=\"relative block px-3 py-2 transition\"\n                to=\"/#projects\"\n                >Projects</router-link\n              >\n            </li>\n            <li>\n              <router-link\n                class=\"relative block px-3 py-2 transition\"\n                to=\"/#contact\"\n                >Contact Me!</router-link\n              >\n            </li>\n            <li>\n              <router-link\n                class=\"relative block px-3 py-2 transition\"\n                to=\"/blog\"\n                >Blog</router-link\n              >\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <div class=\"pointer-events-auto md:hidden pr-6\">\n        <button\n          class=\"group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20\"\n          type=\"button\"\n          aria-expanded=\"false\"\n          @click=\"toggleMenu\"\n          id=\"headlessui-popover-button-:R2miqla:\">\n          Menu<svg\n            viewBox=\"0 0 8 6\"\n            aria-hidden=\"true\"\n            class=\"ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400\">\n            <path\n              d=\"M1.75 1.75 4 4.25l2.25-2.5\"\n              fill=\"none\"\n              stroke-width=\"1.5\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"></path>\n          </svg>\n        </button>\n      </div>\n      <div\n        style=\"\n          position: fixed;\n          top: 1px;\n          left: 1px;\n          width: 1px;\n          height: 0;\n          padding: 0;\n          margin: -1px;\n          overflow: hidden;\n          clip: rect(0, 0, 0, 0);\n          white-space: nowrap;\n          border-width: 0;\n          display: none;\n        \"></div>\n      <nav class=\"pointer-events-auto hidden md:block\">\n        <ul\n          class=\"flex rounded-full bg-white/90 px-3 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10\">\n          <li>\n            <router-link\n              class=\"relative block px-3 py-2 transition\"\n              to=\"/#about\"\n              >About</router-link\n            >\n          </li>\n          <li>\n            <router-link\n              class=\"relative block px-3 py-2 transition\"\n              to=\"/#technologies\"\n              >Tech</router-link\n            >\n          </li>\n          <li>\n            <router-link\n              class=\"relative block px-3 py-2 transition\"\n              to=\"/#teams\"\n              >Teams</router-link\n            >\n          </li>\n          <li>\n            <router-link\n              class=\"relative block px-3 py-2 transition\"\n              to=\"/#projects\"\n              >Projects</router-link\n            >\n          </li>\n          <li>\n            <router-link\n              class=\"relative block px-3 py-2 transition\"\n              to=\"/#contact\"\n              >Contact</router-link\n            >\n          </li>\n          <li>\n            <router-link\n              class=\"relative block px-3 py-2 transition\"\n              to=\"/blog\"\n              >Blog</router-link\n            >\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </transition>\n</template>\n\n<script setup lang=\"ts\">\n  import { RouterLink } from \"vue-router\"\n  import { ref, onBeforeMount, onUnmounted, watch } from \"vue\"\n\n  const show = ref<boolean>(true)\n  const open = ref<boolean>(false)\n  const offset = ref<number>(0)\n\n  onBeforeMount(() => window.addEventListener(\"scroll\", handleScroll))\n  onUnmounted(() => window.removeEventListener(\"scroll\", handleScroll))\n\n  const handleScroll = () => (offset.value = window.pageYOffset)\n  watch(offset, (oldVal, newVal) => {\n    show.value = newVal - oldVal > 0\n    open.value = false\n  })\n\n  const toggleMenu = () => (open.value = !open.value)\n</script>\n\n<style scoped>\n  .v-enter-active,\n  .v-leave-active {\n    transition: opacity 0.5s ease;\n  }\n  .v-enter-from,\n  .v-leave-to {\n    opacity: 0;\n  }\n</style>\n","<template>\n  <nav-menu />\n  <div\n    class=\"container mx-auto bg-zinc-50 dark:bg-zinc-900 2xl:max-w-[70%] xl:max-w-[75%] lg:max-w-[80%]\">\n    <toast />\n    <router-view />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { onMounted } from \"vue\"\n  import { darkModeSetup } from \"./assets/themes/dark-mode-setup\"\n  import navMenu from \"./components/nav-menu.vue\"\n  onMounted(darkModeSetup)\n</script>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"48\"\n    viewBox=\"0 -960 960 960\"\n    width=\"48\">\n    <path\n      d=\"M479.5-266q72.5 0 121.5-49t49-121.5q0-72.5-49-121T479.5-606q-72.5 0-121 48.5t-48.5 121q0 72.5 48.5 121.5t121 49Zm0-60q-47.5 0-78.5-31.5t-31-79q0-47.5 31-78.5t78.5-31q47.5 0 79 31t31.5 78.5q0 47.5-31.5 79t-79 31.5ZM140-120q-24 0-42-18t-18-42v-513q0-23 18-41.5t42-18.5h147l73-87h240l73 87h147q23 0 41.5 18.5T880-693v513q0 24-18.5 42T820-120H140Zm680-60v-513H645l-73-87H388l-73 87H140v513h680ZM480-436Z\" />\n  </svg>\n</template>\n","<template>\n  <div\n    class=\"relative flex aspect-square border border-zinc-200 dark:border-zinc-400 rounded-xl min-w-20 min-h-20\">\n    <img\n      class=\"z-0 object-cover rounded-lg\"\n      ref=\"imagePreview\"\n      :src=\"props.modelValue\" />\n    <div\n      class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n      <photo-camera-icon\n        class=\"dark:fill-zinc-400\"\n        @click=\"chooseImage\" />\n    </div>\n    <input\n      ref=\"imagePicker\"\n      type=\"file\"\n      accept=\"image/png,image/jpeg\"\n      style=\"display: none\"\n      @change=\"choosenImage\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref } from \"vue\"\n  import photoCameraIcon from \"@/assets/icons/photo-camera.vue\"\n\n  const imagePicker = ref<HTMLInputElement>()\n  const imagePreview = ref<HTMLImageElement>()\n\n  const props = defineProps<{ modelValue: string }>()\n  const emits = defineEmits<{\n    (e: \"update:modelValue\", modelValue: string): void\n  }>()\n\n  const chooseImage = () => imagePicker.value?.click()\n  const choosenImage = (event: any) => {\n    const selectedImageFile = event.srcElement.files[0]\n    imagePreview.value!.src = URL.createObjectURL(selectedImageFile)\n    emits(\"update:modelValue\", URL.createObjectURL(selectedImageFile))\n  }\n</script>\n","<template>\n  <div class=\"flex flex-wrap items-center justify-start gap-4\">\n    <div\n      v-for=\"item in items\"\n      :key=\"item\"\n      class=\"relative w-32 h-32 aspect-square rounded-2xl\">\n      <div class=\"absolute top-0 right-0 z-10 -m-2\">\n        <div\n          class=\"rounded-full w-8 h-8 bg-red-600 flex justify-center items-center\"\n          @click=\"deleteImage(item)\">\n          <div class=\"pi pi-times w-4 h-4 text-white\"></div>\n        </div>\n      </div>\n      <div class=\"absolute v-full h-full\">\n        <img\n          class=\"v-full h-full rounded\"\n          :src=\"item\" />\n      </div>\n    </div>\n    <div\n      class=\"relative flex aspect-square border border-zinc-200 dark:border-zinc-400 rounded-xl w-32 h-32\">\n      <img\n        class=\"z-0 object-cover rounded-lg\"\n        ref=\"imagePreview\" />\n      <div\n        class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n        <photo-camera-icon\n          class=\"dark:fill-zinc-400\"\n          @click=\"chooseImage\" />\n      </div>\n      <input\n        ref=\"imagePicker\"\n        type=\"file\"\n        accept=\"image/png,image/jpeg\"\n        style=\"display: none\"\n        @change=\"chosenImage\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import photoCameraIcon from \"@/assets/icons/photo-camera.vue\"\n  import { ref } from \"vue\"\n\n  const props = defineProps<{ modelValue: string[] }>()\n  const emits = defineEmits<{\n    (e: \"update:modelValue\", modelValue: string[]): void\n  }>()\n\n  const items = ref<string[]>(props.modelValue ?? [])\n\n  const imagePicker = ref<HTMLInputElement>()\n  const chooseImage = () => imagePicker.value?.click()\n  const chosenImage = async (event: any) => {\n    const image = URL.createObjectURL(event.srcElement.files[0])\n    items.value = [...items.value, image]\n    emits(\"update:modelValue\", items.value)\n  }\n\n  const deleteImage = (image: string) => {\n    items.value = items.value.filter(it => it !== image)\n    if (image.startsWith(\"blob:\")) URL.revokeObjectURL(image)\n    emits(\"update:modelValue\", items.value)\n  }\n</script>\n","<template>\n  <div\n    class=\"flex flex-wrap items-center justify-start gap-4 border border-zinc-200 dark:border-zinc-400 p-2 rounded-xl\">\n    <a\n      v-if=\"isHttp(props.modelValue)\"\n      :href=\"props.modelValue\"\n      >CV Document\n    </a>\n    <a\n      v-else-if=\"isBlob(props.modelValue)\"\n      :href=\"props.modelValue\">\n      Loaded, hit upload button\n    </a>\n    <div v-else>No document</div>\n    <Button\n      label=\"Browse PDF\"\n      severity=\"info\"\n      @click=\"chooseFile\" />\n    <input\n      ref=\"filePicker\"\n      type=\"file\"\n      accept=\"application/pdf\"\n      style=\"display: none\"\n      @change=\"chosenFile\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { ref } from \"vue\"\n\n  const props = defineProps<{ modelValue: string }>()\n  const emits = defineEmits<{\n    (e: \"update:modelValue\", modelValue: string): void\n  }>()\n\n  const filePicker = ref<HTMLInputElement>()\n  const filePicked = ref<File>()\n\n  const chooseFile = () => filePicker.value?.click()\n  const chosenFile = (event: any) => {\n    const selectedDocumentFile = event.srcElement.files[0] as File\n    filePicked.value = event.srcElement.files[0] as File\n    emits(\"update:modelValue\", URL.createObjectURL(selectedDocumentFile))\n  }\n\n  const isHttp = (url: string) => url.startsWith(\"http\")\n  const isBlob = (url: string) => url.startsWith(\"blob\")\n</script>\n","import { v4 } from \"uuid\"\n\nexport class HomePage {\n  constructor(\n    public readonly introduction: Introduction = new Introduction(),\n    public readonly employments: Employment[] = [],\n    public readonly projects: Project[] = [],\n    public readonly cvDocument: Url = new Url(),\n    public readonly tehnologies: Technology[] = [],\n  ) {}\n}\n\nexport class Introduction {\n  constructor(\n    public readonly title: string = \"\",\n    public readonly description: string = \"\",\n    public readonly photo: Url = new Url(),\n    public readonly contacts: Contacts = new Contacts(),\n  ) {}\n}\n\nexport class Employment {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly employer: string = \"\",\n    public readonly employerIcon: Url = new Url(),\n    public readonly employerWebsite: Url = new Url(),\n    public readonly role: string = \"\",\n    public readonly description: string = \"\",\n    public readonly location: string = \"\",\n    public readonly subEmployments: SubEmployment[] = [],\n    public readonly fromDate: Date = new Date(),\n    public readonly tillDate: Date = new Date(),\n  ) {}\n}\n\nexport class SubEmployment {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly employer: string = \"\",\n    public readonly employerIcon: Url = new Url(),\n    public readonly role: string = \"\",\n    public readonly description: string = \"\",\n    public readonly location: string = \"\",\n    public readonly fromDate: Date = new Date(),\n    public readonly tillDate: Date = new Date(),\n  ) {}\n}\n\nexport class Project {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly title: string = \"\",\n    public readonly summary: string = \"\",\n    public readonly description: string = \"\",\n    public readonly owner: string = \"\",\n    public readonly contributions: string = \"\",\n    public readonly storeURL: Url = new Url(),\n    public readonly sourceURL: Url = new Url(),\n    public readonly logo: Url = new Url(),\n    public readonly screenshots: Url[] = [],\n    public readonly date: Date = new Date(),\n  ) {}\n}\n\nexport class Contacts {\n  constructor(\n    public readonly email: string = \"\",\n    public readonly telephone: string = \"\",\n    public readonly skype: string = \"\",\n    public readonly github: string = \"\",\n    public readonly linkedin: string = \"\",\n  ) {}\n}\n\nexport class Url {\n  constructor(public readonly path: string = \"\") {}\n}\n\nexport class Technology {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly icon: Url = new Url(),\n    public readonly name: string = \"\",\n    public readonly percentage: number = 0,\n    public readonly order: number = Number.MAX_SAFE_INTEGER,\n  ) {}\n}\n\nexport class Lead {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly name: string = \"\",\n    public readonly email: string = \"\",\n    public readonly date: Date = new Date(),\n    public readonly subject: string = \"\",\n    public readonly message: string = \"\",\n  ) {}\n}\n","import { FirebaseApp, deleteApp, initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore\"\nimport { getStorage } from \"firebase/storage\"\nimport { getAuth } from \"firebase/auth\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCSWwExeOhtuxeFsvZhsXiZlEQxmOdON5M\",\n  authDomain: \"my-world-0690.firebaseapp.com\",\n  databaseURL:\n    \"https://my-world-0690-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"my-world-0690\",\n  storageBucket: \"my-world-0690.appspot.com\",\n  messagingSenderId: \"367700046064\",\n  appId: \"1:367700046064:web:3c3a0d649d1e08e016d235\",\n}\n\nlet app: FirebaseApp\n\nexport const initializeFirebase = () => (app = initializeApp(firebaseConfig))\nexport const deIntitializeFirebase = () => deleteApp(app)\n\nexport const firestoreApp = () => getFirestore(app)\nexport const storageApp = () => getStorage(app)\nexport const authApp = () => getAuth(app)\n","export const blobUrlToFile = async (\n  blobUrl: string,\n): Promise<File | undefined> => {\n  try {\n    const response = await fetch(blobUrl)\n    const blob = await response.blob()\n\n    // Extract the filename from the blob URL\n    const urlParts = blobUrl.split(\"/\")\n    const filename = urlParts[urlParts.length - 1]\n\n    // Determine the file type based on the blob's content\n    const contentType = blob.type || \"application/octet-stream\"\n\n    // Create a new File object with the blob data, filename, and content type\n    const file = new File([blob], filename, { type: contentType })\n\n    return file\n  } catch (error) {\n    console.error(\"Error extracting file:\", error)\n    return undefined\n  }\n}\n\nexport const blobUrlToBuffer = async (\n  blobUrl: string,\n): Promise<ArrayBuffer | undefined> => {\n  try {\n    const response = await fetch(blobUrl)\n    return await response.arrayBuffer()\n  } catch (error) {\n    console.error(\"Error extracting file:\", error)\n    return undefined\n  }\n}\n\nexport const isBlobUrl = (url: string) => url.match(\"blob:*\")\n","import { Employment, SubEmployment } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport {\n  collection,\n  setDoc,\n  updateDoc,\n  query,\n  getDocs,\n  getDoc,\n  doc,\n  deleteDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { v4, validate } from \"uuid\"\nimport { isBlobUrl, blobUrlToBuffer } from \"@/blob-to-file\"\nimport { deleteStored, uploadImage } from \"..\"\nimport { isEmpty } from \"lodash\"\n\nexport interface EmploymentStorage {\n  getById: (id: string) => Promise<Employment | Error>\n  getAll: () => Promise<Employment[] | Error>\n  create: (employment: Employment) => Promise<Employment | Error>\n  update: (employment: Employment) => Promise<Employment | Error>\n  delete: (employment: Employment[]) => Promise<void | Error>\n}\n\nexport const createEmploymentStorage = (\n  collection: string = \"/home/content\",\n  document: string = \"/employments\",\n): EmploymentStorage => ({\n  getById: async (id: string) => await getById(id, collection, document),\n  getAll: async () => await getAll(collection, document),\n  create: async (employment: Employment) =>\n    await create(employment, collection, document),\n  update: async (employment: Employment) =>\n    await update(employment, collection, document),\n  delete: async (emlpoyment: Employment[]) =>\n    await deletes(emlpoyment, collection, document),\n})\n\nconst getById = async (\n  id: string,\n  collection_: string,\n  document_: string,\n): Promise<Employment | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, id)\n  try {\n    const docSnapshot = await getDoc(docRef)\n    return fromFirebase(docSnapshot.data())\n  } catch (error) {\n    return Error(error.message)\n  }\n}\n\nconst getAll = async (\n  collection_: string,\n  document_: string,\n): Promise<Employment[] | Error> => {\n  const queryRef = query(collection(firestoreApp(), collection_, document_))\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    return Error(error.message)\n  }\n}\n\nconst create = async (\n  employment: Employment,\n  collection_: string,\n  document_: string,\n): Promise<Employment | Error> => {\n  const collRef = collection(firestoreApp(), collection_, document_)\n  try {\n    const newEmployemnt = await uploadImages(employment, collection_, document_)\n    const document = toFirebase(newEmployemnt)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst update = async (\n  employment: Employment,\n  collection_: string,\n  document_: string,\n): Promise<Employment | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, employment.id)\n  try {\n    const dbEmployment = fromFirebase((await getDoc(docRef)).data())\n    const dbIcons = [\n      dbEmployment.employerIcon.path,\n      ...dbEmployment.subEmployments.map(it => it.employerIcon.path),\n    ]\n\n    const icons = [\n      employment.employerIcon.path,\n      ...employment.subEmployments.map(it => it.employerIcon.path),\n    ]\n    const deleteIcons = dbIcons\n      .filter(it => !icons.includes(it))\n      .filter(it => !isBlobUrl(it))\n\n    await Promise.all(deleteIcons.map(async it => await deleteStored(it)))\n\n    const updatedEmployement = await uploadImages(\n      employment,\n      collection_,\n      document_,\n    )\n\n    const doc = toFirebase(updatedEmployement)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst deletes = async (\n  employments: Employment[],\n  collection_: string,\n  document_: string,\n) => {\n  for (const employment of employments) {\n    const docRef = doc(firestoreApp(), collection_, document_, employment.id)\n    try {\n      const employment_ = fromFirebase((await getDoc(docRef)).data())\n      try {\n        await Promise.all(\n          [\n            employment_.employerIcon.path,\n            ...employment_.subEmployments.map(it => it.employerIcon.path),\n          ].map(async it => await deleteStored(it)),\n        )\n      } catch (error) {\n        console.error(error)\n      }\n      await deleteDoc(docRef)\n    } catch (error) {\n      return Error(error)\n    }\n  }\n}\n\nconst toFirebase = (employment: Employment) => {\n  const { id, fromDate, tillDate, subEmployments, ...rest } = employment\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    subEmployments: Object.fromEntries(\n      new Map(subEmployments.map(toFirebaseSub).map(item => [item.id, item])),\n    ),\n    fromDate: Timestamp.fromDate(fromDate),\n    tillDate: Timestamp.fromDate(tillDate),\n    ...rest,\n  }\n}\n\nconst toFirebaseSub = (subEmployment: SubEmployment) => {\n  const { id, fromDate, tillDate, ...rest } = subEmployment\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    fromDate: Timestamp.fromDate(fromDate),\n    tillDate: Timestamp.fromDate(tillDate),\n    ...rest,\n  }\n}\n\nconst fromFirebase = (employment: any): Employment => {\n  const { fromDate, tillDate, subEmployments, ...rest } = employment\n  return {\n    ...rest,\n    subEmployments: Object.values(subEmployments).map(fromFirebaseSub),\n    fromDate: fromDate.toDate(),\n    tillDate: tillDate.toDate(),\n  }\n}\n\nconst fromFirebaseSub = (subEmployment: any): SubEmployment => {\n  const { fromDate, tillDate, ...rest } = subEmployment\n  return {\n    ...rest,\n    fromDate: fromDate.toDate(),\n    tillDate: tillDate.toDate(),\n  }\n}\n\nconst uploadImages = async (\n  employment: Employment,\n  collection_: string,\n  document_: string,\n): Promise<Employment> => {\n  const blobs = extractBlobs(employment)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".jpg\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(employment, blobs)\n}\n\nconst extractBlobs = (employment: Employment): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  if (\n    isBlobUrl(employment.employerIcon.path) &&\n    employment.employerIcon.path !== \"\"\n  )\n    blobMap.set(employment.employerIcon.path, \"\")\n  employment.subEmployments\n    .map(it => it.employerIcon.path)\n    .filter(it => isBlobUrl(it))\n    .forEach(it => blobMap.set(it, \"\"))\n  return blobMap\n}\n\nconst replaceBlobs = (\n  employment: Employment,\n  blobs: Map<string, string>,\n): Employment => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...employment,\n    employerIcon: { path: get(employment.employerIcon.path) },\n    subEmployments: employment.subEmployments.map(sub => ({\n      ...sub,\n      employerIcon: { path: get(sub.employerIcon.path) },\n    })),\n  }\n}\n","import { storageApp } from \"@config/firebase\"\nimport {\n  deleteObject,\n  getDownloadURL,\n  ref,\n  uploadBytesResumable,\n  UploadTask,\n} from \"firebase/storage\"\n\nexport const uploadImage = async (\n  remotePath: string,\n  file: File | ArrayBuffer,\n): Promise<string | Error> =>\n  new Promise((resolve, reject) => {\n    const storageRef = ref(storageApp(), remotePath)\n    try {\n      const uploadTask: UploadTask = uploadBytesResumable(storageRef, file, {\n        contentType: \"image/*\",\n      })\n      uploadTask.on(\n        \"state_changed\",\n        _ => {},\n        error => {\n          reject(error)\n        },\n        () =>\n          getDownloadURL(uploadTask.snapshot.ref).then(resolve).catch(reject),\n      )\n    } catch (error) {\n      return Error(error)\n    }\n  })\n\nexport const deleteImage = async (\n  remotePath: string,\n): Promise<string | Error> => {\n  const storageRef = ref(storageApp(), remotePath)\n  try {\n    await deleteObject(storageRef)\n    return remotePath\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nexport const deleteStored = async (url: string): Promise<void> =>\n  await deleteObject(ref(storageApp(), url))\n","import { Introduction } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\"\nimport { isEmpty } from \"lodash\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport { uploadImage } from \"@/firebase-file-storage/image-file-storage\"\nimport { v4 } from \"uuid\"\n\nexport interface IntroductionStorage {\n  get: () => Promise<Introduction>\n  set: (i: Introduction) => Promise<Introduction>\n}\n\nexport const createIntroductionStorage = (\n  _collection: string = \"/home/content\",\n  _document: string = \"/introduction/value\",\n): IntroductionStorage => ({\n  get: async () => await get(_collection, _document),\n  set: async i => await set(i, _collection, _document),\n})\n\nconst get = async (\n  _collection: string,\n  _document: string,\n): Promise<Introduction> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const snapshot = await getDoc(docRef)\n  return snapshot.exists()\n    ? (snapshot.data() as Introduction)\n    : new Introduction()\n}\n\nconst set = async (\n  introduction: Introduction,\n  _collection: string,\n  _document: string,\n): Promise<Introduction> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const oldIntroduction = (await getDoc(docRef)).data() as Introduction\n  if (oldIntroduction === undefined) {\n    await setDoc(docRef, { ...introduction })\n  } else {\n    const updatedIntroduction = await uploadImages(\n      introduction,\n      _collection,\n      _document,\n    )\n    await updateDoc(docRef, { ...updatedIntroduction })\n  }\n  return introduction\n}\n\nconst uploadImages = async (\n  introduction: Introduction,\n  collection_: string,\n  document_: string,\n): Promise<Introduction> => {\n  const blobs = extractBlobs(introduction)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".jpg\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(introduction, blobs)\n}\n\nconst extractBlobs = (introduction: Introduction): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  if (isBlobUrl(introduction.photo.path))\n    blobMap.set(introduction.photo.path, \"\")\n  return blobMap\n}\n\nconst replaceBlobs = (\n  introduction: Introduction,\n  blobs: Map<string, string>,\n): Introduction => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...introduction,\n    photo: { path: get(introduction.photo.path) },\n  }\n}\n","import { Project, Url } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport {\n  collection,\n  updateDoc,\n  query,\n  getDocs,\n  doc,\n  deleteDoc,\n  setDoc,\n  getDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { v4, validate } from \"uuid\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport {\n  deleteStored,\n  uploadImage,\n} from \"@/firebase-file-storage/image-file-storage\"\nimport { isEmpty } from \"lodash\"\n\nexport interface ProjectStorage {\n  create: (project: Project) => Promise<Project | Error>\n  get: (project: Project) => Promise<Project | Error>\n  getById: (id: string) => Promise<Project | Error>\n  getAll: () => Promise<Project[] | Error>\n  update: (project: Project) => Promise<Project | Error>\n  delete: (project: Project[]) => Promise<void | Error>\n}\n\nexport const createProjectStorage = (\n  _collection = \"/home/content\",\n  _document = \"/projects\",\n): ProjectStorage => ({\n  create: async (project: Project) =>\n    await create(project, _collection, _document),\n  get: async (project: Project) => await get(project, _collection, _document),\n  getById: async (id: string) => await getById(id, _collection, _document),\n  getAll: async () => await getAll(_collection, _document),\n  update: async (project: Project) =>\n    await update(project, _collection, _document),\n  delete: async (project: Project[]) =>\n    await deletes(project, _collection, _document),\n})\n\nconst create = async (\n  project: Project,\n  collection_: string,\n  document_: string,\n): Promise<Project | Error> => {\n  const collRef = collection(firestoreApp(), collection_, document_)\n  try {\n    const newProject = await uploadImages(project, collection_, document_)\n    const document = toFirebase(newProject)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    console.error(error)\n    return Error(error)\n  }\n}\n\nconst get = async (\n  project: Project,\n  collection_: string,\n  document_: string,\n): Promise<Project | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, project.id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst getById = async (\n  id: string,\n  collection_: string,\n  document_: string,\n): Promise<Project | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst getAll = async (\n  collection_: string,\n  document_: string,\n): Promise<Project[] | Error> => {\n  const queryRef = query(collection(firestoreApp(), collection_, document_))\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst update = async (\n  project: Project,\n  collection_: string,\n  document_: string,\n): Promise<Project | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, project.id)\n  try {\n    const dbProject = fromFirebase((await getDoc(docRef)).data())\n    const dbScreenshots = dbProject.screenshots.map(it => it.path)\n    const deleteScreenshots = dbScreenshots\n      .filter(it => !project.screenshots.map(it => it.path).includes(it))\n      .filter(it => !isBlobUrl(it))\n    try {\n      await Promise.all(\n        deleteScreenshots.map(async it => await deleteStored(it)),\n      )\n    } catch (error) {\n      console.error(error)\n    }\n    const updatedProject = await uploadImages(project, collection_, document_)\n    const doc = toFirebase(updatedProject)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst deletes = async (\n  projects: Project[],\n  collection_: string,\n  document_: string,\n): Promise<void | Error> => {\n  for (const project of projects) {\n    const docRef = doc(firestoreApp(), collection_, document_, project.id)\n    try {\n      const project_ = fromFirebase((await getDoc(docRef)).data())\n      try {\n        await Promise.all(\n          project_.screenshots.map(async it => await deleteStored(it.path)),\n        )\n      } catch (error) {\n        console.error(error)\n      }\n      await deleteDoc(docRef)\n    } catch (error) {\n      console.error(error)\n      return Error(error)\n    }\n  }\n  return\n}\n\nconst toFirebase = (project: Project) => {\n  const { id, storeURL, sourceURL, logo, screenshots, date, ...rest } = project\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    storeURL: { path: storeURL.path },\n    sourceURL: { path: sourceURL.path },\n    logo: logo.path,\n    screenshots: screenshots.map(it => it.path),\n    date: Timestamp.fromDate(date),\n    ...rest,\n  }\n}\n\nconst fromFirebase = (project: any): Project => {\n  const { storeURL, sourceURL, logo, screenshots, date, ...rest } = project\n  return {\n    storeURL: new Url(storeURL.path),\n    sourceURL: new Url(sourceURL.path),\n    logo: new Url(logo),\n    screenshots: screenshots.map((it: any) => new Url(it)),\n    date: date?.toDate() ?? new Date(),\n    ...rest,\n  }\n}\n\nconst uploadImages = async (\n  project: Project,\n  collection_: string,\n  document_: string,\n): Promise<Project> => {\n  const blobs = extractBlobs(project)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".jpg\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(project, blobs)\n}\n\nconst extractBlobs = (project: Project): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  const images = [project.logo, ...project.screenshots]\n  images\n    .map(it => it.path)\n    .filter(it => isBlobUrl(it))\n    .forEach(it => blobMap.set(it, \"\"))\n  return blobMap\n}\n\nconst replaceBlobs = (\n  project: Project,\n  blobs: Map<string, string>,\n): Project => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...project,\n    logo: new Url(get(project.logo.path)),\n    screenshots: project.screenshots.map(it => new Url(get(it.path))),\n  }\n}\n","import { Url } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\"\nimport { isEmpty } from \"lodash\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport { uploadImage } from \"@/firebase-file-storage/image-file-storage\"\nimport { v4 } from \"uuid\"\n\nexport interface CVDocumentStore {\n  set: (path: Url) => Promise<Url>\n  get: () => Promise<Url>\n}\n\nexport const createCVDocumentStorage = (\n  _collection: string = \"/home/content\",\n  _document: string = \"/document/link\",\n): CVDocumentStore => ({\n  get: async () => await get(_collection, _document),\n  set: async url => await set(url, _collection, _document),\n})\n\nconst get = async (_collection: string, _document: string): Promise<Url> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const snapshot = await getDoc(docRef)\n  return snapshot.exists() ? (snapshot.data() as Url) : new Url()\n}\n\nconst set = async (\n  url: Url,\n  _collection: string,\n  _document: string,\n): Promise<Url> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const oldIntroduction = (await getDoc(docRef)).data() as Url\n  if (oldIntroduction === undefined) await setDoc(docRef, { ...url })\n  const updatedIntroduction = await uploadDocument(url, _collection, _document)\n  await updateDoc(docRef, { ...updatedIntroduction })\n  return updatedIntroduction\n}\n\nconst uploadDocument = async (\n  url: Url,\n  collection_: string,\n  document_: string,\n): Promise<Url> => {\n  const blobs = extractBlobs(url)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".pdf\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(url, blobs)\n}\n\nconst extractBlobs = (url: Url): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  if (isBlobUrl(url.path)) blobMap.set(url.path, \"\")\n  return blobMap\n}\n\nconst replaceBlobs = (url: Url, blobs: Map<string, string>): Url => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    path: get(url.path),\n  }\n}\n","import { firestoreApp } from \"@config/firebase\"\nimport { Lead } from \"@home/domain\"\nimport {\n  collection,\n  updateDoc,\n  query,\n  getDocs,\n  doc,\n  deleteDoc,\n  setDoc,\n  getDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { v4, validate } from \"uuid\"\n\ninterface LeadsStorage {\n  getAll: () => Promise<Lead[] | Error>\n  getById: (id: string) => Promise<Lead | Error>\n  create: (lead: Lead) => Promise<Lead | Error>\n  update: (lead: Lead) => Promise<Lead | Error>\n  delete: (lead: Lead[]) => Promise<void | Error>\n}\n\nexport const createLeadsStorage = (\n  _collection = \"/home/content\",\n  _document = \"/leads\",\n): LeadsStorage => ({\n  getAll: async () => await getAll(_collection, _document),\n  getById: async (id: string) => await getById(id, _collection, _document),\n  create: async (lead: Lead) => await create(lead, _collection, _document),\n  update: async (lead: Lead) => await update(lead, _collection, _document),\n  delete: async (leads: Lead[]) => await deletes(leads, _collection, _document),\n})\n\nasync function getAll(\n  _collection: string,\n  _document: string,\n): Promise<Lead[] | Error> {\n  const queryRef = query(collection(firestoreApp(), _collection, _document))\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nasync function getById(\n  id: string,\n  _collection: string,\n  _document: string,\n): Promise<Lead | Error> {\n  const docRef = doc(firestoreApp(), _collection, _document, id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nasync function create(\n  lead: Lead,\n  _collection: string,\n  _document: string,\n): Promise<Lead | Error> {\n  const collRef = collection(firestoreApp(), _collection, _document)\n  try {\n    const document = toFirebase(lead)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    console.error(error)\n    return Error(error)\n  }\n}\n\nasync function update(\n  lead: Lead,\n  _collection: string,\n  _document: string,\n): Promise<Lead | Error> {\n  const docRef = doc(firestoreApp(), _collection, _document, lead.id)\n  try {\n    const doc = toFirebase(lead)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nasync function deletes(\n  leads: Lead[],\n  _collection: string,\n  _document: string,\n): Promise<void | Error> {\n  for (const lead of leads) {\n    const docRef = doc(firestoreApp(), _collection, _document, lead.id)\n    try {\n      await deleteDoc(docRef)\n    } catch (error) {\n      console.error(error)\n      return Error(error)\n    }\n  }\n  return\n}\n\nconst toFirebase = (lead: Lead) => {\n  const { id, date, ...rest } = lead\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    date: Timestamp.fromDate(date),\n    ...rest,\n  }\n}\n\nconst fromFirebase = (lead: any): Lead => {\n  const { date, ...rest } = lead\n  return {\n    date: date.toDate() ?? new Date(),\n    ...rest,\n  }\n}\n","import { Technology, Url } from \"@home/domain\"\nimport { v4, validate } from \"uuid\"\nimport {\n  collection,\n  updateDoc,\n  query,\n  getDocs,\n  doc,\n  deleteDoc,\n  setDoc,\n  getDoc,\n  orderBy,\n} from \"firebase/firestore\"\nimport { firestoreApp } from \"@config/firebase\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport {\n  deleteStored,\n  uploadImage,\n} from \"@/firebase-file-storage/image-file-storage\"\nimport { isEmpty } from \"lodash\"\n\ninterface TechnologiesStorage {\n  getAll: () => Promise<Technology[] | Error>\n  getById: (id: string) => Promise<Technology | Error>\n  create: (technology: Technology) => Promise<Technology | Error>\n  update: (technology: Technology) => Promise<Technology | Error>\n  updateOrder: (technologies: Technology[]) => Promise<void | Error>\n  delete: (technology: Technology[]) => Promise<void | Error>\n}\n\nexport const createTechnologiesStorage = (\n  _collection = \"/home/content\",\n  _document = \"/technologies\",\n): TechnologiesStorage => ({\n  getAll: async () => await getAll(_collection, _document),\n  getById: async (id: string) => await getById(id, _collection, _document),\n  create: async (technology: Technology) =>\n    await create(technology, _collection, _document),\n  update: async (technology: Technology) =>\n    await update(technology, _collection, _document),\n  updateOrder: async (technologies: Technology[]) =>\n    await updateOrder(technologies, _collection, _document),\n  delete: async (technologies: Technology[]) =>\n    await deletes(technologies, _collection, _document),\n})\n\nasync function getAll(\n  _collection: string,\n  _document: string,\n): Promise<Technology[] | Error> {\n  const queryRef = query(\n    collection(firestoreApp(), _collection, _document),\n    orderBy(\"order\"),\n  )\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nasync function getById(\n  id: string,\n  _collection: string,\n  _document: string,\n): Promise<Technology | Error> {\n  const docRef = doc(firestoreApp(), _collection, _document, id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nasync function create(\n  technology: Technology,\n  _collection: string,\n  _document: string,\n): Promise<Technology | Error> {\n  const collRef = collection(firestoreApp(), _collection, _document)\n  try {\n    const newProject = await uploadImages(technology, _collection, _document)\n    const document = toFirebase(newProject)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    console.error(error)\n    return Error(error)\n  }\n}\n\nasync function update(\n  technology: Technology,\n  _collection: string,\n  _document: string,\n): Promise<Technology | Error> {\n  const docRef = doc(firestoreApp(), _collection, _document, technology.id)\n  try {\n    const dbTechnology = fromFirebase((await getDoc(docRef)).data())\n    try {\n      if (dbTechnology.icon.path !== technology.icon.path)\n        await deleteStored(dbTechnology.icon.path)\n    } catch (error) {\n      console.error(error)\n    }\n    const updatedProject = await uploadImages(\n      technology,\n      _collection,\n      _document,\n    )\n    const doc = toFirebase(updatedProject)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nasync function updateOrder(\n  technologies: Technology[],\n  _collection: string,\n  _document: string,\n): Promise<void | Error> {\n  try {\n    for (const [index, technology] of technologies.entries()) {\n      const docRef = doc(firestoreApp(), _collection, _document, technology.id)\n      await updateDoc(docRef, { order: index })\n    }\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nasync function deletes(\n  technologies: Technology[],\n  _collection: string,\n  _document: string,\n): Promise<void | Error> {\n  for (const technology of technologies) {\n    const docRef = doc(firestoreApp(), _collection, _document, technology.id)\n    try {\n      try {\n        await deleteStored(technology.icon.path)\n      } catch (error) {\n        console.error(error)\n      }\n      await deleteDoc(docRef)\n    } catch (error) {\n      console.error(error)\n      return Error(error)\n    }\n  }\n  return\n}\n\nconst toFirebase = (technology: Technology) => {\n  const { id, icon, ...rest } = technology\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    icon: { path: icon.path },\n    ...rest,\n  }\n}\n\nconst fromFirebase = (technology: any): Technology => {\n  const { icon, ...rest } = technology\n  return {\n    icon: new Url(icon.path),\n    ...rest,\n  }\n}\n\nconst uploadImages = async (\n  technology: Technology,\n  collection_: string,\n  document_: string,\n): Promise<Technology> => {\n  const blobs = extractBlobs(technology)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4()}.jpg`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(technology, blobs)\n}\n\nconst extractBlobs = (technology: Technology): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  const images = [technology.icon]\n  images\n    .map(it => it.path)\n    .filter(it => isBlobUrl(it))\n    .forEach(it => blobMap.set(it, \"\"))\n  return blobMap\n}\n\nconst replaceBlobs = (\n  technology: Technology,\n  blobs: Map<string, string>,\n): Technology => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...technology,\n    icon: new Url(get(technology.icon.path)),\n  }\n}\n","import { authApp } from \"@config/firebase/src/init-firebase\"\nimport {\n  setPersistence,\n  signInWithEmailAndPassword,\n  signOut,\n  browserLocalPersistence,\n  browserSessionPersistence,\n} from \"firebase/auth\"\n\nexport interface AppAuthStorage {\n  signIn: (user: string, pass: string, rememberMe: boolean) => Promise<boolean>\n  signOut: () => Promise<boolean>\n  isLoggedIn: () => Promise<boolean>\n}\n\nexport const createAppAuthStorage = (): AppAuthStorage => ({\n  signIn: async (\n    user: string,\n    pass: string,\n    rememberMe: boolean,\n  ): Promise<boolean> => {\n    try {\n      await setPersistence(\n        authApp(),\n        rememberMe ? browserLocalPersistence : browserSessionPersistence,\n      )\n      await signInWithEmailAndPassword(authApp(), user, pass)\n      return true\n    } catch (error) {\n      console.error(error)\n    }\n    return false\n  },\n  signOut: async (): Promise<boolean> => {\n    try {\n      await signOut(authApp())\n      return true\n    } catch (error) {\n      console.error(error)\n    }\n    return false\n  },\n  isLoggedIn: async (): Promise<boolean> => {\n    const checkAuthStatus = async (): Promise<boolean> =>\n      new Promise((resolve, _) => {\n        authApp().onAuthStateChanged(user => {\n          resolve(user !== undefined && user !== null)\n        })\n      })\n    return await checkAuthStatus()\n  },\n})\n","import { defineStore } from \"pinia\"\nimport {\n  Employment,\n  HomePage,\n  Introduction,\n  Project,\n  Technology,\n  Url,\n} from \"@home/domain\"\nimport {\n  createIntroductionStorage,\n  createEmploymentStorage,\n  createProjectStorage,\n  createCVDocumentStorage,\n  createTechnologiesStorage,\n} from \"@home/web-services\"\n\ninterface HomePageState {\n  homePage: HomePage\n  isLoading: boolean\n  error?: Error\n\n  technology?: Technology\n  employment?: Employment\n  project?: Project\n}\n\nconst defaultState: HomePageState = {\n  homePage: new HomePage(),\n  isLoading: true,\n  error: undefined,\n\n  technology: undefined,\n  employment: undefined,\n  project: undefined,\n}\n\nconst employmentStore = createEmploymentStorage()\nconst projectStore = createProjectStorage()\nconst technologiesStore = createTechnologiesStorage()\n\nexport const useHomePageStore = defineStore(\"home-web-store\", {\n  state: () => defaultState,\n  actions: {\n    async init() {\n      this.isLoading = true\n      await this.fetch()\n      this.isLoading = false\n    },\n    async fetch() {\n      const promises = [\n        createIntroductionStorage().get(),\n        employmentStore.getAll(),\n        projectStore.getAll(),\n        createCVDocumentStorage().get(),\n        technologiesStore.getAll(),\n      ]\n      try {\n        const results = await Promise.all(promises)\n        this.homePage = new HomePage(\n          results[0] as Introduction,\n          (results[1] as Employment[]).sort((a, b) =>\n            descending(a.tillDate, b.tillDate),\n          ),\n          (results[2] as Project[]).sort((a, b) => descending(a.date, b.date)),\n          results[3] as Url,\n          results[4] as Technology[],\n        )\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    goToTechDetails(technology: Technology) {\n      this.technology = technology\n      this.$router.push({ path: `/technologies/${technology.id}` })\n    },\n    async checkTechnologyDetails() {\n      if (this.technology === undefined) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        this.technology = (await technologiesStore.getById(\n          routeId,\n        )) as Technology\n      }\n    },\n    goToEmploymentDetails(employment: Employment) {\n      this.employment = employment\n      this.$router.push({ path: `/employment/${employment.id}` })\n    },\n    async checkEmploymentDetails() {\n      if (this.employment === undefined) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        this.employment = (await employmentStore.getById(routeId)) as Employment\n      }\n    },\n    async checkProjectDetails() {\n      if (this.project === undefined) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        this.project = (await projectStore.getById(routeId)) as Project\n      }\n    },\n    goToProjectDetails(project: Project) {\n      this.project = project\n      this.$router.push({ path: `/project/${project.id}` })\n    },\n    back() {\n      this.project = undefined\n      this.employment = undefined\n      this.$router.back()\n    },\n  },\n})\n\nconst descending = (a: Date, b: Date) => b.getTime() - a.getTime()\n","<template>\n  <div class=\"rounded-2xl border border-zinc-100 p-6 dark:border-zinc-700/40\">\n    <div class=\"flex gap-4 items-center\">\n      <v-icon\n        name=\"fa-code\"\n        scale=\"1.5\"\n        class=\"text-zinc-200\" />\n      <h2 class=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n        Technologies\n      </h2>\n    </div>\n    <div class=\"grid grid-cols-4 mt-6 gap-8\">\n      <div\n        v-for=\"technology in props.data\"\n        v-bind:key=\"technology.name\"\n        class=\"dark:hover:bg-zinc-800 rounded-lg -m-2 p-2\">\n        <technology-item\n          @click=\"goToTechDetails(technology)\"\n          :data=\"technology\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Technology } from \"@home/domain\"\n  import technologyItem from \"./technology-item.vue\"\n  import { useHomePageStore } from \"../home.store\"\n  const props = defineProps<{ data: Technology[] }>()\n  const store = useHomePageStore()\n  const { goToTechDetails } = store\n</script>\n","<template>\n  <div class=\"flex flex-row flex-wrap gap-2\">\n    <div class=\"grow flex flex-row gap-2\">\n      <div\n        class=\"flex h-10 w-10 items-center justify-center rounded-full shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0\">\n        <img\n          alt=\"\"\n          loading=\"lazy\"\n          decoding=\"async\"\n          data-nimg=\"1\"\n          class=\"h-9 w-9 rounded-full\"\n          style=\"color: transparent\"\n          :src=\"data.employerIcon.path\"\n          width=\"32\"\n          height=\"32\" />\n      </div>\n      <div class=\"flex flex-col\">\n        <div class=\"text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n          {{ props.data.employer }}\n        </div>\n        <div class=\"text-xs text-zinc-500 dark:text-zinc-400\">\n          {{ props.data.role }}\n        </div>\n      </div>\n    </div>\n    <div class=\"flex\">\n      <div\n        class=\"pl-12 text-xs text-zinc-400 dark:text-zinc-500 mb-1 place-self-end\">\n        {{ dateFormat(props.data.fromDate) }} -\n        {{ dateFormat(props.data.tillDate) }}\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Employment } from \"@home/domain\"\n  const props = defineProps<{ data: Employment }>()\n\n  const dateFormat = (date: Date) =>\n    new Intl.DateTimeFormat(\"en\", {\n      year: \"numeric\",\n      month: \"short\",\n    }).format(date)\n</script>\n","<template>\n  <svg\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    aria-hidden=\"true\"\n    class=\"h-4 w-4 stroke-zinc-400 transition group-active:stroke-zinc-600 dark:group-hover:stroke-zinc-50 dark:group-active:stroke-zinc-50\">\n    <path\n      d=\"M4.75 8.75 8 12.25m0 0 3.25-3.5M8 12.25v-8.5\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"></path>\n  </svg>\n</template>\n","<template>\n  <div class=\"rounded-2xl border border-zinc-100 p-6 dark:border-zinc-700/40\">\n    <div class=\"flex gap-4 items-center\">\n      <v-icon\n        name=\"fa-users\"\n        scale=\"1.5\"\n        class=\"text-zinc-200\" />\n      <h2 class=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n        Teams\n      </h2>\n    </div>\n    <ol class=\"mt-6 space-y-4\">\n      <li\n        class=\"dark:hover:bg-zinc-800 rounded-lg -m-2 p-2\"\n        v-for=\"employment in props.data\"\n        @click=\"goToEmploymentDetails(employment)\"\n        v-bind:key=\"employment.employer\">\n        <employment-item :data=\"employment\" />\n      </li>\n    </ol>\n    <a\n      class=\"inline-flex items-center gap-2 justify-center rounded-md py-2 px-3 text-sm outline-offset-2 transition active:transition-none bg-zinc-50 font-medium text-zinc-900 hover:bg-zinc-100 active:bg-zinc-100 active:text-zinc-900/60 dark:bg-zinc-800/50 dark:text-zinc-300 dark:hover:bg-zinc-800 dark:hover:text-zinc-50 dark:active:bg-zinc-800/50 dark:active:text-zinc-50/70 mt-6 w-full\"\n      :href=\"props.document.path\"\n      >Download CV\n      <download-icon />\n    </a>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Employment, Url } from \"@home/domain\"\n  import employmentItem from \"@/ui/home/employment/employment-item.vue\"\n  import downloadIcon from \"@/assets/icons/download-icon.vue\"\n  import { useHomePageStore } from \"../home.store\"\n  const props = defineProps<{ data: Employment[]; document: Url }>()\n  const store = useHomePageStore()\n  const { goToEmploymentDetails } = store\n</script>\n","<template>\n  <svg\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    class=\"h-6 w-6 flex-none\">\n    <path\n      d=\"M15.712 11.823a.75.75 0 1 0 1.06 1.06l-1.06-1.06Zm-4.95 1.768a.75.75 0 0 0 1.06-1.06l-1.06 1.06Zm-2.475-1.414a.75.75 0 1 0-1.06-1.06l1.06 1.06Zm4.95-1.768a.75.75 0 1 0-1.06 1.06l1.06-1.06Zm3.359.53-.884.884 1.06 1.06.885-.883-1.061-1.06Zm-4.95-2.12 1.414-1.415L12 6.344l-1.415 1.413 1.061 1.061Zm0 3.535a2.5 2.5 0 0 1 0-3.536l-1.06-1.06a4 4 0 0 0 0 5.656l1.06-1.06Zm4.95-4.95a2.5 2.5 0 0 1 0 3.535L17.656 12a4 4 0 0 0 0-5.657l-1.06 1.06Zm1.06-1.06a4 4 0 0 0-5.656 0l1.06 1.06a2.5 2.5 0 0 1 3.536 0l1.06-1.06Zm-7.07 7.07.176.177 1.06-1.06-.176-.177-1.06 1.06Zm-3.183-.353.884-.884-1.06-1.06-.884.883 1.06 1.06Zm4.95 2.121-1.414 1.414 1.06 1.06 1.415-1.413-1.06-1.061Zm0-3.536a2.5 2.5 0 0 1 0 3.536l1.06 1.06a4 4 0 0 0 0-5.656l-1.06 1.06Zm-4.95 4.95a2.5 2.5 0 0 1 0-3.535L6.344 12a4 4 0 0 0 0 5.656l1.06-1.06Zm-1.06 1.06a4 4 0 0 0 5.657 0l-1.061-1.06a2.5 2.5 0 0 1-3.535 0l-1.061 1.06Zm7.07-7.07-.176-.177-1.06 1.06.176.178 1.06-1.061Z\"\n      fill=\"currentColor\"></path>\n  </svg>\n</template>\n","<template>\n  <div>\n    <div class=\"flex gap-4 items-center mb-4 ml-6\">\n      <v-icon\n        name=\"fa-briefcase\"\n        scale=\"1.5\"\n        class=\"text-zinc-200\" />\n      <h2 class=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n        Projects\n      </h2>\n    </div>\n    <ul\n      role=\"list\"\n      class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n      <li\n        v-for=\"project of props.data\"\n        :key=\"project.id\"\n        @click=\"goToProjectDetails(project)\">\n        <project-item :data=\"project\" />\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Project } from \"@home/domain\"\n  import projectItem from \"./project-item.vue\"\n  import { useHomePageStore } from \"../home.store\"\n  const props = defineProps<{ data: Project[] }>()\n  const store = useHomePageStore()\n  const { goToProjectDetails } = store\n</script>\n","import { Lead } from \"@home/domain\"\nimport { createLeadsStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface GetInTouchState {\n  lead: Lead\n  isInvalidEmail: boolean\n}\n\nconst defaultState: GetInTouchState = {\n  lead: new Lead(),\n  isInvalidEmail: false,\n}\n\nconst storage = createLeadsStorage()\n\nconst emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n\nexport const useGetInTouchStore = defineStore(\"home-web-get-in-touch-store\", {\n  state: () => defaultState,\n  actions: {\n    async send() {\n      if (!emailRegex.test(this.lead.email)) {\n        this.isInvalidEmail = true\n        return\n      }\n\n      const result = await storage.create(this.lead)\n      if (result instanceof Error) {\n        this.$toast.add({\n          severity: \"error\",\n          summary: \"🙁\",\n          detail: \"Ops something went wrong!\",\n          life: 6000,\n        })\n      } else {\n        this.$toast.add({\n          severity: \"success\",\n          summary: \"😊\",\n          detail: \"Thank you! I'll come back to you soon!\",\n          life: 6000,\n        })\n      }\n    },\n    resetInvalidEmail() {\n      this.isInvalidEmail = false\n    },\n  },\n})\n","<template>\n  <div\n    class=\"flex flex-col gap-4 rounded-2xl border border-zinc-100 p-6 dark:border-zinc-700/40\">\n    <div class=\"flex gap-4 items-center mb-4\">\n      <v-icon\n        name=\"fa-mail-bulk\"\n        scale=\"1.5\"\n        class=\"text-zinc-200\" />\n      <h2 class=\"text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n        Contact Me\n      </h2>\n    </div>\n    <div class=\"flex flex-wrap gap-4\">\n      <div class=\"flex-1 flex flex-col min-w-100\">\n        <h1 class=\"mb-1 font-semibold dark:text-zinc-400 text-sm\">E-Mail *</h1>\n        <input\n          class=\"rounded p-2\"\n          type=\"text\"\n          v-model=\"lead.email\" />\n        <div\n          v-if=\"isInvalidEmail\"\n          class=\"text-red-700 text-sm mt-1\">\n          Hmmm..., this doesn't look good\n        </div>\n      </div>\n      <div class=\"flex-1 flex flex-col min-w-100\">\n        <h1 class=\"mb-1 font-semibold dark:text-zinc-400 text-sm\">Name</h1>\n        <input\n          class=\"rounded p-2 flex-1\"\n          text=\"text\"\n          v-model=\"lead.name\" />\n      </div>\n    </div>\n    <div>\n      <h1 class=\"mb-1 font-semibold dark:text-zinc-400 text-sm\">Subject *</h1>\n      <input\n        class=\"rounded p-2 w-[100%]\"\n        type=\"text\"\n        v-model=\"lead.subject\" />\n    </div>\n    <div>\n      <h1 class=\"mb-1 font-semibold dark:text-zinc-400 text-sm\">Message *</h1>\n      <textarea\n        class=\"rounded p-2 w-[100%] h-40\"\n        type=\"text\"\n        v-model=\"lead.message\" />\n    </div>\n    <div class=\"flex flex-row-reverse\">\n      <button\n        class=\"inline-flex items-center gap-2 justify-center rounded-md py-2 px-3 text-sm outline-offset-2 transition active:transition-none bg-zinc-50 text-zinc-900 hover:bg-zinc-100 active:bg-zinc-100 active:text-zinc-900/60 dark:bg-zinc-800/50 dark:text-zinc-300 dark:hover:bg-zinc-800 dark:hover:text-zinc-50 dark:active:bg-zinc-800/50 dark:active:text-zinc-50/70 mt-2 w-[35%] font-extrabold\"\n        type=\"submit\"\n        @click=\"send\">\n        Send\n      </button>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useGetInTouchStore } from \"./get-in-touch.store\"\n  import { storeToRefs } from \"pinia\"\n  import { watch } from \"vue\"\n  const store = useGetInTouchStore()\n  const { lead, isInvalidEmail } = storeToRefs(store)\n  const { send, resetInvalidEmail } = store\n  watch(\n    () => lead.value.email,\n    (_, _1) => resetInvalidEmail(),\n  )\n</script>\n","<template>\n  <div class=\"p-12 pt-24\">\n    <Loading\n      :data=\"data\"\n      :error=\"error\">\n      <introduction\n        id=\"about\"\n        class=\"mb-12\"\n        :data=\"data.introduction\" />\n      <technology-list\n        id=\"technologies\"\n        class=\"mb-12\"\n        :data=\"data.tehnologies\" />\n      <employement-list\n        id=\"teams\"\n        :data=\"data.employments\"\n        :document=\"data.cvDocument\" />\n      <div\n        id=\"projects\"\n        class=\"mb-12\" />\n      <projects-list\n        class=\"mb-12\"\n        :data=\"data.projects\" />\n      <get-in-touch-form id=\"contact\" />\n    </Loading>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Loading } from \"@ui/components\"\n  import introduction from \"@/ui/home/introduction/introduction.vue\"\n  import technologyList from \"@/ui/home/technology/technology-list.vue\"\n  import employementList from \"@/ui/home/employment/employment-list.vue\"\n  import projectsList from \"@/ui/home/projects/project-list.vue\"\n  import getInTouchForm from \"@/ui/home/get-in-touch/get-in-touch-form.vue\"\n  import { useHomePageStore } from \"./home.store\"\n  import { onMounted } from \"vue\"\n  import { storeToRefs } from \"pinia\"\n  const store = useHomePageStore()\n  const { homePage: data, error } = storeToRefs(store)\n  onMounted(store.init)\n</script>\n","<template>\n  <div\n    class=\"rounded-full border-2 dark:text-zinc-200 w-10 h-10 place-items-center flex justify-center\"\n    @click=\"back\">\n    <v-icon name=\"fa-arrow-left\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useHomePageStore } from \"../home/home.store\"\n  const store = useHomePageStore()\n  const { back } = store\n</script>\n","<template>\n  <div class=\"min-h-screen flex flex-col gap-6 p-6\">\n    <back-button />\n\n    <div class=\"flex justify-center items-center gap-4 mb-12\">\n      <span class=\"text-5xl\">Technologies stack</span>\n    </div>\n\n    <div\n      v-for=\"technology of technologies\"\n      v-bind:key=\"technology.id\"\n      class=\"flex flex-col gap-4\">\n      <div class=\"flex flex-row gap-4 items-center\">\n        <div class=\"flex flex-col items-center w-40 gap-2\">\n          <img\n            class=\"w-10 h-10 rounded-full\"\n            :src=\"technology.icon.path\" />\n          <div class=\"text-center\">{{ technology.name }}</div>\n        </div>\n        <progress-bar\n          class=\"w-full\"\n          :value=\"technology.percentage\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { storeToRefs } from \"pinia\"\n  import backButton from \"../components/back-button.vue\"\n  import { useHomePageStore } from \"../home/home.store\"\n  import ProgressBar from \"primevue/progressbar\"\n  import { computed, onMounted } from \"vue\"\n  import { Technology } from \"@home/domain\"\n  const store = useHomePageStore()\n  const { homePage, technology } = storeToRefs(store)\n  onMounted(store.checkTechnologyDetails)\n  const technologies = computed({\n    get: (): Technology[] => {\n      const rest =\n        homePage.value.tehnologies.filter(\n          it => it.id !== technology?.value?.id,\n        ) ?? []\n      return [\n        technology?.value!!,\n        ...rest.sort((a, b) => b.percentage - a.percentage),\n      ]\n    },\n    set: () => {},\n  })\n</script>\n","<template>\n  <div class=\"flex flex-col gap-6 p-6 overflow-hidden min-h-screen\">\n    <back-button />\n\n    <div class=\"flex justify-center items-center gap-6 mb-6\">\n      <img\n        class=\"rounded-full w-16 h-16\"\n        :src=\"employment?.employerIcon.path\" />\n      <div class=\"text-5xl\">{{ employment?.employer }}</div>\n    </div>\n\n    <div class=\"grid grid-cols-2 gap-6\">\n      <div class=\"text-right\">Position role</div>\n      <div>{{ employment?.role }}</div>\n      <div class=\"text-right\">Location</div>\n      <div>{{ employment?.location }}</div>\n      <div class=\"text-right\">\n        {{ dateFormat(employment?.fromDate ?? new Date()) }}\n      </div>\n      <div>{{ dateFormat(employment?.tillDate ?? new Date()) }}</div>\n    </div>\n\n    <div class=\"flex p-6\">\n      <div v-html=\"employment?.description\" />\n    </div>\n\n    <div\n      v-if=\"!isEmpty(employment?.subEmployments)\"\n      class=\"flex p-6\">\n      <div class=\"text-xl\">Clients</div>\n    </div>\n\n    <div\n      class=\"grid grid-cols-2 p-6 gap-4\"\n      v-for=\"sub of employment?.subEmployments\"\n      :key=\"sub.id\">\n      <div class=\"flex items-center gap-4\">\n        <img\n          class=\"rounded-full w-10 h-10\"\n          :src=\"sub.employerIcon.path\" />\n        <div>{{ sub.employer }}, {{ sub.location }}</div>\n        <div>{{ sub.role }}</div>\n      </div>\n      <div class=\"flex items-center place-content-end\">\n        <div>\n          {{ dateFormat(sub.fromDate) }} - {{ dateFormat(sub.tillDate) }}\n        </div>\n      </div>\n      <div\n        class=\"col-span-2\"\n        v-html=\"sub.description\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import backButton from \"@/ui/components/back-button.vue\"\n  import { useHomePageStore } from \"../home/home.store\"\n  import { isEmpty } from \"lodash\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useHomePageStore()\n  const { employment } = storeToRefs(store)\n  onMounted(store.checkEmploymentDetails)\n  const dateFormat = (date: Date) =>\n    new Intl.DateTimeFormat(\"en\", {\n      year: \"numeric\",\n      month: \"long\",\n    }).format(date)\n</script>\n","<template>\n  <div class=\"flex flex-col gap-6 p-6\">\n    <back-button />\n\n    <div class=\"flex justify-center items-center gap-4\">\n      <img\n        class=\"rounded-full -p-4 w-20 h-20\"\n        :src=\"project?.logo.path\" />\n      <span class=\"text-5xl\">{{ project?.title }}</span>\n    </div>\n\n    <div class=\"flex justify-center items-center\">\n      <span class=\"text-2xl\">{{ project?.owner }}</span>\n    </div>\n\n    <div class=\"flex justify-center\">\n      <span\n        class=\"text-xl\"\n        v-html=\"project?.contributions\" />\n    </div>\n\n    <div class=\"flex justify-center\">\n      <span\n        class=\"text-xl\"\n        v-html=\"project?.description\" />\n    </div>\n\n    <div\n      v-if=\"\n        !isEmpty(project?.storeURL.path) || !isEmpty(project?.sourceURL.path)\n      \"\n      class=\"flex justify-center items-center gap-8\">\n      <a\n        v-if=\"!isEmpty(project?.storeURL.path)\"\n        :href=\"project?.storeURL.path\">\n        <v-icon\n          class=\"w-10 h-10\"\n          name=\"fa-google-play\" />\n      </a>\n      <a\n        v-if=\"!isEmpty(project?.sourceURL.path)\"\n        :href=\"project?.sourceURL.path\">\n        <v-icon\n          class=\"w-10 h-10\"\n          name=\"fa-github\" />\n      </a>\n    </div>\n\n    <div class=\"flex place-items-center justify-center\">\n      <div\n        class=\"min-[320px]:w-3/4 min-[320px]:h-3/4 sm:w-2/3 sm:h-2/3 md:w-1/2 md:h-1/2 lg:w-1/3 lg:h-1/3 xl:w-1/4 xl:h-1/4\">\n        <Galleria\n          :value=\"project?.screenshots\"\n          :numVisible=\"8\"\n          :circular=\"true\"\n          :showItemNavigators=\"true\"\n          :showThumbnailNavigators=\"false\">\n          <template #item=\"slotProps\">\n            <img\n              class=\"object-contain w-full h-full\"\n              :src=\"slotProps.item.path\" />\n          </template>\n          <template #thumbnail=\"slotProps\">\n            <img\n              class=\"aspect-square object-fit w-20 h-20\"\n              :src=\"slotProps.item.path\" />\n          </template>\n        </Galleria>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Galleria from \"primevue/galleria\"\n  import backButton from \"@/ui/components/back-button.vue\"\n  import { useHomePageStore } from \"../home/home.store\"\n  import { isEmpty } from \"lodash\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const state = useHomePageStore()\n  const { project } = storeToRefs(state)\n  onMounted(state.checkProjectDetails)\n</script>\n","import HomePage from \"@/ui/home/page.vue\"\nimport TechnologyPage from \"@/ui/tech/page.vue\"\nimport EmploymentPage from \"@/ui/employment/page.vue\"\nimport ProjectPage from \"@/ui/project/page.vue\"\nimport GetInTouchPage from \"@/ui/home/get-in-touch/page.vue\"\nimport { RouteRecordRaw } from \"vue-router\"\n\nexport const HomeRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: HomePage,\n  },\n  {\n    path: \"/technologies/:id\",\n    component: TechnologyPage,\n  },\n  {\n    path: \"/employment/:id\",\n    component: EmploymentPage,\n  },\n  {\n    path: \"/project/:id\",\n    component: ProjectPage,\n  },\n  {\n    path: \"/get-in-touch\",\n    component: GetInTouchPage,\n  },\n]\n","import { BlogPost } from \"@blog/domain\"\nimport { v4, validate } from \"uuid\"\nimport {\n  collection,\n  updateDoc,\n  query,\n  getDocs,\n  doc,\n  deleteDoc,\n  setDoc,\n  getDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { firestoreApp } from \"@config/firebase\"\n\ninterface BlogPostStorage {\n  getAll: () => Promise<BlogPost[] | Error>\n  getById: (id: string) => Promise<BlogPost | undefined | Error>\n  create: (post: BlogPost) => Promise<BlogPost | Error>\n  update: (post: BlogPost) => Promise<BlogPost | Error>\n  delete: (posts: BlogPost[]) => Promise<void | Error>\n}\n\nexport const createBlogPostStorage = (\n  _collection = \"/blog/content\",\n  _document = \"/blog-posts\",\n): BlogPostStorage => ({\n  getAll: async () => await getAll(_collection, _document),\n  getById: async (id: string) => await getById(id, _collection, _document),\n  create: async (post: BlogPost) => await create(post, _collection, _document),\n  update: async (post: BlogPost) => await update(post, _collection, _document),\n  delete: async (posts: BlogPost[]) =>\n    await deletes(posts, _collection, _document),\n})\n\nconst getAll = async (\n  _collection: string,\n  _document: string,\n): Promise<BlogPost[] | Error> => {\n  const queryRef = query(collection(firestoreApp(), _collection, _document))\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst getById = async (\n  id: string,\n  _collection: string,\n  _document: string,\n): Promise<BlogPost | undefined | Error> => {\n  const docRef = doc(firestoreApp(), _collection, _document, id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst create = async (\n  post: BlogPost,\n  collection_: string,\n  document_: string,\n): Promise<BlogPost | Error> => {\n  const collRef = collection(firestoreApp(), collection_, document_)\n  try {\n    const document = toFirebase(post)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    console.error(error)\n    return Error(error)\n  }\n}\n\nconst update = async (\n  post: BlogPost,\n  _collection: string,\n  _document: string,\n): Promise<BlogPost | Error> => {\n  const docRef = doc(firestoreApp(), _collection, _document, post.id)\n  try {\n    const doc = toFirebase(post)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst deletes = async (\n  posts: BlogPost[],\n  _collection: string,\n  _document: string,\n): Promise<void | Error> => {\n  for (const post of posts) {\n    const docRef = doc(firestoreApp(), _collection, _document, post.id)\n    try {\n      await deleteDoc(docRef)\n    } catch (error) {\n      console.error(error)\n      return Error(error)\n    }\n  }\n  return\n}\n\nconst toFirebase = (post: BlogPost) => {\n  const { id, publishedAt, ...rest } = post\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    publishedAt: Timestamp.fromDate(publishedAt),\n    ...rest,\n  }\n}\n\nconst fromFirebase = (post: any): BlogPost => {\n  const { publishedAt, ...rest } = post\n  return {\n    publishedAt: publishedAt.toDate() ?? new Date(),\n    ...rest,\n  }\n}\n","import { BlogPost } from \"@blog/domain\"\nimport { createBlogPostStorage } from \"@blog/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface BlogState {\n  blogPosts: BlogPost[]\n  filteredBlogPosts: BlogPost[]\n  blogPostDetails?: BlogPost\n  isLoading: boolean\n  error?: Error\n  tags: string[]\n  selectedTags: string[]\n}\n\nconst defaultState: BlogState = {\n  blogPosts: [],\n  filteredBlogPosts: [],\n  isLoading: false,\n  blogPostDetails: undefined,\n  error: undefined,\n  tags: [],\n  selectedTags: [],\n}\n\nconst storage = createBlogPostStorage()\n\nexport const useBlogStore = defineStore(\"blog-web-store\", {\n  state: () => defaultState,\n  getters: {\n    getBlogPostById: state => (id: string) =>\n      state.blogPosts.find(it => it.id === id),\n  },\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n    async fetch() {\n      try {\n        this.isLoading = true\n        this.blogPosts = ((await storage.getAll()) as BlogPost[]).sort(\n          sortDescending,\n        )\n        this.filteredBlogPosts = this.blogPosts\n        this.tags = [...new Set(this.blogPosts.flatMap(it => it.tags))]\n      } catch (error) {\n        console.error(error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n    async goTo(id: string) {\n      this.blogPostDetails = this.getBlogPostById(id)\n      this.$router.push({ path: `/blog/${id}` })\n    },\n    async checkBlogPostDetails() {\n      if (!this.blogPostDetails) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        await this.fetch()\n        this.blogPostDetails = this.getBlogPostById(routeId)\n      }\n    },\n    selectTag(tag: string) {\n      if (this.selectedTags.includes(tag)) {\n        this.selectedTags = this.selectedTags.filter(it => it !== tag)\n      } else {\n        this.selectedTags = [tag, ...this.selectedTags]\n      }\n      if (this.selectedTags.length > 0) {\n        this.filteredBlogPosts = this.blogPosts.filter(\n          it => it.tags.filter(it => this.selectedTags.includes(it)).length > 0,\n        )\n      } else {\n        this.filteredBlogPosts = this.blogPosts\n      }\n    },\n    back() {\n      this.$router.back()\n    },\n  },\n})\n\nconst sortDescending = (a: BlogPost, b: BlogPost) =>\n  b.publishedAt.getTime() - a.publishedAt.getTime()\n","<template>\n  <div class=\"flex flex-row flex-wrap gap-4 pr-10 pl-10 p-6\">\n    <div\n      v-for=\"tag of tags\"\n      v-bind:key=\"tag\">\n      <Chip\n        :style=\"style(tag)\"\n        :label=\"tag\"\n        @click=\"selectTag(tag)\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Chip from \"primevue/chip\"\n  import { useBlogStore } from \"../store\"\n  import { storeToRefs } from \"pinia\"\n\n  const store = useBlogStore()\n  const selected = \"background-color: teal;\"\n  const style = (name: string) =>\n    selectedTags.value.includes(name) ? selected : \"\"\n  const { tags, selectedTags } = storeToRefs(store)\n  const { selectTag } = store\n</script>\n","<template>\n  <div class=\"min-h-screen\">\n    <div class=\"text-4xl font-bold p-8 pt-24 text-center\">Tech Blog</div>\n    <list-tags />\n    <div\n      class=\"flex flex-col p-10\"\n      v-for=\"blogPost of filteredBlogPosts\"\n      :key=\"blogPost.id\">\n      <list-item\n        :post=\"blogPost\"\n        @click=\"goTo(blogPost.id)\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { onMounted } from \"vue\"\n  import { useBlogStore } from \"../store\"\n  import { storeToRefs } from \"pinia\"\n  import listItem from \"./list-item.vue\"\n  import listTags from \"./list-tags.vue\"\n  const store = useBlogStore()\n  const { filteredBlogPosts } = storeToRefs(store)\n  const { goTo } = store\n  onMounted(store.init)\n</script>\n","<template>\n  <div\n    class=\"rounded-full border-2 dark:text-zinc-200 w-10 h-10 place-items-center flex justify-center\"\n    @click=\"back\">\n    <v-icon name=\"fa-arrow-left\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useBlogStore } from \"../store\"\n  const store = useBlogStore()\n  const { back } = store\n</script>\n","<template>\n  <div class=\"min-h-screen p-6\">\n    <back-button />\n    <article\n      class=\"p-12 pt-28\"\n      v-if=\"blogPostDetails\">\n      <header class=\"flex flex-col\">\n        <h1\n          class=\"mt-6 text-4xl font-bold tracking-tight text-zinc-800 dark:text-zinc-100 sm:text-5xl mb-8 text-center\">\n          {{ blogPostDetails.title }}\n        </h1>\n        <time\n          datetime=\"2022-09-05\"\n          class=\"mt-2 flex items-center text-base text-zinc-400 dark:text-zinc-500\"\n          ><span\n            class=\"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500\"></span\n          ><span class=\"ml-3\">{{\n            blogPostDetails.publishedAt.toDateString()\n          }}</span></time\n        >\n      </header>\n\n      <div\n        class=\"mt-8 ck-content\"\n        v-code-highlight\n        v-html=\"blogPostDetails.content\" />\n    </article>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import backButton from \"@/ui/components/back-button.vue\"\n  import { onMounted } from \"vue\"\n  import { useBlogStore } from \"../store\"\n  import { storeToRefs } from \"pinia\"\n  import hljs from \"highlight.js\"\n  import \"highlight.js/styles/panda-syntax-dark.css\"\n\n  const store = useBlogStore()\n  const { blogPostDetails } = storeToRefs(store)\n  onMounted(store.checkBlogPostDetails)\n\n  const vCodeHighlight = {\n    mounted: (el: HTMLElement) => {\n      el.querySelectorAll(\"code\").forEach(hljs.highlightElement)\n    },\n  }\n</script>\n\n<style scoped>\n  :deep(.ck-content pre) {\n    background: black;\n    padding: 16px;\n    border: 2cap;\n    border-radius: 8px;\n  }\n</style>\n","import { RouteRecordRaw } from \"vue-router\"\nimport BlogList from \"@/ui/blog-list/page.vue\"\nimport BlogPost from \"@/ui/blog-post/page.vue\"\n\nexport const BlogRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: BlogList,\n  },\n  {\n    path: \":id\",\n    component: BlogPost,\n  },\n]\n","import { createAppAuthStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\nimport { ref } from \"vue\"\n\nconst storage = createAppAuthStorage()\n\nexport const useAuthStore = defineStore(\"admin-web-auth-store\", {\n  state: async () => ({\n    isLoggedIn: ref(await storage.isLoggedIn()),\n  }),\n  actions: {\n    async logout() {\n      await storage.signOut()\n      this.$router.replace({ path: \"/login\" })\n    },\n    goTo(path: any) {\n      this.$router.replace({ path: path })\n    },\n  },\n})\n","<template>\n  <div class=\"flex h-screen flex-col justify-between dark:bg-zinc-900\">\n    <div class=\"px-4\">\n      <nav\n        aria-label=\"Main Nav\"\n        class=\"mt-6 flex flex-col space-y-1\">\n        <details class=\"group group-open [&_summary::-webkit-details-marker]\">\n          <summary\n            class=\"flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\">\n            <div class=\"flex items-center gap-2\">\n              <v-icon\n                name=\"fa-home\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Home </span>\n            </div>\n            <span\n              class=\"shrink-0 transition duration-300 group-open:-rotate-180\">\n            </span>\n          </summary>\n\n          <nav\n            aria-label=\"Teams Nav\"\n            class=\"mt-2 flex flex-col px-4\">\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/introduction')\">\n              <v-icon\n                name=\"fa-address-card\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Introduction </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/employments')\">\n              <v-icon\n                name=\"fa-algolia\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Employments </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/upload-cv')\">\n              <v-icon\n                name=\"fa-file-upload\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Upload Cv </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/projects')\">\n              <v-icon\n                name=\"fa-briefcase\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Projects </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/technologies')\">\n              <v-icon\n                name=\"fa-stack-overflow\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Technologies </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/leads')\">\n              <v-icon\n                name=\"fa-person-booth\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Leads </span>\n            </a>\n          </nav>\n        </details>\n\n        <details class=\"group [&_summary::-webkit-details-marker]\">\n          <summary\n            class=\"flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\">\n            <div class=\"flex items-center gap-2\">\n              <v-icon\n                name=\"fa-blog\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Blog </span>\n            </div>\n            <span\n              class=\"shrink-0 transition duration-300 group-open:-rotate-180\">\n            </span>\n          </summary>\n\n          <nav\n            aria-label=\"Teams Nav\"\n            class=\"mt-2 flex flex-col px-4\">\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/blog/new')\">\n              <v-icon\n                name=\"fa-plus-circle\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Create post </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/blog')\">\n              <v-icon\n                name=\"fa-leanpub\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Manage posts </span>\n            </a>\n          </nav>\n        </details>\n\n        <summary\n          @click=\"store.logout()\"\n          class=\"flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\">\n          <div class=\"flex items-center gap-2\">\n            <v-icon\n              name=\"fa-sign-out-alt\"\n              scale=\"1.5\"\n              class=\"text-red-500\" />\n            <span class=\"text-sm font-medium\"> Logout </span>\n          </div>\n\n          <span class=\"shrink-0 transition duration-300 group-open:-rotate-180\">\n          </span>\n        </summary>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useAuthStore } from \"./admin.store\"\n  const store = useAuthStore()\n</script>\n","<template>\n  <div class=\"flex flex-col\">\n    <Sidebar v-model:visible=\"menuToggle\">\n      <side-nav-vue />\n    </Sidebar>\n    <div\n      class=\"mt-6 ml-6\"\n      @click=\"menuToggle = !menuToggle\">\n      <v-icon\n        name=\"fa-hamburger\"\n        scale=\"1.8\" />\n      <span class=\"ml-2\">Menu</span>\n    </div>\n    <router-view />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Sidebar from \"primevue/sidebar\"\n  import sideNavVue from \"@/ui/dashboard/side-nav.vue\"\n  import { ref } from \"vue\"\n  const menuToggle = ref<boolean>(false)\n</script>\n","import { ToastMessageOptions } from \"primevue/toast\"\n\nconst timeout = 3000\n\nexport const successToast = (message?: string): ToastMessageOptions => ({\n  severity: \"success\",\n  summary: \"Success\",\n  detail: message,\n  life: timeout,\n})\n\nexport const errorToast = (message?: string): ToastMessageOptions => ({\n  severity: \"error\",\n  summary: \"Error\",\n  detail: message,\n  life: timeout,\n})\n\nexport const infoToast = (message?: string): ToastMessageOptions => ({\n  severity: \"info\",\n  summary: \"Info\",\n  detail: message,\n  life: timeout,\n})\n","import { Introduction } from \"@home/domain\"\nimport { defineStore } from \"pinia\"\nimport { createIntroductionStorage } from \"@home/web-services\"\nimport { successToast, errorToast } from \"@/shared/toast-message\"\n\ninterface IntroductionState {\n  introduction: Introduction\n  isLoading: boolean\n  error?: Error\n}\n\nconst defaultState: IntroductionState = {\n  introduction: new Introduction(),\n  isLoading: true,\n  error: undefined,\n}\n\nconst storage = createIntroductionStorage()\n\nexport const useIntroductionStore = defineStore(\n  \"home-web-admin-introduction-store\",\n  {\n    state: (): IntroductionState => defaultState,\n    actions: {\n      async init() {\n        await this.fetch()\n      },\n      async fetch() {\n        this.isLoading = true\n        this.error = undefined\n        try {\n          const result = (await storage.get()) as Introduction\n          this.introduction = result\n        } catch (error) {\n          this.error = error\n          console.error(error)\n        }\n        this.isLoading = false\n      },\n      async update() {\n        try {\n          const result = await storage.set(this.introduction)\n          this.introduction = result\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast(error))\n          console.error(error)\n        }\n      },\n    },\n  },\n)\n","<template>\n  <div class=\"flex flex-col w-full p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">\n      Update introduction section\n    </h1>\n\n    <div class=\"grid grid-cols-2 gap-4 w-full\">\n      <div class=\"flex flex-col gap-12 pt-6\">\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              class=\"w-full\"\n              id=\"title\"\n              v-model=\"introduction.title\" />\n            <label for=\"title\">Title</label>\n          </span>\n        </div>\n\n        <div class=\"field grow\">\n          <span class=\"p-float-label h-full\">\n            <TextArea\n              class=\"w-full h-full\"\n              id=\"description\"\n              v-model=\"introduction.description\" />\n            <label for=\"description\">Description</label>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"\">\n        <image-upload v-model=\"introduction.photo.path\" />\n      </div>\n    </div>\n\n    <Button\n      class=\"mt-6\"\n      label=\"Update\"\n      severity=\"info\"\n      @click=\"store.update()\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ImageUpload } from \"@ui/components\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Button from \"primevue/button\"\n  import { useIntroductionStore } from \"./introduction.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useIntroductionStore()\n  const { introduction } = storeToRefs(store)\n</script>\n","<template>\n  <Loading\n    :data=\"isLoading\"\n    :error=\"error\">\n    <edit-introduction />\n  </Loading>\n</template>\n\n<script setup lang=\"ts\">\n  import editIntroduction from \"@/ui/introduction/introduction.vue\"\n  import { Loading } from \"@ui/components\"\n  import { useIntroductionStore } from \"./introduction.store\"\n  import { onMounted } from \"vue\"\n  import { storeToRefs } from \"pinia\"\n  const store = useIntroductionStore()\n  const { isLoading, error } = storeToRefs(store)\n  onMounted(store.init)\n</script>\n","import { errorToast, successToast } from \"@/shared/toast-message\"\nimport { Url } from \"@home/domain\"\nimport { createCVDocumentStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface CVDocumentState {\n  document: Url\n}\n\nconst defaultState: CVDocumentState = {\n  document: { path: \"\" },\n}\n\nconst storage = createCVDocumentStorage()\n\nexport const useCVDocumentStore = defineStore(\n  \"home-web-admin-cv-document-store\",\n  {\n    state: () => defaultState,\n    actions: {\n      async init() {\n        const document = await storage.get()\n        this.document = document\n      },\n\n      async upload() {\n        try {\n          const document = await storage.set(this.document)\n          this.document = document\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast())\n          console.error(error)\n        }\n      },\n    },\n  },\n)\n","<template>\n  <div class=\"container p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Upload CV Document</h1>\n    <div class=\"flex flex-wrap mb-6\">\n      <document-upload v-model=\"document.path\" />\n    </div>\n    <div class=\"flex flex-wrap\">\n      <Button\n        label=\"Upload\"\n        severity=\"info\"\n        @click=\"upload\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { DocumentUpload } from \"@ui/components\"\n  import Button from \"primevue/button\"\n  import { useCVDocumentStore } from \"./upload-cv.store\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useCVDocumentStore()\n  const { document } = storeToRefs(store)\n  const { upload } = store\n  onMounted(store.init)\n</script>\n","import { Employment, SubEmployment } from \"@home/domain\"\nimport { defineStore } from \"pinia\"\nimport { createEmploymentStorage } from \"@home/web-services\"\nimport { isEmpty } from \"lodash\"\nimport { successToast, errorToast } from \"@/shared/toast-message\"\n\nconst storage = createEmploymentStorage()\n\ninterface EmploymentsState {\n  employments: Employment[]\n  selected: Employment[]\n  expanded: Employment[]\n\n  item?: Employment\n  subSelected: SubEmployment[]\n  isItemNew: boolean\n\n  subItem?: SubEmployment\n  isSubItemNew: boolean\n\n  error?: Error\n}\n\nconst defaultState: EmploymentsState = {\n  employments: [],\n  selected: [],\n  expanded: [],\n\n  item: undefined,\n  subSelected: [],\n  isItemNew: true,\n\n  subItem: undefined,\n  isSubItemNew: true,\n\n  error: undefined,\n}\n\nexport const useListStore = defineStore(\"home-web-employments-list-store\", {\n  state: (): EmploymentsState => defaultState,\n  getters: {\n    isEditDisabled: state => state.selected.length !== 1,\n    isDeleteDiasabled: state => state.selected.length === 0,\n    isItemEditDisabled: state => state.subSelected.length !== 1,\n    isItemDeleteDisabled: state => state.subSelected.length === 0,\n  },\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n\n    async fetch() {\n      const result = await storage.getAll()\n      this.employments = Array.isArray(result) ? (result as Employment[]) : []\n      this.error = result instanceof Error ? result : undefined\n    },\n\n    async newItem() {\n      this.isItemNew = true\n      this.item = new Employment()\n      this.selected = []\n      this.$router.push({ path: `/admin/employments/${this.item.id}` })\n    },\n\n    async editItem() {\n      this.isItemNew = false\n      this.item = this.selected[0]\n      this.selected = []\n      this.$router.push({ path: `/admin/employments/${this.item.id}` })\n    },\n\n    async saveItem() {\n      if (this.isItemNew && !isEmpty(this.item)) {\n        const item = (await storage.create(this.item)) as Employment\n        this.employments = [\n          ...this.employments.filter(it => it.id !== item.id),\n          item,\n        ]\n      } else if (!this.isItemNew && !isEmpty(this.item)) {\n        const item = (await storage.update(this.item)) as Employment\n        this.employments = [\n          ...this.employments.filter(it => it.id !== item.id),\n          item,\n        ]\n      }\n      this.cancelItem()\n    },\n\n    async deleteItems() {\n      await this.delete()\n    },\n\n    async cancelItem() {\n      this.$router.back()\n      this.isItemNew = false\n      this.item = undefined\n      this.subSelected = []\n    },\n\n    async newSubItem() {\n      this.isSubItemNew = true\n      this.subItem = new SubEmployment()\n      this.subSelected = []\n      this.$router.push({\n        path: `/admin/employments/${this.item!!.id}/sub/${this.subItem.id}`,\n      })\n    },\n\n    async editSubItem() {\n      this.isSubItemNew = false\n      this.subItem = this.subSelected[0]\n      this.subSelected = []\n      this.$router.push({\n        path: `/admin/employments/${this.item!!.id}/sub/${this.subItem.id}`,\n      })\n    },\n\n    async deleteSubItem() {\n      const subs: SubEmployment[] =\n        this.item?.subEmployments.filter(\n          it => !this.subSelected.includes(it),\n        ) ?? []\n      this.item = { ...this.item!, subEmployments: subs }\n    },\n\n    async saveSubItem() {\n      const subs: SubEmployment[] = [\n        ...this.item!.subEmployments.filter(it => it.id !== this.item!.id),\n        this.subItem!,\n      ]\n      this.item = { ...this.item!, subEmployments: subs }\n      this.cancelSubItem()\n    },\n\n    async cancelSubItem() {\n      this.$router.back()\n      this.isSubItemNew = true\n      this.subItem = undefined\n    },\n\n    async create(employment: Employment) {\n      try {\n        ;(await storage.create(employment)) as Employment\n        await this.fetch()\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error))\n        console.error(error)\n      }\n    },\n\n    async update(employment: Employment) {\n      try {\n        await storage.update(employment)\n        await this.fetch()\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error))\n        console.error(error)\n      }\n    },\n\n    async delete() {\n      try {\n        await storage.delete(this.selected)\n        await this.fetch()\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error))\n        console.error(error)\n      }\n    },\n  },\n})\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Update employment section</h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isEditDisabled\"\n        size=\"small\"\n        @click=\"editItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDiasabled\"\n        size=\"small\"\n        @click=\"deleteItems\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :value=\"employments\"\n      v-model:selection=\"selected\"\n      v-model:expanded-rows=\"expanded\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column expander />\n      <Column\n        field=\"employerIcon\"\n        header=\"Logo\">\n        <template #body=\"{ data }\">\n          <img\n            class=\"w-8 h-8 rounded-lg\"\n            :src=\"data.employerIcon.path\" />\n        </template>\n      </Column>\n      <Column\n        field=\"employer\"\n        header=\"Employer\">\n      </Column>\n      <Column\n        field=\"role\"\n        header=\"Role\" />\n      <Column\n        field=\"description\"\n        header=\"Description\" />\n      <Column\n        field=\"location\"\n        header=\"Location\">\n      </Column>\n      <Column\n        field=\"fromDate\"\n        header=\"From\"\n        sortable>\n        <template #body=\"{ data }\">{{ data.fromDate.toDateString() }}</template>\n      </Column>\n      <Column\n        field=\"tillDate\"\n        header=\"Till\"\n        sortable>\n        <template #body=\"{ data }\">{{ data.tillDate.toDateString() }}</template>\n      </Column>\n      <template #expansion=\"{ data }\">\n        <sub-list :employment=\"data\" />\n      </template>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Column from \"primevue/column\"\n  import DataTable from \"primevue/datatable\"\n  import subList from \"./sub-list.vue\"\n  import { onMounted } from \"vue\"\n  import { useListStore } from \"./list.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useListStore()\n  const { employments, selected, expanded, isEditDisabled, isDeleteDiasabled } =\n    storeToRefs(store)\n  const { newItem, editItem, deleteItems } = store\n  onMounted(store.init)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n  :deep(.p-datatable .p-datatable-tbody > .p-datatable-row-expansion > td) {\n    padding: 0px;\n    margin: 0px;\n  }\n</style>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"saveItem\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancelItem\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useListStore } from \"../list/list.store\"\n\n  const store = useListStore()\n  const { saveItem, cancelItem } = store\n</script>\n","<template>\n  <div\n    v-if=\"data !== undefined\"\n    class=\"mb-6\">\n    <div class=\"flex flex-wrap gap-8 pt-8 mb-6 overflow-auto\">\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"employer\"\n            v-model=\"data.employer\" />\n          <label for=\"employer\">Employer</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"role\"\n            v-model=\"data.role\" />\n          <label for=\"role\">Role</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"location\"\n            v-model=\"data.location\" />\n          <label for=\"employer\">Location</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <Calendar\n            id=\"fromDate\"\n            v-model=\"data.fromDate\" />\n          <label for=\"fromDate\">From date</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <Calendar\n            id=\"tillDate\"\n            v-model=\"data.tillDate\" />\n          <label for=\"tillDate\">Till date</label>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"field w-40 h-40 max-h-40 max-w-40 mb-6\">\n      <image-upload v-model=\"data.employerIcon.path\" />\n    </div>\n\n    <div class=\"field mx-auto\">\n      <span class=\"p-float-label h-fit\">\n        <TextArea\n          class=\"w-full h-60\"\n          id=\"description\"\n          v-model=\"data.description\" />\n        <label for=\"description\">Description</label>\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ImageUpload } from \"@ui/components\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Calendar from \"primevue/calendar\"\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { item: data } = storeToRefs(store)\n</script>\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll\">\n    <div class=\"flex flex-row gap-2 mb-4\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newSubItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isItemEditDisabled\"\n        size=\"small\"\n        @click=\"editSubItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isItemDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteSubItem\" />\n    </div>\n    <DataTable\n      dataKey=\"id\"\n      v-if=\"data !== undefined\"\n      :value=\"data.subEmployments\"\n      v-model:selection=\"subSelected\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"employerIcon\"\n        header=\"Logo\">\n        <template #body=\"{ data }\">\n          <img\n            class=\"w-8 h-8 rounded-xl\"\n            :src=\"data.employerIcon.path\" />\n        </template>\n      </Column>\n      <Column\n        field=\"employer\"\n        header=\"Employer\" />\n      <Column\n        field=\"role\"\n        header=\"Role\" />\n      <Column\n        field=\"description\"\n        header=\"Description\" />\n      <Column\n        field=\"location\"\n        header=\"Location\" />\n      <Column\n        field=\"fromDate\"\n        header=\"From\"\n        sortable\n        style=\"min-width: 12rem\">\n        <template #body=\"{ data }\">{{ data.fromDate.toDateString() }}</template>\n      </Column>\n      <Column\n        field=\"tillDate\"\n        header=\"Till\"\n        sortable\n        style=\"min-width: 12rem\">\n        <template #body=\"{ data }\">{{ data.tillDate.toDateString() }}</template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Column from \"primevue/column\"\n  import DataTable from \"primevue/datatable\"\n\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { newSubItem, editSubItem, deleteSubItem } = store\n  const {\n    item: data,\n    subSelected,\n    isItemEditDisabled,\n    isItemDeleteDisabled,\n  } = storeToRefs(store)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n</style>\n","<template>\n  <div class=\"overflow-hidden flex flex-col p-6\">\n    <div class=\"text-2xl dark:text-zinc-400 mb-6\">\n      {{ isItemNew ? \"Create\" : \"Update\" }} employment\n    </div>\n    <list-item-buttons />\n    <list-item />\n    <list-item-table />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import listItemButtons from \"./list-item-buttons.vue\"\n  import listItem from \"./list-item.vue\"\n  import listItemTable from \"./list-item-table.vue\"\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { isItemNew } = storeToRefs(store)\n</script>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"saveSubItem\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancelSubItem\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useListStore } from \"../list/list.store\"\n\n  const store = useListStore()\n  const { saveSubItem, cancelSubItem } = store\n</script>\n","<template>\n  <div class=\"p-6\">\n    <div class=\"text-2xl dark:text-zinc-400 mb-6\">\n      {{ isSubItemNew ? \"Create\" : \"Update\" }} Sub Employment\n    </div>\n\n    <list-item-sub-buttons />\n\n    <div v-if=\"data !== undefined\">\n      <div class=\"flex flex-wrap gap-8 pt-8 mb-6 overflow-auto\">\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              id=\"employer\"\n              v-model=\"data.employer\" />\n            <label for=\"employer\">Employer</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              id=\"role\"\n              v-model=\"data.role\" />\n            <label for=\"role\">Role</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              id=\"location\"\n              v-model=\"data.location\" />\n            <label for=\"employer\">Location</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <Calendar\n              id=\"fromDate\"\n              v-model=\"data.fromDate\" />\n            <label for=\"fromDate\">From date</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <Calendar\n              id=\"tillDate\"\n              v-model=\"data.tillDate\" />\n            <label for=\"tillDate\">Till date</label>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"field w-40 h-40 max-h-40 max-w-40 mb-6\">\n        <image-upload v-model=\"data.employerIcon.path\" />\n      </div>\n\n      <div class=\"field mx-auto\">\n        <span class=\"p-float-label h-fit\">\n          <TextArea\n            class=\"w-full h-60\"\n            id=\"description\"\n            v-model=\"data.description\" />\n          <label for=\"description\">Description</label>\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ImageUpload } from \"@ui/components\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Calendar from \"primevue/calendar\"\n  import listItemSubButtons from \"./list-item-sub-buttons.vue\"\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { subItem: data, isSubItemNew } = storeToRefs(store)\n</script>\n","import { RouteRecordRaw } from \"vue-router\"\nimport List from \"@/ui/employments/list/list.page.vue\"\nimport ListItem from \"@/ui/employments/item/list-item.page.vue\"\nimport ListItemSub from \"@/ui/employments/item-sub/list-item-sub.page.vue\"\n\nexport const employmentsRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: List,\n  },\n  {\n    path: \":id\",\n    component: ListItem,\n  },\n  {\n    path: \":id/sub/:subId\",\n    component: ListItemSub,\n  },\n]\n","import { Project, Url } from \"@home/domain\"\nimport { defineStore } from \"pinia\"\nimport { createProjectStorage } from \"@home/web-services\"\nimport { isEmpty } from \"lodash\"\nimport { errorToast, successToast } from \"@/shared/toast-message\"\n\ninterface ProjectsStore {\n  loaded: undefined | boolean\n  projects: Project[]\n  selected: Project[]\n\n  item?: Project\n  isNewItem: boolean\n\n  error?: Error\n}\n\nconst defaultState: ProjectsStore = {\n  loaded: undefined,\n  projects: [],\n  selected: [],\n\n  item: undefined,\n  isNewItem: false,\n\n  error: undefined,\n}\n\nconst storage = createProjectStorage()\n\nexport const useProjectStore = defineStore(\"home-web-admin-projects-store\", {\n  state: (): ProjectsStore => defaultState,\n\n  getters: {\n    isEditDisabled: state => state.selected.length !== 1,\n    isDeleteDisabled: state => state.selected.length === 0,\n    getProjectById: state => (id: string) =>\n      state.projects.find(project => project.id === id),\n  },\n\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n\n    async fetch() {\n      try {\n        const result = (await storage.getAll()) as Project[]\n        this.projects = result\n        this.error = undefined\n        this.loaded = true\n      } catch (error) {\n        this.error = error\n      }\n    },\n\n    async newItem() {\n      this.isNewItem = true\n      this.item = new Project()\n      this.selected = []\n      this.$router.push({ path: \"/admin/projects/new\" })\n    },\n\n    async editItem() {\n      this.isNewItem = false\n      this.item = this.selected[0]\n      this.selected = []\n      this.$router.push({ path: `/admin/projects/${this.item.id}` })\n    },\n\n    async deleteItems() {\n      await this.delete()\n      this.selected = []\n    },\n\n    updateImages(images: string[]) {\n      this.item! = { ...this.item!, screenshots: images.map(it => new Url(it)) }\n    },\n\n    async save() {\n      if (this.isNewItem && !isEmpty(this.item)) {\n        await this.create(this.item)\n      } else if (!this.isNewItem && !isEmpty(this.item)) {\n        await this.update(this.item)\n      }\n      await this.cancel()\n    },\n\n    async cancel() {\n      this.isNewItem = false\n      this.item = undefined\n      this.$router.back()\n    },\n\n    async create(project: Project) {\n      try {\n        await storage.create(project)\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast())\n        console.error(error)\n      }\n    },\n\n    async update(project: Project) {\n      try {\n        await storage.update(project)\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast())\n        console.error(error)\n      }\n    },\n\n    async delete() {\n      try {\n        await storage.delete(this.selected)\n        this.projects = this.projects.filter(it => !this.selected.includes(it))\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast())\n        console.error(error)\n      }\n    },\n  },\n})\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Update projects section</h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isEditDisabled\"\n        size=\"small\"\n        @click=\"editItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteItems\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :value=\"projects\"\n      v-model:selection=\"selected\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"title\"\n        header=\"Title\">\n      </Column>\n      <Column\n        field=\"description\"\n        header=\"Description\">\n      </Column>\n      <Column\n        field=\"owner\"\n        header=\"Owner\" />\n      <Column\n        field=\"screenshots\"\n        header=\"Screenshots\">\n        <template #body=\"{ data }\">{{ data.screenshots.length }}</template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Column from \"primevue/column\"\n  import DataTable from \"primevue/datatable\"\n  import { useProjectStore } from \"./projects.store\"\n  import { onMounted } from \"vue\"\n  import { storeToRefs } from \"pinia\"\n  const store = useProjectStore()\n  const { isEditDisabled, isDeleteDisabled, projects, selected } =\n    storeToRefs(store)\n  const { newItem, editItem, deleteItems } = store\n  onMounted(store.init)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n</style>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"save\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancel\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useProjectStore } from \"./projects.store\"\n  const store = useProjectStore()\n  const { save, cancel } = store\n</script>\n","<template>\n  <div\n    v-if=\"item !== undefined\"\n    class=\"overflow-hidden flex flex-col flex-grow p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">\n      {{ isNewItem ? \"Create\" : \"Update\" }} project\n    </h1>\n\n    <action-buttons />\n\n    <div class=\"flex flex-wrap gap-8 pt-8 mb-8 overflow-auto\">\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"title\"\n            v-model=\"item.title\" />\n          <label for=\"title\">Title</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"storeURL\"\n            v-model=\"item.storeURL.path\" />\n          <label for=\"storeURL\">Store URL</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"sourceURL\"\n            v-model=\"item.sourceURL.path\" />\n          <label for=\"sourceURL\">Source URL</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"owner\"\n            v-model=\"item.owner\" />\n          <label for=\"owner\">Owner</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <Calendar\n            id=\"fromDate\"\n            v-model=\"item.date\" />\n          <label for=\"fromDate\">From date</label>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"field mb-8\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full h-20\"\n          id=\"summary\"\n          v-model=\"item.summary\" />\n        <label for=\"summary\">Summary</label>\n      </span>\n    </div>\n\n    <div class=\"field mb-8\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full h-20\"\n          id=\"contributions\"\n          v-model=\"item.contributions\" />\n        <label for=\"contributions\">Contributions</label>\n      </span>\n    </div>\n\n    <div class=\"field mb-8\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full h-60\"\n          id=\"description\"\n          v-model=\"item.description\" />\n        <label for=\"description\">Description</label>\n      </span>\n    </div>\n\n    <div class=\"flex flex-col mb-8\">\n      <div class=\"mb-2\">Logo</div>\n      <image-upload\n        class=\"rounded min-w-fit border-black max-w-xs w-32 h-32\"\n        v-model=\"item.logo.path\" />\n    </div>\n\n    <div class=\"flex flex-col min-h-screen\">\n      <div class=\"mb-2\">Screenshots</div>\n      <image-multi-upload\n        class=\"rounded min-w-fit min-h-fit border-black max-w-xs w-10 h-10\"\n        v-model=\"images\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import actionButtons from \"./action-buttons.vue\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Calendar from \"primevue/calendar\"\n  import { ImageUpload, ImageMultiUpload } from \"@ui/components\"\n  import { useProjectStore } from \"./projects.store\"\n  import { storeToRefs } from \"pinia\"\n  import { computed } from \"vue\"\n  import { Url } from \"@home/domain\"\n\n  const store = useProjectStore()\n  const { item, isNewItem } = storeToRefs(store)\n  const images = computed<string[]>({\n    get: () => store.item?.screenshots.map(it => it.path) ?? [],\n    set: (value: string[]) => {\n      store.item = {\n        ...store.item!,\n        screenshots: value.map(it => new Url(it)),\n      }\n    },\n  })\n</script>\n","import ProjectTable from \"@/ui/projects/projects-table.vue\"\nimport ProjectEdit from \"@/ui/projects/project-edit.vue\"\nimport { RouteRecordRaw } from \"vue-router\"\n\nexport const projectRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: ProjectTable,\n  },\n  {\n    path: \":id\",\n    component: ProjectEdit,\n  },\n]\n","import { errorToast, successToast } from \"@/shared/toast-message\"\nimport { Lead } from \"@home/domain\"\nimport { createLeadsStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface LeadsState {\n  leads: Lead[]\n  selected: Lead[]\n  error?: Error\n}\n\nconst defaultState: LeadsState = {\n  leads: [],\n  selected: [],\n  error: undefined,\n}\n\nconst storage = createLeadsStorage()\n\nexport const useLeadsStore = defineStore(\"home-web-admin-leads-store\", {\n  state: (): LeadsState => defaultState,\n  getters: {\n    isCheckDisabled: state => state.selected.length !== 1,\n    isDeleteDisabled: state => state.selected.length === 0,\n    detail: state => state.selected[0],\n  },\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n    async fetch() {\n      try {\n        this.leads = (await storage.getAll()) as Lead[]\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async details() {\n      const lead = this.selected[0]\n      this.$router.push({ path: `/admin/leads/${lead.id}` })\n    },\n    async cancel() {\n      this.$router.back()\n      this.selected = []\n    },\n    async deleteItem() {\n      await this.delete(this.selected)\n      await this.fetch()\n      this.selected = []\n    },\n    async delete(leads: Lead[]) {\n      try {\n        await storage.delete(leads)\n        this.leads = [...this.leads.filter(it => !this.leads.includes(it))]\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error.message))\n        console.error(error)\n      }\n    },\n  },\n})\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Leads section</h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"Check\"\n        class=\"h-10\"\n        icon=\"pi pi-info\"\n        severity=\"info\"\n        :disabled=\"isCheckDisabled\"\n        size=\"small\"\n        @click=\"details\" />\n\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteItem\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :value=\"leads\"\n      v-model:selection=\"selected\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"email\"\n        header=\"From\">\n      </Column>\n      <Column\n        field=\"subject\"\n        header=\"Subject\">\n      </Column>\n      <Column\n        field=\"date\"\n        header=\"Date\"\n        sortable>\n        <template #body=\"{ data }\">{{ data.date.toDateString() }}</template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import DataTable from \"primevue/datatable\"\n  import Column from \"primevue/column\"\n  import { useLeadsStore } from \"./leads.store\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useLeadsStore()\n  const { leads, selected, isCheckDisabled, isDeleteDisabled } =\n    storeToRefs(store)\n  const { details, deleteItem } = store\n  onMounted(store.init)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 20rem;\n  }\n  :deep(.p-datatable .p-datatable-tbody > .p-datatable-row-expansion > td) {\n    padding: 0px;\n    margin: 0px;\n  }\n</style>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"delete\"\n      severity=\"danger\"\n      @click=\"deleteItem\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancel\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useLeadsStore } from \"./leads.store\"\n  const store = useLeadsStore()\n  const { deleteItem, cancel } = store\n</script>\n","<template>\n  <div\n    class=\"p-6\"\n    v-if=\"detail !== undefined\">\n    <action-buttons class=\"mb-6\" />\n\n    <div class=\"flex flex-col gap-4\">\n      <div>\n        <div class=\"font-bold\">From</div>\n        <div>{{ detail.email }}</div>\n      </div>\n      <div>\n        <div class=\"font-bold\">At</div>\n        <div>{{ detail.date.toLocaleDateString() }}</div>\n      </div>\n      <div>\n        <div class=\"font-bold\">Subject</div>\n        <div>{{ detail.subject }}</div>\n      </div>\n      <div>\n        <div class=\"font-bold\">Message</div>\n        <div>{{ detail.message }}</div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import actionButtons from \"./action-buttons.vue\"\n  import { storeToRefs } from \"pinia\"\n  import { useLeadsStore } from \"./leads.store\"\n  const store = useLeadsStore()\n  const { detail } = storeToRefs(store)\n</script>\n","import { RouteRecordRaw } from \"vue-router\"\nimport LeadList from \"@/ui/leads/list.page.vue\"\nimport LeadDetails from \"@/ui/leads/details.page.vue\"\n\nexport const leadsRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: LeadList,\n  },\n  {\n    path: \":id\",\n    component: LeadDetails,\n  },\n]\n","import { errorToast, successToast } from \"@/shared/toast-message\"\nimport { Technology } from \"@home/domain\"\nimport { createTechnologiesStorage } from \"@home/web-services\"\nimport { isEmpty } from \"lodash\"\nimport { defineStore } from \"pinia\"\n\ninterface TechnologiesState {\n  technologies: Technology[]\n  selected: Technology[]\n\n  item?: Technology\n  isNewItem: boolean\n\n  error?: Error\n}\n\nconst defaultState: TechnologiesState = {\n  technologies: [],\n  selected: [],\n  item: undefined,\n  isNewItem: false,\n  error: undefined,\n}\n\nconst storage = createTechnologiesStorage()\n\nexport const useTechnologiesStore = defineStore(\n  \"home-web-admin-technologies-store\",\n  {\n    state: (): TechnologiesState => defaultState,\n    getters: {\n      isEditDisabled: state => state.selected.length !== 1,\n      isDeleteDisabled: state => state.selected.length === 0,\n    },\n    actions: {\n      async init() {\n        await this.fetch()\n      },\n\n      async fetch() {\n        try {\n          this.technologies = (await storage.getAll()) as Technology[]\n        } catch (error) {\n          console.error(error)\n        }\n      },\n      async newItem() {\n        this.isNewItem = true\n        this.item = new Technology()\n        this.selected = []\n        this.$router.push({ path: \"/admin/technologies/new\" })\n      },\n      async editItem() {\n        this.isNewItem = true\n        this.item = this.selected[0]\n        this.selected = []\n        this.$router.push({ path: `/admin/technologies/${this.item.id}` })\n      },\n      async deleteItem() {\n        await this.delete(this.selected)\n        this.selected = []\n      },\n      async rowReorder(ordered: Technology[]) {\n        await storage.updateOrder(ordered)\n        await this.fetch()\n      },\n      async save() {\n        if (this.isNewItem && !isEmpty(this.item)) {\n          await this.create(this.item)\n        } else if (!isEmpty(this.item)) {\n          await this.update(this.item)\n        }\n        await this.cancel()\n      },\n      async cancel() {\n        this.isNewItem = false\n        this.item = undefined\n        this.$router.back()\n      },\n      async create(technology: Technology) {\n        try {\n          await storage.create(technology)\n          this.technologies = [...this.technologies, technology]\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast(error.message))\n          console.error(error)\n        }\n      },\n      async update(technology: Technology) {\n        try {\n          await storage.update(technology)\n          this.technologies = [\n            ...this.technologies.filter(it => it.id === technology.id),\n            technology,\n          ]\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast(error.message))\n          console.error(error)\n        }\n      },\n      async delete(technologies: Technology[]) {\n        try {\n          await storage.delete(technologies)\n          this.technologies = [\n            ...this.technologies.filter(it => !technologies.includes(it)),\n          ]\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast(error.message))\n          console.error(error)\n        }\n      },\n    },\n  },\n)\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">\n      Update technologies section\n    </h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isEditDisabled\"\n        size=\"small\"\n        @click=\"editItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteItem\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :reorderableColumns=\"true\"\n      @rowReorder=\"(event: any) => rowReorder(event.value)\"\n      :value=\"technologies\"\n      v-model:selection=\"selected\">\n      <Column\n        rowReorder\n        headerStyle=\"width: 3rem\"\n        :reorderableColumn=\"false\" />\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"icon\"\n        header=\"Logo\">\n        <template #body=\"{ data }\">\n          <img\n            class=\"w-8 h-8 rounded-lg\"\n            :src=\"data.icon.path\" />\n        </template>\n      </Column>\n      <Column\n        field=\"name\"\n        header=\"Name\">\n      </Column>\n      <Column\n        field=\"percentage\"\n        header=\"Percentage\" />\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import DataTable from \"primevue/datatable\"\n  import Column from \"primevue/column\"\n  import { useTechnologiesStore } from \"./technologies.store\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useTechnologiesStore()\n  const { technologies, selected, isEditDisabled, isDeleteDisabled } =\n    storeToRefs(store)\n  const { rowReorder, newItem, editItem, deleteItem } = store\n  onMounted(store.init)\n</script>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"save\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancel\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useTechnologiesStore } from \"./technologies.store\"\n  const store = useTechnologiesStore()\n  const { save, cancel } = store\n</script>\n","<template>\n  <div\n    v-if=\"item !== undefined\"\n    class=\"overflow-hidden flex flex-col flex-grow p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">\n      {{ isNewItem ? \"Create\" : \"Update\" }} technology\n    </h1>\n\n    <action-buttons />\n\n    <div class=\"flex flex-wrap gap-8 pt-8 mb-8 overflow-auto\">\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"name\"\n            v-model=\"item.name\" />\n          <label for=\"name\">Name</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputNumber\n            id=\"percentage\"\n            v-model=\"item.percentage\" />\n          <label for=\"percentage\">Percentage</label>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"flex flex-col mb-8\">\n      <div class=\"mb-2\">Logo</div>\n      <image-upload\n        class=\"rounded min-w-fit border-black max-w-xs w-32 h-32\"\n        v-model=\"item.icon.path\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import InputText from \"primevue/inputtext\"\n  import InputNumber from \"primevue/inputnumber\"\n  import { ImageUpload } from \"@ui/components\"\n  import actionButtons from \"./action-buttons.vue\"\n  import { useTechnologiesStore } from \"./technologies.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useTechnologiesStore()\n  const { item, isNewItem } = storeToRefs(store)\n</script>\n","import { RouteRecordRaw } from \"vue-router\"\nimport TechnologiesList from \"@/ui/technologies/list.page.vue\"\nimport TechnologiesEdit from \"@/ui/technologies/edit.page.vue\"\n\nexport const technologiesRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: TechnologiesList,\n  },\n  {\n    path: \":id\",\n    component: TechnologiesEdit,\n  },\n]\n","<template>\n  <div class=\"container\">\n    <div class=\"flex items-center justify-center h-1/2\">\n      <div class=\"text-4xl dark:text-zinc-200\">Welcome to admin panel!</div>\n    </div>\n  </div>\n</template>\n","import { v4 } from \"uuid\"\n\nexport class BlogPost {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly title: string = \"\",\n    public readonly content: string = \"\",\n    public readonly summary: string = \"\",\n    public readonly publishedAt: Date = new Date(),\n    public readonly tags: string[] = [],\n    public readonly status: BlogPostStatus = \"Draft\",\n    public readonly readCount: number = 0,\n  ) {}\n}\n\nexport class Comment {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly blogPostId: string = \"\",\n    public readonly owner: string = \"\",\n    public readonly message: string = \"\",\n  ) {}\n}\n\nexport type BlogPostStatus = \"Published\" | \"Draft\"\n","import { BlogPost } from \"@blog/domain\"\nimport { createBlogPostStorage } from \"@blog/web-services\"\nimport { defineStore } from \"pinia\"\nimport { isEmpty } from \"lodash\"\n\ninterface BlogState {\n  blogPosts: BlogPost[]\n  selected: BlogPost[]\n  isLoading: boolean\n  error?: Error\n\n  blogPost?: BlogPost\n  isNew: boolean\n}\n\nconst defaultState: BlogState = {\n  blogPosts: [],\n  selected: [],\n  isLoading: false,\n  isNew: true,\n  blogPost: undefined,\n}\n\nconst storage = createBlogPostStorage()\n\nexport const useBlogStore = defineStore(\"blog-web-store\", {\n  state: () => defaultState,\n  getters: {\n    isEditDisabled: state => state.selected.length !== 1,\n    isDeleteDisabled: state => state.selected.length < 1,\n    getBlogPostById: state => (id: string) =>\n      state.blogPosts.find(it => it.id === id),\n  },\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n    async fetch() {\n      try {\n        this.isLoading = true\n        this.blogPosts = (await storage.getAll()) as BlogPost[]\n      } catch (error) {\n        console.error(error)\n      } finally {\n        this.isLoading = false\n      }\n    },\n    async goToBlogPost(id: string) {\n      this.blogPost = this.getBlogPostById(id)\n      if (this.blogPost !== undefined) {\n        this.isNew = false\n      } else {\n        this.isNew = true\n        this.blogPost = new BlogPost()\n      }\n      this.$router.push({ path: `/admin/blog/${id}` })\n    },\n    async checkBlogPostDetails() {\n      if (!this.blogPost) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        if (routeId !== \"new\") {\n          await this.fetch()\n          this.blogPost = this.getBlogPostById(routeId)\n          this.isNew = false\n        } else {\n          this.isNew = true\n          this.blogPost = new BlogPost()\n        }\n      }\n    },\n    async newItem() {\n      await this.goToBlogPost(\"new\")\n    },\n    async editItem() {\n      const edit = this.selected[0]\n      await this.goToBlogPost(edit.id)\n    },\n    async saveItem() {\n      try {\n        if (this.isNew && !isEmpty(this.blogPost)) {\n          await storage.create(this.blogPost)\n        } else if (!this.isNew && !isEmpty(this.blogPost)) {\n          await storage.update(this.blogPost)\n        }\n        await this.cancelItem()\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    async cancelItem() {\n      this.isNew = false\n      this.blogPost = undefined\n      this.$router.back()\n    },\n    async deleteItems() {\n      const items = this.selected\n      const result = await storage.delete(items)\n      if (result! instanceof Error) await this.fetch()\n    },\n  },\n})\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Manage blog posts</h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isEditDisabled\"\n        size=\"small\"\n        @click=\"editItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteItems\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :value=\"blogPosts\"\n      v-model:selection=\"selected\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"title\"\n        header=\"Title\" />\n      <Column\n        field=\"summary\"\n        header=\"Summary\" />\n      <Column\n        field=\"status\"\n        header=\"Status\" />\n      <Column\n        field=\"publishedAt\"\n        header=\"Published at\"\n        sortable>\n        <template #body=\"{ data }\">{{\n          data.publishedAt.toDateString()\n        }}</template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import DataTable from \"primevue/datatable\"\n  import Column from \"primevue/column\"\n  import { useBlogStore } from \"../store\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useBlogStore()\n  const { blogPosts, selected, isEditDisabled, isDeleteDisabled } =\n    storeToRefs(store)\n  const { init, newItem, editItem, deleteItems } = store\n  onMounted(init)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n  :deep(.p-datatable .p-datatable-tbody > .p-datatable-row-expansion > td) {\n    padding: 0px;\n    margin: 0px;\n  }\n</style>\n","/**\n * @license Copyright (c) 2014-2023, CKSource Holding sp. z o.o. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\nimport { ClassicEditor } from \"@ckeditor/ckeditor5-editor-classic\"\n\nimport { Alignment } from \"@ckeditor/ckeditor5-alignment\"\nimport { Base64UploadAdapter } from \"@ckeditor/ckeditor5-upload\"\nimport { Autoformat } from \"@ckeditor/ckeditor5-autoformat\"\nimport {\n  Bold,\n  Code,\n  Italic,\n  Strikethrough,\n  Underline,\n} from \"@ckeditor/ckeditor5-basic-styles\"\nimport { BlockQuote } from \"@ckeditor/ckeditor5-block-quote\"\nimport { CloudServices } from \"@ckeditor/ckeditor5-cloud-services\"\nimport { CodeBlock } from \"@ckeditor/ckeditor5-code-block\"\nimport { Essentials } from \"@ckeditor/ckeditor5-essentials\"\nimport {\n  FontBackgroundColor,\n  FontColor,\n  FontFamily,\n  FontSize,\n} from \"@ckeditor/ckeditor5-font\"\nimport { Heading, Title } from \"@ckeditor/ckeditor5-heading\"\nimport { Highlight } from \"@ckeditor/ckeditor5-highlight\"\nimport { HtmlEmbed } from \"@ckeditor/ckeditor5-html-embed\"\nimport {\n  GeneralHtmlSupport,\n  HtmlComment,\n} from \"@ckeditor/ckeditor5-html-support\"\nimport {\n  AutoImage,\n  Image,\n  ImageResize,\n  ImageStyle,\n  ImageUpload,\n  ImageBlock,\n  ImageInline,\n  ImageStyleUI,\n  ImageStyleEditing,\n  ImageEditing,\n  ImageBlockEditing,\n  ImageToolbar,\n} from \"@ckeditor/ckeditor5-image\"\nimport { Indent, IndentBlock } from \"@ckeditor/ckeditor5-indent\"\nimport { TextPartLanguage } from \"@ckeditor/ckeditor5-language\"\nimport { DocumentList, DocumentListProperties } from \"@ckeditor/ckeditor5-list\"\nimport { MediaEmbed } from \"@ckeditor/ckeditor5-media-embed\"\nimport { Mention } from \"@ckeditor/ckeditor5-mention\"\nimport { PageBreak } from \"@ckeditor/ckeditor5-page-break\"\nimport { Paragraph } from \"@ckeditor/ckeditor5-paragraph\"\nimport { PasteFromOffice } from \"@ckeditor/ckeditor5-paste-from-office\"\nimport { SourceEditing } from \"@ckeditor/ckeditor5-source-editing\"\nimport { Style } from \"@ckeditor/ckeditor5-style\"\nimport {\n  Table,\n  TableCaption,\n  TableCellProperties,\n  TableColumnResize,\n  TableProperties,\n  TableToolbar,\n} from \"@ckeditor/ckeditor5-table\"\nimport { TextTransformation } from \"@ckeditor/ckeditor5-typing\"\nimport { WordCount } from \"@ckeditor/ckeditor5-word-count\"\n\n// You can read more about extending the build with additional plugins in the \"Installing plugins\" guide.\n// See https://ckeditor.com/docs/ckeditor5/latest/installation/plugins/installing-plugins.html for details.\n\nclass Editor extends ClassicEditor {\n  public static override builtinPlugins = [\n    Alignment,\n    AutoImage,\n    Autoformat,\n    Base64UploadAdapter,\n    BlockQuote,\n    Bold,\n    CloudServices,\n    Code,\n    CodeBlock,\n    DocumentList,\n    DocumentListProperties,\n    Essentials,\n    FontBackgroundColor,\n    FontColor,\n    FontFamily,\n    FontSize,\n    GeneralHtmlSupport,\n    Heading,\n    Highlight,\n    HtmlComment,\n    HtmlEmbed,\n    Image,\n    ImageUpload,\n    ImageResize,\n    ImageStyle,\n    ImageStyleUI,\n    ImageStyleEditing,\n    ImageBlock,\n    ImageInline,\n    ImageStyle,\n    ImageEditing,\n    ImageToolbar,\n    ImageBlockEditing,\n    Indent,\n    IndentBlock,\n    Italic,\n    // Markdown,\n    MediaEmbed,\n    Mention,\n    PageBreak,\n    Paragraph,\n    PasteFromOffice,\n    SourceEditing,\n    Strikethrough,\n    Style,\n    Table,\n    TableCaption,\n    TableCellProperties,\n    TableColumnResize,\n    TableProperties,\n    TableToolbar,\n    TextPartLanguage,\n    TextTransformation,\n    Title,\n    Underline,\n    WordCount,\n  ]\n\n  public static override defaultConfig = {\n    image: {\n      toolbar: [\n        {\n          name: \"imageStyle:icons\",\n          title: \"Alignment\",\n          items: [\n            \"imageStyle:alignLeft\",\n            \"imageStyle:alignRight\",\n            \"imageStyle:alignCenter\",\n          ],\n          defaultItem: \"imageStyle:alignLeft\",\n        },\n        {\n          name: \"imageStyle:pictures\",\n          title: \"Style\",\n          items: [\"imageStyle:block\", \"imageStyle:side\"],\n          defaultItem: \"imageStyle:block\",\n        },\n        \"|\",\n        \"toggleImageCaption\",\n        \"linkImage\",\n      ],\n    },\n    toolbar: {\n      items: [\n        \"|\",\n        \"bold\",\n        \"italic\",\n        \"bulletedList\",\n        \"numberedList\",\n        \"|\",\n        \"outdent\",\n        \"indent\",\n        \"|\",\n        \"blockQuote\",\n        \"imageStyle:block\",\n        \"imageStyle:side\",\n        \"imageStyle:inline\",\n        \"imageStyle:alignLeft\",\n        \"imageStyle:alignRight\",\n        \"imageStyle:alignCenter\",\n        \"uploadImage\",\n        \"insertTable\",\n        \"mediaEmbed\",\n        \"undo\",\n        \"redo\",\n        \"fontBackgroundColor\",\n        \"fontColor\",\n        \"fontSize\",\n        \"fontFamily\",\n        \"codeBlock\",\n        \"pageBreak\",\n        \"style\",\n        \"strikethrough\",\n        \"underline\",\n        \"highlight\",\n        \"code\",\n        \"alignment\",\n        \"sourceEditing\",\n        \"textPartLanguage\",\n        \"heading\",\n      ],\n    },\n    language: \"en\",\n    table: {\n      contentToolbar: [\n        \"tableColumn\",\n        \"tableRow\",\n        \"mergeTableCells\",\n        \"tableCellProperties\",\n        \"tableProperties\",\n      ],\n    },\n  }\n}\n\nexport default Editor\n","<template>\n  <div\n    class=\"flex flex-col gap-8 p-6 min-h-screen\"\n    v-if=\"store.blogPost !== undefined\">\n    <div class=\"text-2xl font-bold\">\n      {{ store.isNew ? \"Create\" : \"Update\" }} article\n    </div>\n\n    <div class=\"flex flex-wrap gap-6\">\n      <Button\n        class=\"w-32\"\n        label=\"Save\"\n        severity=\"info\"\n        @click=\"store.saveItem\" />\n      <Button\n        class=\"w-32\"\n        label=\"Cancel\"\n        severity=\"info\"\n        @click=\"store.cancelItem\" />\n    </div>\n\n    <div class=\"field flex-1 min-w-60\">\n      <span class=\"p-float-label\">\n        <InputText\n          class=\"w-full\"\n          id=\"title\"\n          v-model=\"store.blogPost.title\" />\n        <label for=\"title\">Title</label>\n      </span>\n    </div>\n\n    <div class=\"flex flex-wrap gap-8\">\n      <div class=\"field flex-1 min-w-60\">\n        <span class=\"p-float-label\">\n          <Calendar\n            class=\"w-full\"\n            id=\"publish\"\n            v-model=\"store.blogPost.publishedAt\" />\n          <label for=\"publish\">Published at</label>\n        </span>\n      </div>\n\n      <ToggleButton\n        v-model=\"publishState\"\n        class=\"flex-1 min-w-60\"\n        onIcon=\"pi pi-check\"\n        onLabel=\"Published\"\n        offLabel=\"Draft\"\n        offIcon=\"pi pi-times\" />\n    </div>\n\n    <div class=\"field w-full\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full\"\n          id=\"summary\"\n          v-model=\"store.blogPost.summary\" />\n        <label for=\"summary\">Summary</label>\n      </span>\n    </div>\n\n    <div class=\"field\">\n      <span class=\"p-float-label\">\n        <Chips\n          id=\"tags\"\n          v-model=\"store.blogPost.tags\" />\n        <label for=\"tags\">Tags</label>\n      </span>\n    </div>\n\n    <ckeditor\n      class=\"min-h-screen\"\n      :editor=\"editor\"\n      v-model=\"store.blogPost.content\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  window.global ||= window\n  import Calendar from \"primevue/calendar\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Chips from \"primevue/chips\"\n  import ToggleButton from \"primevue/togglebutton\"\n  import { useBlogStore } from \"../store\"\n  import { computed, onMounted } from \"vue\"\n  import Button from \"primevue/button\"\n\n  import CKEditor from \"@ckeditor/ckeditor5-vue\"\n  import Editor from \"./ckeditor\"\n\n  const store = useBlogStore()\n  const ckeditor = CKEditor.component\n  const editor = Editor\n  const publishState = computed<boolean>({\n    get() {\n      return store.blogPost?.status === \"Published\"\n    },\n    set(value) {\n      store.blogPost = {\n        ...store.blogPost!,\n        status: value ? \"Published\" : \"Draft\",\n      }\n    },\n  })\n  onMounted(store.checkBlogPostDetails)\n</script>\n\n<style scoped>\n  :deep(.ck-editor__editable) {\n    --ck-color-base-background: var(--color-background);\n    --ck-color-base-foreground: var(--color-foreground);\n    --ck-custom-background: var(--color-background);\n    --ck-custom-foreground: var(--color-foreground);\n  }\n\n  :deep(.ck-content pre) {\n    color: var(--color-foreground);\n  }\n</style>\n","import { RouteRecordRaw } from \"vue-router\"\nimport BlogList from \"@/ui/blog-list/page.vue\"\nimport BlogItem from \"@/ui/blog-item/page.vue\"\n\nexport const BlogAdminRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: BlogList,\n  },\n  {\n    path: \":id\",\n    component: BlogItem,\n  },\n]\n","import {\n  DocumentAdminPage,\n  EmploymentsAdminPage,\n  IntroductionAdminPage,\n  LeadsAdminPage,\n  ProjectsAdminPage,\n  TechnologiesAdminPage,\n  employmentsRoutes,\n  leadsRoutes,\n  projectRoutes,\n  technologiesRoutes,\n} from \"@home/web-admin\"\nimport Welcome from \"@/ui/dashboard/welcome.vue\"\nimport { RouteRecordRaw } from \"vue-router\"\nimport { BlogAdmin, BlogAdminRoutes } from \"@blog/web-admin\"\n\nexport const adminRoutes: RouteRecordRaw[] = [\n  {\n    path: \"/admin\",\n    component: Welcome,\n  },\n  {\n    path: \"/admin/introduction\",\n    component: IntroductionAdminPage,\n  },\n  {\n    path: \"/admin/employments\",\n    component: EmploymentsAdminPage,\n    children: employmentsRoutes,\n  },\n  {\n    path: \"/admin/upload-cv\",\n    component: DocumentAdminPage,\n  },\n  {\n    path: \"/admin/projects\",\n    component: ProjectsAdminPage,\n    children: projectRoutes,\n  },\n  {\n    path: \"/admin/technologies\",\n    component: TechnologiesAdminPage,\n    children: technologiesRoutes,\n  },\n  {\n    path: \"/admin/leads\",\n    component: LeadsAdminPage,\n    children: leadsRoutes,\n  },\n  {\n    path: \"/admin/blog\",\n    component: BlogAdmin,\n    children: BlogAdminRoutes,\n  },\n]\n","import { createAppAuthStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface LoginStore {\n  username: string\n  password: string\n  rememberMe: boolean\n  isLoading: boolean\n}\n\nconst defaultState: LoginStore = {\n  username: \"\",\n  password: \"\",\n  rememberMe: false,\n  isLoading: false,\n}\n\nconst storage = createAppAuthStorage()\n\nexport const useLoginStore = defineStore(\"admin-web-login-store\", {\n  state: () => defaultState,\n  getters: {},\n  actions: {\n    async login() {\n      this.isLoading = true\n      try {\n        await storage.signIn(this.username, this.password, this.rememberMe)\n        this.$router.replace({ path: \"/admin\" })\n      } catch (error) {\n        console.error(error)\n      }\n      this.isLoading = false\n    },\n  },\n})\n","<template>\n  <div class=\"flex justify-center h-screen\">\n    <div class=\"flex flex-col gap-8\">\n      <div\n        class=\"text-center mb-8 mt-16 text-900 text-3xl font-medium dark:text-zinc-400\">\n        Sign in to admin dashboard!\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            class=\"w-full\"\n            id=\"username\"\n            v-model=\"username\" />\n          <label for=\"username\">Username</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            type=\"password\"\n            class=\"w-full\"\n            id=\"password\"\n            v-model=\"password\" />\n          <label for=\"password\">Password</label>\n        </span>\n      </div>\n\n      <div class=\"flex align-items-start dark:text-zinc-400 items-center\">\n        <Checkbox\n          id=\"rememberme\"\n          :binary=\"true\"\n          v-model=\"rememberMe\"\n          class=\"mr-2 dark:bg-zinc-900\"></Checkbox>\n        <label for=\"rememberme\">Remember me</label>\n      </div>\n\n      <div v-if=\"!isLoading\">\n        <Button\n          label=\"Sign In\"\n          icon=\"pi pi-user\"\n          severity=\"info\"\n          @click=\"login\"\n          class=\"w-full\"></Button>\n      </div>\n      <div\n        v-else\n        class=\"flex w-full\">\n        <ProgressSpinner stroke-width=\"2\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Checkbox from \"primevue/checkbox\"\n  import InputText from \"primevue/inputtext\"\n  import ProgressSpinner from \"primevue/progressspinner\"\n  import { useLoginStore } from \"./login.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useLoginStore()\n  const { username, password, rememberMe, isLoading } = storeToRefs(store)\n  const { login } = store\n</script>\n","import { Home, HomeRoutes } from \"@home/web\"\nimport { Blog, BlogRoutes } from \"@blog/web\"\nimport { AdminDashboard, AdminLogin, adminRoutes } from \"@admin/web\"\nimport { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\"\nimport { createAppAuthStorage } from \"@home/web-services\"\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: \"/\",\n    component: Home,\n    children: HomeRoutes,\n  },\n  {\n    path: \"/blog\",\n    component: Blog,\n    children: BlogRoutes,\n  },\n  {\n    path: \"/admin\",\n    component: AdminDashboard,\n    children: adminRoutes,\n  },\n  {\n    path: \"/login\",\n    component: AdminLogin,\n  },\n]\n\nexport const router = createRouter({\n  history: createWebHistory(),\n  routes: routes,\n  scrollBehavior(to, _, _0) {\n    if (to.hash) {\n      return {\n        el: to.hash,\n        behavior: \"smooth\",\n      }\n    } else if (to.fullPath !== \"/\") {\n      return { top: 0 }\n    }\n  },\n})\n\nconst authStorage = createAppAuthStorage()\n\nrouter.beforeEach(async (to, _, next) => {\n  const isAdminLogged = await authStorage.isLoggedIn()\n  const isRouteProtected = to.fullPath.includes(\"admin\")\n  if (isRouteProtected && !isAdminLogged) {\n    next({ path: \"/login\" })\n  } else {\n    next()\n  }\n})\n","import { createApp, markRaw } from \"vue\"\nimport App from \"./app.vue\"\nimport { router } from \"./router/router\"\nimport { createPinia } from \"pinia\"\n\nimport { initializeFirebase } from \"@config/firebase\"\nimport * as FaIcons from \"oh-vue-icons/icons/fa\"\nimport { OhVueIcon, addIcons } from \"oh-vue-icons\"\nimport PrimeVue from \"primevue/config\"\nimport ToastService from \"primevue/toastservice\"\nimport Toast from \"primevue/toast\"\nimport { useToast } from \"primevue/usetoast\"\n\n// Tailwind css\nimport \"./assets/styles/main.css\"\n\n// Prime vue css\n//import \"primevue/resources/themes/viva-dark/theme.css\" - see index.html\n\n// Primeflex\n// import 'primeflex/primeflex.css'\n\n// Prime Icons\nimport \"primeicons/primeicons.css\"\n\n// Icons\n// https://oh-vue-icons.netlify.app/ - Font Awesome\naddIcons(...Object.values({ ...FaIcons }))\n\n// App\ncreateApp(App)\n  .component(\"v-icon\", OhVueIcon)\n  .component(\"Toast\", Toast)\n  .use(PrimeVue)\n  .use(ToastService)\n  .use(\n    createPinia().use(({ store }) => {\n      store.$router = markRaw(router)\n      store.$toast = markRaw(useToast())\n    }),\n  )\n  .use(router)\n  .mount(\"#app\")\n\n// Firebase\ninitializeFirebase()\n"],"names":["idTheme","lightTheme","darkTheme","darkModeSetup","PrimeVue","usePrimeVue","isDarkMode","event","show","ref","open","offset","onBeforeMount","handleScroll","onUnmounted","watch","oldVal","newVal","toggleMenu","onMounted","_hoisted_1","_hoisted_3","_sfc_render","_ctx","_cache","imagePicker","imagePreview","chooseImage","_a","choosenImage","selectedImageFile","emits","items","chosenImage","image","deleteImage","it","filePicker","filePicked","chooseFile","chosenFile","selectedDocumentFile","isHttp","url","isBlob","HomePage","introduction","Introduction","employments","projects","cvDocument","Url","tehnologies","title","description","photo","contacts","Contacts","Employment","id","v4","employer","employerIcon","employerWebsite","role","location","subEmployments","fromDate","tillDate","SubEmployment","Project","summary","owner","contributions","storeURL","sourceURL","logo","screenshots","date","email","telephone","skype","github","linkedin","path","Technology","icon","name","percentage","order","Lead","subject","message","firebaseConfig","app","initializeFirebase","initializeApp","firestoreApp","getFirestore","storageApp","getStorage","authApp","getAuth","blobUrlToBuffer","blobUrl","error","isBlobUrl","createEmploymentStorage","collection","document","getById","getAll","employment","create","update","emlpoyment","deletes","collection_","document_","docRef","doc","docSnapshot","getDoc","fromFirebase","queryRef","query","getDocs","collRef","newEmployemnt","uploadImages","toFirebase","setDoc","dbEmployment","dbIcons","icons","deleteIcons","deleteStored","updatedEmployement","updateDoc","employment_","deleteDoc","rest","validate","toFirebaseSub","item","Timestamp","subEmployment","fromFirebaseSub","blobs","extractBlobs","entry","filePath","fileBuffer","downloadUrl","uploadImage","replaceBlobs","blobMap","get","key","isEmpty","sub","remotePath","file","resolve","reject","storageRef","uploadTask","uploadBytesResumable","_","getDownloadURL","deleteObject","createIntroductionStorage","_collection","_document","i","set","snapshot","updatedIntroduction","createProjectStorage","project","newProject","deleteScreenshots","updatedProject","project_","createCVDocumentStorage","uploadDocument","createLeadsStorage","lead","leads","createTechnologiesStorage","technology","technologies","updateOrder","orderBy","dbTechnology","index","createAppAuthStorage","user","pass","rememberMe","setPersistence","browserLocalPersistence","browserSessionPersistence","signInWithEmailAndPassword","signOut","defaultState","employmentStore","projectStore","technologiesStore","useHomePageStore","defineStore","promises","results","a","b","descending","routeId","store","goToTechDetails","dateFormat","_hoisted_2","_createElementVNode","goToEmploymentDetails","goToProjectDetails","storage","emailRegex","useGetInTouchStore","isInvalidEmail","storeToRefs","send","resetInvalidEmail","_1","data","back","homePage","computed","state","HomeRoutes","TechnologyPage","EmploymentPage","ProjectPage","GetInTouchPage","createBlogPostStorage","post","posts","publishedAt","useBlogStore","sortDescending","tag","selected","style","selectedTags","tags","selectTag","filteredBlogPosts","goTo","blogPostDetails","vCodeHighlight","el","hljs","BlogRoutes","BlogList","BlogPost","useAuthStore","menuToggle","timeout","successToast","errorToast","useIntroductionStore","result","isLoading","useCVDocumentStore","upload","useListStore","subs","expanded","isEditDisabled","isDeleteDiasabled","newItem","editItem","deleteItems","saveItem","cancelItem","newSubItem","editSubItem","deleteSubItem","subSelected","isItemEditDisabled","isItemDeleteDisabled","isItemNew","saveSubItem","cancelSubItem","isSubItemNew","employmentsRoutes","List","ListItem","ListItemSub","useProjectStore","images","isDeleteDisabled","save","cancel","isNewItem","value","projectRoutes","ProjectTable","ProjectEdit","useLeadsStore","isCheckDisabled","details","deleteItem","detail","leadsRoutes","LeadList","LeadDetails","useTechnologiesStore","ordered","rowReorder","technologiesRoutes","TechnologiesList","TechnologiesEdit","content","status","readCount","edit","blogPosts","init","Editor","ClassicEditor","Alignment","AutoImage","Autoformat","Base64UploadAdapter","BlockQuote","Bold","CloudServices","Code","CodeBlock","DocumentList","DocumentListProperties","Essentials","FontBackgroundColor","FontColor","FontFamily","FontSize","GeneralHtmlSupport","Heading","Highlight","HtmlComment","HtmlEmbed","Image","ImageUpload","ImageResize","ImageStyle","ImageStyleUI","ImageStyleEditing","ImageBlock","ImageInline","ImageEditing","ImageToolbar","ImageBlockEditing","Indent","IndentBlock","Italic","MediaEmbed","Mention","PageBreak","Paragraph","PasteFromOffice","SourceEditing","Strikethrough","Style","Table","TableCaption","TableCellProperties","TableColumnResize","TableProperties","TableToolbar","TextPartLanguage","TextTransformation","Title","Underline","WordCount","ckeditor","CKEditor","editor","publishState","BlogAdminRoutes","BlogItem","adminRoutes","Welcome","IntroductionAdminPage","EmploymentsAdminPage","DocumentAdminPage","ProjectsAdminPage","TechnologiesAdminPage","LeadsAdminPage","BlogAdmin","useLoginStore","username","password","login","routes","Home","Blog","AdminDashboard","AdminLogin","router","createRouter","createWebHistory","to","_0","authStorage","next","isAdminLogged","addIcons","FaIcons","createApp","App","OhVueIcon","Toast","ToastService","createPinia","markRaw","useToast"],"mappings":"8+EAEA,MAAMA,GAAU,aACVC,GAAa,wBACbC,GAAY,uBAELC,GAAgB,IAAM,CACjC,MAAMC,EAAWC,KACXC,EAAa,OAAO,WAAW,8BAA8B,EAAE,QAC5DF,EAAA,YACPE,EAAaL,GAAaC,GAC1BI,EAAaJ,GAAYD,GACzBD,GACA,IAAM,CAAC,CAAA,EAET,OACG,WAAW,8BAA8B,EACzC,iBAAiB,SAAmBO,GAAA,CACnC,MAAMD,EAAaC,EAAM,QAChBH,EAAA,YACPE,EAAaL,GAAaC,GAC1BI,EAAaJ,GAAYD,GACzBD,GACA,IAAM,CAAC,CAAA,CACT,CACD,CACL,8sDCiJQ,MAAAQ,EAAOC,EAAa,EAAI,EACxBC,EAAOD,EAAa,EAAK,EACzBE,EAASF,EAAY,CAAC,EAE5BG,GAAc,IAAM,OAAO,iBAAiB,SAAUC,CAAY,CAAC,EACnEC,GAAY,IAAM,OAAO,oBAAoB,SAAUD,CAAY,CAAC,EAEpE,MAAMA,EAAe,IAAOF,EAAO,MAAQ,OAAO,YAC5CI,GAAAJ,EAAQ,CAACK,EAAQC,IAAW,CAC3BT,EAAA,MAAQS,EAASD,EAAS,EAC/BN,EAAK,MAAQ,EAAA,CACd,EAED,MAAMQ,EAAa,IAAOR,EAAK,MAAQ,CAACA,EAAK,25EC3K7C,OAAAS,EAAUhB,EAAa,kHCXrBiB,GAAkC,CAClC,mCACA,YACA,QAAU,wcAE8YC,GAAA,KAN1Z,SAAAC,GAAAC,EAAAC,EAAA,oXCyBMC,EAAchB,IACdiB,EAAejB,IAOfkB,EAAc,IAAM,OAAA,OAAAC,EAAAH,EAAY,QAAZ,YAAAG,EAAmB,SACvCC,EAAgBtB,GAAe,CACnC,MAAMuB,EAAoBvB,EAAM,WAAW,MAAM,CAAC,EAClDmB,EAAa,MAAO,IAAM,IAAI,gBAAgBI,CAAiB,EAC/DC,EAAM,oBAAqB,IAAI,gBAAgBD,CAAiB,CAAC,CAAA,m5BCWnE,MAAME,EAAQvB,IAAoB,YAAc,CAAE,CAAA,EAE5CgB,EAAchB,IACdkB,EAAc,IAAM,OAAA,OAAAC,EAAAH,EAAY,QAAZ,YAAAG,EAAmB,SACvCK,EAAc,MAAO1B,GAAe,CACxC,MAAM2B,EAAQ,IAAI,gBAAgB3B,EAAM,WAAW,MAAM,CAAC,CAAC,EAC3DyB,EAAM,MAAQ,CAAC,GAAGA,EAAM,MAAOE,CAAK,EAC9BH,EAAA,oBAAqBC,EAAM,KAAK,CAAA,EAGlCG,EAAeD,GAAkB,CACrCF,EAAM,MAAQA,EAAM,MAAM,OAAOI,GAAMA,IAAOF,CAAK,EAC/CA,EAAM,WAAW,OAAO,GAAG,IAAI,gBAAgBA,CAAK,EAClDH,EAAA,oBAAqBC,EAAM,KAAK,CAAA,6zBC1BlCK,EAAa5B,IACb6B,EAAa7B,IAEb8B,EAAa,IAAM,OAAA,OAAAX,EAAAS,EAAW,QAAX,YAAAT,EAAkB,SACrCY,EAAcjC,GAAe,CACjC,MAAMkC,EAAuBlC,EAAM,WAAW,MAAM,CAAC,EACrD+B,EAAW,MAAQ/B,EAAM,WAAW,MAAM,CAAC,EAC3CwB,EAAM,oBAAqB,IAAI,gBAAgBU,CAAoB,CAAC,CAAA,EAGhEC,EAAUC,GAAgBA,EAAI,WAAW,MAAM,EAC/CC,EAAUD,GAAgBA,EAAI,WAAW,MAAM,4xGC7ChD,MAAME,EAAS,CACpB,YACkBC,EAA6B,IAAIC,GACjCC,EAA4B,CAAC,EAC7BC,EAAsB,CAAA,EACtBC,EAAkB,IAAIC,EACtBC,EAA4B,CAAA,EAC5C,CALgB,KAAA,aAAAN,EACA,KAAA,YAAAE,EACA,KAAA,SAAAC,EACA,KAAA,WAAAC,EACA,KAAA,YAAAE,CACf,CACL,CAEO,MAAML,EAAa,CACxB,YACkBM,EAAgB,GAChBC,EAAsB,GACtBC,EAAa,IAAIJ,EACjBK,EAAqB,IAAIC,GACzC,CAJgB,KAAA,MAAAJ,EACA,KAAA,YAAAC,EACA,KAAA,MAAAC,EACA,KAAA,SAAAC,CACf,CACL,CAEO,MAAME,EAAW,CACtB,YACkBC,EAAaC,EAAG,EAChBC,EAAmB,GACnBC,EAAoB,IAAIX,EACxBY,EAAuB,IAAIZ,EAC3Ba,EAAe,GACfV,EAAsB,GACtBW,EAAmB,GACnBC,EAAkC,CAAA,EAClCC,EAAiB,IAAI,KACrBC,EAAiB,IAAI,KACrC,CAVgB,KAAA,GAAAT,EACA,KAAA,SAAAE,EACA,KAAA,aAAAC,EACA,KAAA,gBAAAC,EACA,KAAA,KAAAC,EACA,KAAA,YAAAV,EACA,KAAA,SAAAW,EACA,KAAA,eAAAC,EACA,KAAA,SAAAC,EACA,KAAA,SAAAC,CACf,CACL,CAEO,MAAMC,EAAc,CACzB,YACkBV,EAAaC,EAAG,EAChBC,EAAmB,GACnBC,EAAoB,IAAIX,EACxBa,EAAe,GACfV,EAAsB,GACtBW,EAAmB,GACnBE,EAAiB,IAAI,KACrBC,EAAqB,IAAA,KACrC,CARgB,KAAA,GAAAT,EACA,KAAA,SAAAE,EACA,KAAA,aAAAC,EACA,KAAA,KAAAE,EACA,KAAA,YAAAV,EACA,KAAA,SAAAW,EACA,KAAA,SAAAE,EACA,KAAA,SAAAC,CACf,CACL,CAEO,MAAME,EAAQ,CACnB,YACkBX,EAAaC,IACbP,EAAgB,GAChBkB,EAAkB,GAClBjB,EAAsB,GACtBkB,EAAgB,GAChBC,EAAwB,GACxBC,EAAgB,IAAIvB,EACpBwB,EAAiB,IAAIxB,EACrByB,EAAY,IAAIzB,EAChB0B,EAAqB,CAAA,EACrBC,EAAa,IAAI,KACjC,CAXgB,KAAA,GAAAnB,EACA,KAAA,MAAAN,EACA,KAAA,QAAAkB,EACA,KAAA,YAAAjB,EACA,KAAA,MAAAkB,EACA,KAAA,cAAAC,EACA,KAAA,SAAAC,EACA,KAAA,UAAAC,EACA,KAAA,KAAAC,EACA,KAAA,YAAAC,EACA,KAAA,KAAAC,CACf,CACL,CAEO,MAAMrB,EAAS,CACpB,YACkBsB,EAAgB,GAChBC,EAAoB,GACpBC,EAAgB,GAChBC,EAAiB,GACjBC,EAAmB,GACnC,CALgB,KAAA,MAAAJ,EACA,KAAA,UAAAC,EACA,KAAA,MAAAC,EACA,KAAA,OAAAC,EACA,KAAA,SAAAC,CACf,CACL,CAEO,MAAMhC,CAAI,CACf,YAA4BiC,EAAe,GAAI,CAAnB,KAAA,KAAAA,CAAoB,CAClD,CAEO,MAAMC,EAAW,CACtB,YACkB1B,EAAaC,EAAG,EAChB0B,EAAY,IAAInC,EAChBoC,EAAe,GACfC,EAAqB,EACrBC,EAAgB,OAAO,iBACvC,CALgB,KAAA,GAAA9B,EACA,KAAA,KAAA2B,EACA,KAAA,KAAAC,EACA,KAAA,WAAAC,EACA,KAAA,MAAAC,CACf,CACL,CAEO,MAAMC,EAAK,CAChB,YACkB/B,EAAaC,EAAG,EAChB2B,EAAe,GACfR,EAAgB,GAChBD,MAAiB,KACjBa,EAAkB,GAClBC,EAAkB,GAClC,CANgB,KAAA,GAAAjC,EACA,KAAA,KAAA4B,EACA,KAAA,MAAAR,EACA,KAAA,KAAAD,EACA,KAAA,QAAAa,EACA,KAAA,QAAAC,CACf,CACL,CC7FA,MAAMC,GAAiB,CACrB,OAAQ,0CACR,WAAY,gCACZ,YACE,uEACF,UAAW,gBACX,cAAe,4BACf,kBAAmB,eACnB,MAAO,2CACT,EAEA,IAAIC,GAEG,MAAMC,GAAqB,IAAOD,GAAME,GAAcH,EAAc,EAG9DI,EAAe,IAAMC,GAAaJ,EAAG,EACrCK,GAAa,IAAMC,GAAWN,EAAG,EACjCO,GAAU,IAAMC,GAAQR,EAAG,ECC3BS,GAAkB,MAC7BC,GACqC,CACjC,GAAA,CAEK,OAAA,MADU,MAAM,MAAMA,CAAO,GACd,oBACfC,EAAO,CACN,QAAA,MAAM,yBAA0BA,CAAK,EACtC,MACT,CACF,EAEaC,EAAa/D,GAAgBA,EAAI,MAAM,QAAQ,ECV/CgE,GAA0B,CACrCC,EAAqB,gBACrBC,EAAmB,kBACI,CACvB,QAAS,MAAOlD,GAAe,MAAMmD,GAAQnD,EAAIiD,EAAYC,CAAQ,EACrE,OAAQ,SAAY,MAAME,GAAOH,EAAYC,CAAQ,EACrD,OAAQ,MAAOG,GACb,MAAMC,GAAOD,EAAYJ,EAAYC,CAAQ,EAC/C,OAAQ,MAAOG,GACb,MAAME,GAAOF,EAAYJ,EAAYC,CAAQ,EAC/C,OAAQ,MAAOM,GACb,MAAMC,GAAQD,EAAYP,EAAYC,CAAQ,CAClD,GAEMC,GAAU,MACdnD,EACA0D,EACAC,IACgC,CAChC,MAAMC,EAASC,EAAIvB,EAAA,EAAgBoB,EAAaC,EAAW3D,CAAE,EACzD,GAAA,CACI,MAAA8D,EAAc,MAAMC,EAAOH,CAAM,EAChC,OAAAI,GAAaF,EAAY,KAAA,CAAM,QAC/BhB,EAAO,CACP,OAAA,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMM,GAAS,MACbM,EACAC,IACkC,CAClC,MAAMM,EAAWC,GAAMjB,EAAWX,IAAgBoB,EAAaC,CAAS,CAAC,EACrE,GAAA,CAEK,OADa,MAAMQ,GAAQF,CAAQ,GACvB,KAAK,IAAIJ,GAAOA,EAAI,MAAM,EAAE,IAAIG,EAAY,QACxDlB,EAAO,CACP,OAAA,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMQ,GAAS,MACbD,EACAK,EACAC,IACgC,CAChC,MAAMS,EAAUnB,EAAWX,EAAa,EAAGoB,EAAaC,CAAS,EAC7D,GAAA,CACF,MAAMU,EAAgB,MAAMC,GAAajB,EAAYK,EAAaC,CAAS,EACrET,EAAWqB,GAAWF,CAAa,EACnCT,EAASC,EAAIO,EAASlB,EAAS,EAAE,EACjC,aAAAsB,GAAOZ,EAAQV,CAAQ,EACtBc,GAAad,CAAQ,QACrBJ,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,EAEMS,GAAS,MACbF,EACAK,EACAC,IACgC,CAChC,MAAMC,EAASC,EAAIvB,IAAgBoB,EAAaC,EAAWN,EAAW,EAAE,EACpE,GAAA,CACF,MAAMoB,EAAeT,IAAc,MAAMD,EAAOH,CAAM,GAAG,MAAM,EACzDc,EAAU,CACdD,EAAa,aAAa,KAC1B,GAAGA,EAAa,eAAe,IAAUhG,GAAAA,EAAG,aAAa,IAAI,CAAA,EAGzDkG,EAAQ,CACZtB,EAAW,aAAa,KACxB,GAAGA,EAAW,eAAe,IAAU5E,GAAAA,EAAG,aAAa,IAAI,CAAA,EAEvDmG,EAAcF,EACjB,OAAOjG,GAAM,CAACkG,EAAM,SAASlG,CAAE,CAAC,EAChC,OAAOA,GAAM,CAACsE,EAAUtE,CAAE,CAAC,EAExB,MAAA,QAAQ,IAAImG,EAAY,IAAI,MAAMnG,GAAM,MAAMoG,GAAapG,CAAE,CAAC,CAAC,EAErE,MAAMqG,EAAqB,MAAMR,GAC/BjB,EACAK,EACAC,CAAA,EAGIE,EAAMU,GAAWO,CAAkB,EACnC,aAAAC,EAAUnB,EAAQC,CAAG,EACdG,GAAaH,CAAG,QAEtBf,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,EAEMW,GAAU,MACdpE,EACAqE,EACAC,IACG,CACH,UAAWN,KAAchE,EAAa,CACpC,MAAMuE,EAASC,EAAIvB,IAAgBoB,EAAaC,EAAWN,EAAW,EAAE,EACpE,GAAA,CACF,MAAM2B,EAAchB,IAAc,MAAMD,EAAOH,CAAM,GAAG,MAAM,EAC1D,GAAA,CACF,MAAM,QAAQ,IACZ,CACEoB,EAAY,aAAa,KACzB,GAAGA,EAAY,eAAe,IAAUvG,GAAAA,EAAG,aAAa,IAAI,GAC5D,IAAI,MAAMA,GAAM,MAAMoG,GAAapG,CAAE,CAAC,CAAA,QAEnCqE,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACA,MAAMmC,GAAUrB,CAAM,QACfd,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,CACF,EAEMyB,GAAclB,GAA2B,CAC7C,KAAM,CAAE,GAAArD,EAAI,SAAAQ,EAAU,SAAAC,EAAU,eAAAF,EAAgB,GAAG2E,CAAS,EAAA7B,EAErD,MAAA,CACL,GAFkB8B,GAASnF,CAAE,EAAIA,EAAKC,EAAG,EAGzC,eAAgB,OAAO,YACrB,IAAI,IAAIM,EAAe,IAAI6E,EAAa,EAAE,IAAIC,GAAQ,CAACA,EAAK,GAAIA,CAAI,CAAC,CAAC,CACxE,EACA,SAAUC,EAAU,SAAS9E,CAAQ,EACrC,SAAU8E,EAAU,SAAS7E,CAAQ,EACrC,GAAGyE,CAAA,CAEP,EAEME,GAAiBG,GAAiC,CACtD,KAAM,CAAE,GAAAvF,EAAI,SAAAQ,EAAU,SAAAC,EAAU,GAAGyE,CAAS,EAAAK,EAErC,MAAA,CACL,GAFkBJ,GAASnF,CAAE,EAAIA,EAAKC,EAAG,EAGzC,SAAUqF,EAAU,SAAS9E,CAAQ,EACrC,SAAU8E,EAAU,SAAS7E,CAAQ,EACrC,GAAGyE,CAAA,CAEP,EAEMlB,GAAgBX,GAAgC,CACpD,KAAM,CAAE,SAAA7C,EAAU,SAAAC,EAAU,eAAAF,EAAgB,GAAG2E,CAAS,EAAA7B,EACjD,MAAA,CACL,GAAG6B,EACH,eAAgB,OAAO,OAAO3E,CAAc,EAAE,IAAIiF,EAAe,EACjE,SAAUhF,EAAS,OAAO,EAC1B,SAAUC,EAAS,OAAO,CAAA,CAE9B,EAEM+E,GAAmBD,GAAsC,CAC7D,KAAM,CAAE,SAAA/E,EAAU,SAAAC,EAAU,GAAGyE,GAASK,EACjC,MAAA,CACL,GAAGL,EACH,SAAU1E,EAAS,OAAO,EAC1B,SAAUC,EAAS,OAAO,CAAA,CAE9B,EAEM6D,GAAe,MACnBjB,EACAK,EACAC,IACwB,CAClB,MAAA8B,EAAQC,GAAarC,CAAU,EAC1B,UAAAsC,KAASF,EAAM,UAAW,CAC7B,MAAA5C,EAAU8C,EAAM,CAAC,EACjBC,EAAW,GAAGlC,CAAW,GAAGC,CAAS,IAAI1D,EAAA,EAAO,MAAM,GACtD4F,EAAc,MAAMjD,GAAgBC,CAAO,EAC3CiD,EAAe,MAAMC,GAAYH,EAAUC,CAAU,EACrDJ,EAAA,IAAI5C,EAASiD,CAAW,CAChC,CACO,OAAAE,GAAa3C,EAAYoC,CAAK,CACvC,EAEMC,GAAgBrC,GAAgD,CAC9D,MAAA4C,MAAc,IACpB,OACElD,EAAUM,EAAW,aAAa,IAAI,GACtCA,EAAW,aAAa,OAAS,IAEjC4C,EAAQ,IAAI5C,EAAW,aAAa,KAAM,EAAE,EAC9CA,EAAW,eACR,IAAI5E,GAAMA,EAAG,aAAa,IAAI,EAC9B,OAAOA,GAAMsE,EAAUtE,CAAE,CAAC,EAC1B,QAAQA,GAAMwH,EAAQ,IAAIxH,EAAI,EAAE,CAAC,EAC7BwH,CACT,EAEMD,GAAe,CACnB3C,EACAoC,IACe,CACf,MAAMS,EAAOC,GACXC,EAAAA,QAAQX,EAAM,IAAIU,CAAG,CAAC,EAAIA,EAAMV,EAAM,IAAIU,CAAG,GAAK,GAC7C,MAAA,CACL,GAAG9C,EACH,aAAc,CAAE,KAAM6C,EAAI7C,EAAW,aAAa,IAAI,CAAE,EACxD,eAAgBA,EAAW,eAAe,IAAYgD,IAAA,CACpD,GAAGA,EACH,aAAc,CAAE,KAAMH,EAAIG,EAAI,aAAa,IAAI,CAAE,CAAA,EACjD,CAAA,CAEN,ECnOaN,GAAc,MACzBO,EACAC,IAEA,IAAI,QAAQ,CAACC,EAASC,IAAW,CAC/B,MAAMC,EAAa5J,GAAI0F,GAAW,EAAG8D,CAAU,EAC3C,GAAA,CACI,MAAAK,EAAyBC,GAAqBF,EAAYH,EAAM,CACpE,YAAa,SAAA,CACd,EACUI,EAAA,GACT,gBACKE,GAAA,CAAC,EACG/D,GAAA,CACP2D,EAAO3D,CAAK,CACd,EACA,IACEgE,GAAeH,EAAW,SAAS,GAAG,EAAE,KAAKH,CAAO,EAAE,MAAMC,CAAM,CAAA,QAE/D3D,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,CAAC,EAcU+B,GAAe,MAAO7F,GACjC,MAAM+H,GAAajK,GAAI0F,GAAA,EAAcxD,CAAG,CAAC,ECjC9BgI,GAA4B,CACvCC,EAAsB,gBACtBC,EAAoB,yBACK,CACzB,IAAK,SAAY,MAAMhB,GAAIe,EAAaC,CAAS,EACjD,IAAK,MAAMC,GAAK,MAAMC,GAAID,EAAGF,EAAaC,CAAS,CACrD,GAEMhB,GAAM,MACVe,EACAC,IAC0B,CAC1B,MAAMtD,EAASC,EAAIvB,EAAa,EAAG2E,EAAaC,CAAS,EACnDG,EAAW,MAAMtD,EAAOH,CAAM,EACpC,OAAOyD,EAAS,SACXA,EAAS,KAAK,EACf,IAAIjI,EACV,EAEMgI,GAAM,MACVjI,EACA8H,EACAC,IAC0B,CAC1B,MAAMtD,EAASC,EAAIvB,EAAa,EAAG2E,EAAaC,CAAS,EAEzD,IADyB,MAAMnD,EAAOH,CAAM,GAAG,KAAK,IAC5B,OACtB,MAAMY,GAAOZ,EAAQ,CAAE,GAAGzE,CAAc,CAAA,MACnC,CACL,MAAMmI,EAAsB,MAAMhD,GAChCnF,EACA8H,EACAC,CAAA,EAEF,MAAMnC,EAAUnB,EAAQ,CAAE,GAAG0D,CAAqB,CAAA,CACpD,CACO,OAAAnI,CACT,EAEMmF,GAAe,MACnBnF,EACAuE,EACAC,IAC0B,CACpB,MAAA8B,EAAQC,GAAavG,CAAY,EAC5B,UAAAwG,KAASF,EAAM,UAAW,CAC7B,MAAA5C,EAAU8C,EAAM,CAAC,EACjBC,EAAW,GAAGlC,CAAW,GAAGC,CAAS,IAAI1D,EAAA,EAAO,MAAM,GACtD4F,EAAc,MAAMjD,GAAgBC,CAAO,EAC3CiD,EAAe,MAAMC,GAAYH,EAAUC,CAAU,EACrDJ,EAAA,IAAI5C,EAASiD,CAAW,CAChC,CACO,OAAAE,GAAa7G,EAAcsG,CAAK,CACzC,EAEMC,GAAgBvG,GAAoD,CAClE,MAAA8G,MAAc,IAChB,OAAAlD,EAAU5D,EAAa,MAAM,IAAI,GACnC8G,EAAQ,IAAI9G,EAAa,MAAM,KAAM,EAAE,EAClC8G,CACT,EAEMD,GAAe,CACnB7G,EACAsG,KAIO,CACL,GAAGtG,EACH,MAAO,CAAE,MAJEgH,GACXC,EAAAA,QAAQX,EAAM,IAAIU,CAAG,CAAC,EAAIA,EAAMV,EAAM,IAAIU,CAAG,GAAK,IAG/BhH,EAAa,MAAM,IAAI,CAAE,CAAA,GCrDnCoI,GAAuB,CAClCN,EAAc,gBACdC,EAAY,eACQ,CACpB,OAAQ,MAAOM,GACb,MAAMlE,GAAOkE,EAASP,EAAaC,CAAS,EAC9C,IAAK,MAAOM,GAAqB,MAAMtB,GAAIsB,EAASP,EAAaC,CAAS,EAC1E,QAAS,MAAOlH,GAAe,MAAMmD,GAAQnD,EAAIiH,EAAaC,CAAS,EACvE,OAAQ,SAAY,MAAM9D,GAAO6D,EAAaC,CAAS,EACvD,OAAQ,MAAOM,GACb,MAAMjE,GAAOiE,EAASP,EAAaC,CAAS,EAC9C,OAAQ,MAAOM,GACb,MAAM/D,GAAQ+D,EAASP,EAAaC,CAAS,CACjD,GAEM5D,GAAS,MACbkE,EACA9D,EACAC,IAC6B,CAC7B,MAAMS,EAAUnB,EAAWX,EAAa,EAAGoB,EAAaC,CAAS,EAC7D,GAAA,CACF,MAAM8D,EAAa,MAAMnD,GAAakD,EAAS9D,EAAaC,CAAS,EAC/DT,EAAWqB,GAAWkD,CAAU,EAChC7D,EAASC,EAAIO,EAASlB,EAAS,EAAE,EACjC,aAAAsB,GAAOZ,EAAQV,CAAQ,EACtBc,EAAad,CAAQ,QACrBJ,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,EAEMoD,GAAM,MACVsB,EACA9D,EACAC,IAC6B,CAC7B,MAAMC,EAASC,EAAIvB,IAAgBoB,EAAaC,EAAW6D,EAAQ,EAAE,EACjE,GAAA,CACI3D,MAAAA,EAAM,MAAME,EAAOH,CAAM,EACxB,OAAAI,EAAaH,EAAI,KAAA,CAAM,QACvBf,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMK,GAAU,MACdnD,EACA0D,EACAC,IAC6B,CAC7B,MAAMC,EAASC,EAAIvB,EAAA,EAAgBoB,EAAaC,EAAW3D,CAAE,EACzD,GAAA,CACI6D,MAAAA,EAAM,MAAME,EAAOH,CAAM,EACxB,OAAAI,EAAaH,EAAI,KAAA,CAAM,QACvBf,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMM,GAAS,MACbM,EACAC,IAC+B,CAC/B,MAAMM,EAAWC,GAAMjB,EAAWX,IAAgBoB,EAAaC,CAAS,CAAC,EACrE,GAAA,CAEK,OADa,MAAMQ,GAAQF,CAAQ,GACvB,KAAK,IAAIJ,GAAOA,EAAI,MAAM,EAAE,IAAIG,CAAY,QACxDlB,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMS,GAAS,MACbiE,EACA9D,EACAC,IAC6B,CAC7B,MAAMC,EAASC,EAAIvB,IAAgBoB,EAAaC,EAAW6D,EAAQ,EAAE,EACjE,GAAA,CAGI,MAAAE,EAFY1D,GAAc,MAAMD,EAAOH,CAAM,GAAG,MAAM,EAC5B,YAAY,IAAInF,GAAMA,EAAG,IAAI,EAE1D,OAAOA,GAAM,CAAC+I,EAAQ,YAAY,IAAI/I,GAAMA,EAAG,IAAI,EAAE,SAASA,CAAE,CAAC,EACjE,OAAaA,GAAA,CAACsE,EAAUtE,CAAE,CAAC,EAC1B,GAAA,CACF,MAAM,QAAQ,IACZiJ,EAAkB,IAAI,MAAMjJ,GAAM,MAAMoG,GAAapG,CAAE,CAAC,CAAA,QAEnDqE,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACA,MAAM6E,EAAiB,MAAMrD,GAAakD,EAAS9D,EAAaC,CAAS,EACnEE,EAAMU,GAAWoD,CAAc,EAC/B,aAAA5C,EAAUnB,EAAQC,CAAG,EACdG,EAAaH,CAAG,QAEtBf,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,EAEMW,GAAU,MACdnE,EACAoE,EACAC,IAC0B,CAC1B,UAAW6D,KAAWlI,EAAU,CAC9B,MAAMsE,EAASC,EAAIvB,IAAgBoB,EAAaC,EAAW6D,EAAQ,EAAE,EACjE,GAAA,CACF,MAAMI,EAAW5D,GAAc,MAAMD,EAAOH,CAAM,GAAG,MAAM,EACvD,GAAA,CACF,MAAM,QAAQ,IACZgE,EAAS,YAAY,IAAI,MAAMnJ,GAAM,MAAMoG,GAAapG,EAAG,IAAI,CAAC,CAAA,QAE3DqE,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACA,MAAMmC,GAAUrB,CAAM,QACfd,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,CAEF,EAEMyB,GAAciD,GAAqB,CACjC,KAAA,CAAE,GAAAxH,EAAI,SAAAe,EAAU,UAAAC,EAAW,KAAAC,EAAM,YAAAC,EAAa,KAAAC,EAAM,GAAG+D,CAAS,EAAAsC,EAE/D,MAAA,CACL,GAFkBrC,GAASnF,CAAE,EAAIA,EAAKC,EAAG,EAGzC,SAAU,CAAE,KAAMc,EAAS,IAAK,EAChC,UAAW,CAAE,KAAMC,EAAU,IAAK,EAClC,KAAMC,EAAK,KACX,YAAaC,EAAY,IAAIzC,GAAMA,EAAG,IAAI,EAC1C,KAAM6G,EAAU,SAASnE,CAAI,EAC7B,GAAG+D,CAAA,CAEP,EAEMlB,EAAgBwD,GAA0B,CACxC,KAAA,CAAE,SAAAzG,EAAU,UAAAC,EAAW,KAAAC,EAAM,YAAAC,EAAa,KAAAC,EAAM,GAAG+D,CAAS,EAAAsC,EAC3D,MAAA,CACL,SAAU,IAAIhI,EAAIuB,EAAS,IAAI,EAC/B,UAAW,IAAIvB,EAAIwB,EAAU,IAAI,EACjC,KAAM,IAAIxB,EAAIyB,CAAI,EAClB,YAAaC,EAAY,IAAKzC,GAAY,IAAIe,EAAIf,CAAE,CAAC,EACrD,MAAM0C,GAAA,YAAAA,EAAM,eAAgB,KAC5B,GAAG+D,CAAA,CAEP,EAEMZ,GAAe,MACnBkD,EACA9D,EACAC,IACqB,CACf,MAAA8B,EAAQC,GAAa8B,CAAO,EACvB,UAAA7B,KAASF,EAAM,UAAW,CAC7B,MAAA5C,EAAU8C,EAAM,CAAC,EACjBC,EAAW,GAAGlC,CAAW,GAAGC,CAAS,IAAI1D,EAAA,EAAO,MAAM,GACtD4F,EAAc,MAAMjD,GAAgBC,CAAO,EAC3CiD,EAAe,MAAMC,GAAYH,EAAUC,CAAU,EACrDJ,EAAA,IAAI5C,EAASiD,CAAW,CAChC,CACO,OAAAE,GAAawB,EAAS/B,CAAK,CACpC,EAEMC,GAAgB8B,GAA0C,CACxD,MAAAvB,MAAc,IAEpB,MADe,CAACuB,EAAQ,KAAM,GAAGA,EAAQ,WAAW,EAEjD,IAAU/I,GAAAA,EAAG,IAAI,EACjB,OAAaA,GAAAsE,EAAUtE,CAAE,CAAC,EAC1B,QAAQA,GAAMwH,EAAQ,IAAIxH,EAAI,EAAE,CAAC,EAC7BwH,CACT,EAEMD,GAAe,CACnBwB,EACA/B,IACY,CACZ,MAAMS,EAAOC,GACXC,EAAAA,QAAQX,EAAM,IAAIU,CAAG,CAAC,EAAIA,EAAMV,EAAM,IAAIU,CAAG,GAAK,GAC7C,MAAA,CACL,GAAGqB,EACH,KAAM,IAAIhI,EAAI0G,EAAIsB,EAAQ,KAAK,IAAI,CAAC,EACpC,YAAaA,EAAQ,YAAY,IAAI/I,GAAM,IAAIe,EAAI0G,EAAIzH,EAAG,IAAI,CAAC,CAAC,CAAA,CAEpE,ECnNaoJ,GAA0B,CACrCZ,EAAsB,gBACtBC,EAAoB,oBACC,CACrB,IAAK,SAAY,MAAMhB,GAAIe,EAAaC,CAAS,EACjD,IAAK,MAAMlI,GAAO,MAAMoI,GAAIpI,EAAKiI,EAAaC,CAAS,CACzD,GAEMhB,GAAM,MAAOe,EAAqBC,IAAoC,CAC1E,MAAMtD,EAASC,EAAIvB,EAAa,EAAG2E,EAAaC,CAAS,EACnDG,EAAW,MAAMtD,EAAOH,CAAM,EACpC,OAAOyD,EAAS,SAAYA,EAAS,KAAK,EAAY,IAAI7H,CAC5D,EAEM4H,GAAM,MACVpI,EACAiI,EACAC,IACiB,CACjB,MAAMtD,EAASC,EAAIvB,EAAa,EAAG2E,EAAaC,CAAS,GAChC,MAAMnD,EAAOH,CAAM,GAAG,KAAK,IAC5B,QAAW,MAAMY,GAAOZ,EAAQ,CAAE,GAAG5E,CAAK,CAAA,EAClE,MAAMsI,EAAsB,MAAMQ,GAAe9I,EAAKiI,EAAaC,CAAS,EAC5E,aAAMnC,EAAUnB,EAAQ,CAAE,GAAG0D,CAAqB,CAAA,EAC3CA,CACT,EAEMQ,GAAiB,MACrB9I,EACA0E,EACAC,IACiB,CACX,MAAA8B,EAAQC,GAAa1G,CAAG,EACnB,UAAA2G,KAASF,EAAM,UAAW,CAC7B,MAAA5C,EAAU8C,EAAM,CAAC,EACjBC,EAAW,GAAGlC,CAAW,GAAGC,CAAS,IAAI1D,EAAA,EAAO,MAAM,GACtD4F,EAAc,MAAMjD,GAAgBC,CAAO,EAC3CiD,EAAe,MAAMC,GAAYH,EAAUC,CAAU,EACrDJ,EAAA,IAAI5C,EAASiD,CAAW,CAChC,CACO,OAAAE,GAAahH,EAAKyG,CAAK,CAChC,EAEMC,GAAgB1G,GAAkC,CAChD,MAAAiH,MAAc,IAChB,OAAAlD,EAAU/D,EAAI,IAAI,GAAWiH,EAAA,IAAIjH,EAAI,KAAM,EAAE,EAC1CiH,CACT,EAEMD,GAAe,CAAChH,EAAUyG,KAGvB,CACL,MAHWU,GACXC,EAAAA,QAAQX,EAAM,IAAIU,CAAG,CAAC,EAAIA,EAAMV,EAAM,IAAIU,CAAG,GAAK,IAExCnH,EAAI,IAAI,CAAA,GC3CT+I,GAAqB,CAChCd,EAAc,gBACdC,EAAY,YACM,CAClB,OAAQ,SAAY,MAAM9D,GAAO6D,EAAaC,CAAS,EACvD,QAAS,MAAOlH,GAAe,MAAMmD,GAAQnD,EAAIiH,EAAaC,CAAS,EACvE,OAAQ,MAAOc,GAAe,MAAM1E,GAAO0E,EAAMf,EAAaC,CAAS,EACvE,OAAQ,MAAOc,GAAe,MAAMzE,GAAOyE,EAAMf,EAAaC,CAAS,EACvE,OAAQ,MAAOe,GAAkB,MAAMxE,GAAQwE,EAAOhB,EAAaC,CAAS,CAC9E,GAEA,eAAe9D,GACb6D,EACAC,EACyB,CACzB,MAAMjD,EAAWC,GAAMjB,EAAWX,IAAgB2E,EAAaC,CAAS,CAAC,EACrE,GAAA,CAEK,OADa,MAAM/C,GAAQF,CAAQ,GACvB,KAAK,IAAIJ,GAAOA,EAAI,MAAM,EAAE,IAAIG,EAAY,QACxDlB,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,CAEA,eAAeK,GACbnD,EACAiH,EACAC,EACuB,CACvB,MAAMtD,EAASC,EAAIvB,EAAA,EAAgB2E,EAAaC,EAAWlH,CAAE,EACzD,GAAA,CACI6D,MAAAA,EAAM,MAAME,EAAOH,CAAM,EACxB,OAAAI,GAAaH,EAAI,KAAA,CAAM,QACvBf,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,CAEA,eAAeQ,GACb0E,EACAf,EACAC,EACuB,CACvB,MAAM9C,EAAUnB,EAAWX,EAAa,EAAG2E,EAAaC,CAAS,EAC7D,GAAA,CACI,MAAAhE,EAAWqB,GAAWyD,CAAI,EAC1BpE,EAASC,EAAIO,EAASlB,EAAS,EAAE,EACjC,aAAAsB,GAAOZ,EAAQV,CAAQ,EACtBc,GAAad,CAAQ,QACrBJ,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,CAEA,eAAeS,GACbyE,EACAf,EACAC,EACuB,CACvB,MAAMtD,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWc,EAAK,EAAE,EAC9D,GAAA,CACInE,MAAAA,EAAMU,GAAWyD,CAAI,EACrB,aAAAjD,EAAUnB,EAAQC,CAAG,EACdG,GAAaH,CAAG,QAEtBf,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,CAEA,eAAeW,GACbwE,EACAhB,EACAC,EACuB,CACvB,UAAWc,KAAQC,EAAO,CACxB,MAAMrE,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWc,EAAK,EAAE,EAC9D,GAAA,CACF,MAAM/C,GAAUrB,CAAM,QACfd,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,CAEF,CAEA,MAAMyB,GAAcyD,GAAe,CACjC,KAAM,CAAE,GAAAhI,EAAI,KAAAmB,EAAM,GAAG+D,GAAS8C,EAEvB,MAAA,CACL,GAFkB7C,GAASnF,CAAE,EAAIA,EAAKC,EAAG,EAGzC,KAAMqF,EAAU,SAASnE,CAAI,EAC7B,GAAG+D,CAAA,CAEP,EAEMlB,GAAgBgE,GAAoB,CACxC,KAAM,CAAE,KAAA7G,EAAM,GAAG+D,CAAA,EAAS8C,EACnB,MAAA,CACL,KAAM7G,EAAK,OAAO,OAAS,KAC3B,GAAG+D,CAAA,CAEP,ECnGagD,GAA4B,CACvCjB,EAAc,gBACdC,EAAY,mBACa,CACzB,OAAQ,SAAY,MAAM9D,GAAO6D,EAAaC,CAAS,EACvD,QAAS,MAAOlH,GAAe,MAAMmD,GAAQnD,EAAIiH,EAAaC,CAAS,EACvE,OAAQ,MAAOiB,GACb,MAAM7E,GAAO6E,EAAYlB,EAAaC,CAAS,EACjD,OAAQ,MAAOiB,GACb,MAAM5E,GAAO4E,EAAYlB,EAAaC,CAAS,EACjD,YAAa,MAAOkB,GAClB,MAAMC,GAAYD,EAAcnB,EAAaC,CAAS,EACxD,OAAQ,MAAOkB,GACb,MAAM3E,GAAQ2E,EAAcnB,EAAaC,CAAS,CACtD,GAEA,eAAe9D,GACb6D,EACAC,EAC+B,CAC/B,MAAMjD,EAAWC,GACfjB,EAAWX,EAAA,EAAgB2E,EAAaC,CAAS,EACjDoB,GAAQ,OAAO,CAAA,EAEb,GAAA,CAEK,OADa,MAAMnE,GAAQF,CAAQ,GACvB,KAAK,IAAIJ,GAAOA,EAAI,MAAM,EAAE,IAAIG,EAAY,QACxDlB,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,CAEA,eAAeK,GACbnD,EACAiH,EACAC,EAC6B,CAC7B,MAAMtD,EAASC,EAAIvB,EAAA,EAAgB2E,EAAaC,EAAWlH,CAAE,EACzD,GAAA,CACI6D,MAAAA,EAAM,MAAME,EAAOH,CAAM,EACxB,OAAAI,GAAaH,EAAI,KAAA,CAAM,QACvBf,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,CAEA,eAAeQ,GACb6E,EACAlB,EACAC,EAC6B,CAC7B,MAAM9C,EAAUnB,EAAWX,EAAa,EAAG2E,EAAaC,CAAS,EAC7D,GAAA,CACF,MAAMO,EAAa,MAAMnD,GAAa6D,EAAYlB,EAAaC,CAAS,EAClEhE,EAAWqB,GAAWkD,CAAU,EAChC7D,EAASC,EAAIO,EAASlB,EAAS,EAAE,EACjC,aAAAsB,GAAOZ,EAAQV,CAAQ,EACtBc,GAAad,CAAQ,QACrBJ,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,CAEA,eAAeS,GACb4E,EACAlB,EACAC,EAC6B,CAC7B,MAAMtD,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWiB,EAAW,EAAE,EACpE,GAAA,CACF,MAAMI,EAAevE,IAAc,MAAMD,EAAOH,CAAM,GAAG,MAAM,EAC3D,GAAA,CACE2E,EAAa,KAAK,OAASJ,EAAW,KAAK,MACvC,MAAAtD,GAAa0D,EAAa,KAAK,IAAI,QACpCzF,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACA,MAAM6E,EAAiB,MAAMrD,GAC3B6D,EACAlB,EACAC,CAAA,EAEIrD,EAAMU,GAAWoD,CAAc,EAC/B,aAAA5C,EAAUnB,EAAQC,CAAG,EACdG,GAAaH,CAAG,QAEtBf,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,CAEA,eAAeuF,GACbD,EACAnB,EACAC,EACuB,CACnB,GAAA,CACF,SAAW,CAACsB,EAAOL,CAAU,IAAKC,EAAa,UAAW,CACxD,MAAMxE,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWiB,EAAW,EAAE,EACxE,MAAMpD,EAAUnB,EAAQ,CAAE,MAAO4E,CAAO,CAAA,CAC1C,QACO1F,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,CAEA,eAAeW,GACb2E,EACAnB,EACAC,EACuB,CACvB,UAAWiB,KAAcC,EAAc,CACrC,MAAMxE,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWiB,EAAW,EAAE,EACpE,GAAA,CACE,GAAA,CACI,MAAAtD,GAAasD,EAAW,KAAK,IAAI,QAChCrF,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACA,MAAMmC,GAAUrB,CAAM,QACfd,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,CAEF,CAEA,MAAMyB,GAAc4D,GAA2B,CAC7C,KAAM,CAAE,GAAAnI,EAAI,KAAA2B,EAAM,GAAGuD,GAASiD,EAEvB,MAAA,CACL,GAFkBhD,GAASnF,CAAE,EAAIA,EAAKC,EAAG,EAGzC,KAAM,CAAE,KAAM0B,EAAK,IAAK,EACxB,GAAGuD,CAAA,CAEP,EAEMlB,GAAgBmE,GAAgC,CACpD,KAAM,CAAE,KAAAxG,EAAM,GAAGuD,CAAA,EAASiD,EACnB,MAAA,CACL,KAAM,IAAI3I,EAAImC,EAAK,IAAI,EACvB,GAAGuD,CAAA,CAEP,EAEMZ,GAAe,MACnB6D,EACAzE,EACAC,IACwB,CAClB,MAAA8B,EAAQC,GAAayC,CAAU,EAC1B,UAAAxC,KAASF,EAAM,UAAW,CAC7B,MAAA5C,EAAU8C,EAAM,CAAC,EACjBC,EAAW,GAAGlC,CAAW,GAAGC,CAAS,IAAI1D,GAAI,OAC7C4F,EAAc,MAAMjD,GAAgBC,CAAO,EAC3CiD,EAAe,MAAMC,GAAYH,EAAUC,CAAU,EACrDJ,EAAA,IAAI5C,EAASiD,CAAW,CAChC,CACO,OAAAE,GAAamC,EAAY1C,CAAK,CACvC,EAEMC,GAAgByC,GAAgD,CAC9D,MAAAlC,MAAc,IAEpB,MADe,CAACkC,EAAW,IAAI,EAE5B,IAAU1J,GAAAA,EAAG,IAAI,EACjB,OAAaA,GAAAsE,EAAUtE,CAAE,CAAC,EAC1B,QAAQA,GAAMwH,EAAQ,IAAIxH,EAAI,EAAE,CAAC,EAC7BwH,CACT,EAEMD,GAAe,CACnBmC,EACA1C,IACe,CACf,MAAMS,EAAOC,GACXC,EAAAA,QAAQX,EAAM,IAAIU,CAAG,CAAC,EAAIA,EAAMV,EAAM,IAAIU,CAAG,GAAK,GAC7C,MAAA,CACL,GAAGgC,EACH,KAAM,IAAI3I,EAAI0G,EAAIiC,EAAW,KAAK,IAAI,CAAC,CAAA,CAE3C,ECxMaM,GAAuB,KAAuB,CACzD,OAAQ,MACNC,EACAC,EACAC,IACqB,CACjB,GAAA,CACI,aAAAC,GACJnG,GAAQ,EACRkG,EAAaE,GAA0BC,EAAA,EAEzC,MAAMC,GAA2BtG,GAAA,EAAWgG,EAAMC,CAAI,EAC/C,SACA7F,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACO,MAAA,EACT,EACA,QAAS,SAA8B,CACjC,GAAA,CACI,aAAAmG,GAAQvG,IAAS,EAChB,SACAI,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACO,MAAA,EACT,EACA,WAAY,SAOH,MANiB,SACtB,IAAI,QAAQ,CAAC0D,EAASK,IAAM,CAClBnE,GAAA,EAAE,mBAA2BgG,GAAA,CAC3BlC,EAAsBkC,GAAS,IAAI,CAAA,CAC5C,CAAA,CACF,GAC0B,CAEjC,GCxBMQ,GAA8B,CAClC,SAAU,IAAIhK,GACd,UAAW,GACX,MAAO,OAEP,WAAY,OACZ,WAAY,OACZ,QAAS,MACX,EAEMiK,GAAkBnG,GAAwB,EAC1CoG,GAAe7B,GAAqB,EACpC8B,GAAoBnB,GAA0B,EAEvCoB,EAAmBC,GAAY,iBAAkB,CAC5D,MAAO,IAAML,GACb,QAAS,CACP,MAAM,MAAO,CACX,KAAK,UAAY,GACjB,MAAM,KAAK,QACX,KAAK,UAAY,EACnB,EACA,MAAM,OAAQ,CACZ,MAAMM,EAAW,CACfxC,GAAA,EAA4B,IAAI,EAChCmC,GAAgB,OAAO,EACvBC,GAAa,OAAO,EACpBvB,GAAA,EAA0B,IAAI,EAC9BwB,GAAkB,OAAO,CAAA,EAEvB,GAAA,CACF,MAAMI,EAAU,MAAM,QAAQ,IAAID,CAAQ,EAC1C,KAAK,SAAW,IAAItK,GAClBuK,EAAQ,CAAC,EACRA,EAAQ,CAAC,EAAmB,KAAK,CAACC,EAAGC,IACpCC,GAAWF,EAAE,SAAUC,EAAE,QAAQ,CACnC,EACCF,EAAQ,CAAC,EAAgB,KAAK,CAACC,EAAGC,IAAMC,GAAWF,EAAE,KAAMC,EAAE,IAAI,CAAC,EACnEF,EAAQ,CAAC,EACTA,EAAQ,CAAC,CAAA,QAEJ3G,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,EACA,gBAAgBqF,EAAwB,CACtC,KAAK,WAAaA,EACb,KAAA,QAAQ,KAAK,CAAE,KAAM,iBAAiBA,EAAW,EAAE,GAAI,CAC9D,EACA,MAAM,wBAAyB,CACzB,GAAA,KAAK,aAAe,OAAW,CACjC,MAAM0B,EAAU,KAAK,QAAQ,aAAa,MAAM,OAAO,GAClD,KAAA,WAAc,MAAMR,GAAkB,QACzCQ,CAAA,CAEJ,CACF,EACA,sBAAsBxG,EAAwB,CAC5C,KAAK,WAAaA,EACb,KAAA,QAAQ,KAAK,CAAE,KAAM,eAAeA,EAAW,EAAE,GAAI,CAC5D,EACA,MAAM,wBAAyB,CACzB,GAAA,KAAK,aAAe,OAAW,CACjC,MAAMwG,EAAU,KAAK,QAAQ,aAAa,MAAM,OAAO,GACvD,KAAK,WAAc,MAAMV,GAAgB,QAAQU,CAAO,CAC1D,CACF,EACA,MAAM,qBAAsB,CACtB,GAAA,KAAK,UAAY,OAAW,CAC9B,MAAMA,EAAU,KAAK,QAAQ,aAAa,MAAM,OAAO,GACvD,KAAK,QAAW,MAAMT,GAAa,QAAQS,CAAO,CACpD,CACF,EACA,mBAAmBrC,EAAkB,CACnC,KAAK,QAAUA,EACV,KAAA,QAAQ,KAAK,CAAE,KAAM,YAAYA,EAAQ,EAAE,GAAI,CACtD,EACA,MAAO,CACL,KAAK,QAAU,OACf,KAAK,WAAa,OAClB,KAAK,QAAQ,MACf,CACF,CACF,CAAC,EAEKoC,GAAa,CAACF,EAASC,IAAYA,EAAE,QAAQ,EAAID,EAAE,QAAQ,8TCnFzDI,EAAQR,IACR,CAAE,gBAAAS,CAAoB,EAAAD,o5BCStBE,EAAc7I,GAClB,IAAI,KAAK,eAAe,KAAM,CAC5B,KAAM,UACN,MAAO,OAAA,CACR,EAAE,OAAOA,CAAI,2ZCzCd1D,GAAmB,CACnB,QAAW,YACX,KAAA,OACA,cAAwI,iJAEtFwM,GAAAC,EAAA,OAAA,CAChD,EAAA,+CACA,eAAc,MACd,6DAA+BxM,GAAA,KATnC,SAAAC,GAAAC,EAAAC,EAAA,yYCkCMiM,EAAQR,IACR,CAAE,sBAAAa,CAA0B,EAAAL,0wBClChCrM,GAAmB,CACnB,QAAA,YACA,cAAyB,kCAEk5BwM,GAAAC,EAAA,OAAA,CACz6B,EAAA,s8BAA2BxM,GAAA,KAN/B,SAAAC,GAAAC,EAAAC,EAAA,0gDC4BMiM,EAAQR,IACR,CAAE,mBAAAc,CAAuB,EAAAN,mRCrB3BZ,GAAgC,CACpC,KAAM,IAAInH,GACV,eAAgB,EAClB,EAEMsI,GAAUtC,GAAmB,EAE7BuC,GAAa,mDAENC,GAAqBhB,GAAY,8BAA+B,CAC3E,MAAO,IAAML,GACb,QAAS,CACP,MAAM,MAAO,CACX,GAAI,CAACoB,GAAW,KAAK,KAAK,KAAK,KAAK,EAAG,CACrC,KAAK,eAAiB,GACtB,MACF,CAEe,MAAMD,GAAQ,OAAO,KAAK,IAAI,YACvB,MACpB,KAAK,OAAO,IAAI,CACd,SAAU,QACV,QAAS,KACT,OAAQ,4BACR,KAAM,GAAA,CACP,EAED,KAAK,OAAO,IAAI,CACd,SAAU,UACV,QAAS,KACT,OAAQ,yCACR,KAAM,GAAA,CACP,CAEL,EACA,mBAAoB,CAClB,KAAK,eAAiB,EACxB,CACF,CACF,CAAC,gyBCcC,MAAMP,EAAQS,KACR,CAAE,KAAAvC,EAAM,eAAAwC,CAAe,EAAIC,GAAYX,CAAK,EAC5C,CAAE,KAAAY,EAAM,kBAAAC,CAAsB,EAAAb,EACpC,OAAA1M,GACE,IAAM4K,EAAK,MAAM,MACjB,CAACnB,EAAG+D,IAAOD,EAAkB,CAAA,m5CC7B/B,MAAMb,EAAQR,IACR,CAAE,SAAUuB,EAAM,MAAA/H,CAAM,EAAI2H,GAAYX,CAAK,EACnD,OAAAtM,EAAUsM,EAAM,IAAI,kdC9BpB,MAAMA,EAAQR,IACR,CAAE,KAAAwB,CAAS,EAAAhB,0jBCuBjB,MAAMA,EAAQR,IACR,CAAE,SAAAyB,EAAU,WAAA5C,CAAW,EAAIsC,GAAYX,CAAK,EAClDtM,EAAUsM,EAAM,sBAAsB,EACtC,MAAM1B,EAAe4C,GAAS,CAC5B,IAAK,IAAoB,CACjB,MAAA9F,EACJ6F,EAAS,MAAM,YAAY,OACnBtM,GAAA,OAAA,OAAAA,EAAG,OAAOR,EAAAkK,GAAA,YAAAA,EAAY,QAAZ,YAAAlK,EAAmB,OAChC,GACA,MAAA,CACLkK,GAAA,YAAAA,EAAY,MACZ,GAAGjD,EAAK,KAAK,CAACwE,EAAGC,IAAMA,EAAE,WAAaD,EAAE,UAAU,CAAA,CAEtD,EACA,IAAK,IAAM,CAAC,CAAA,CACb,i4BCYD,MAAMI,EAAQR,IACR,CAAE,WAAAjG,CAAA,EAAeoH,GAAYX,CAAK,EACxCtM,EAAUsM,EAAM,sBAAsB,EACtC,MAAME,EAAc7I,GAClB,IAAI,KAAK,eAAe,KAAM,CAC5B,KAAM,UACN,MAAO,MAAA,CACR,EAAE,OAAOA,CAAI,kpDCYhB,MAAM8J,EAAQ3B,IACR,CAAE,QAAA9B,CAAA,EAAYiD,GAAYQ,CAAK,EACrC,OAAAzN,EAAUyN,EAAM,mBAAmB,2+CC3ExBC,GAA+B,CAC1C,CACE,KAAM,GACN,UAAWhM,EACb,EACA,CACE,KAAM,oBACN,UAAWiM,EACb,EACA,CACE,KAAM,kBACN,UAAWC,EACb,EACA,CACE,KAAM,eACN,UAAWC,EACb,EACA,CACE,KAAM,gBACN,UAAWC,EACb,CACF,gMCLaC,GAAwB,CACnCtE,EAAc,gBACdC,EAAY,iBACS,CACrB,OAAQ,SAAY,MAAM9D,GAAO6D,EAAaC,CAAS,EACvD,QAAS,MAAOlH,GAAe,MAAMmD,GAAQnD,EAAIiH,EAAaC,CAAS,EACvE,OAAQ,MAAOsE,GAAmB,MAAMlI,GAAOkI,EAAMvE,EAAaC,CAAS,EAC3E,OAAQ,MAAOsE,GAAmB,MAAMjI,GAAOiI,EAAMvE,EAAaC,CAAS,EAC3E,OAAQ,MAAOuE,GACb,MAAMhI,GAAQgI,EAAOxE,EAAaC,CAAS,CAC/C,GAEM9D,GAAS,MACb6D,EACAC,IACgC,CAChC,MAAMjD,EAAWC,GAAMjB,EAAWX,IAAgB2E,EAAaC,CAAS,CAAC,EACrE,GAAA,CAEK,OADa,MAAM/C,GAAQF,CAAQ,GACvB,KAAK,IAAIJ,GAAOA,EAAI,MAAM,EAAE,IAAIG,EAAY,QACxDlB,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMK,GAAU,MACdnD,EACAiH,EACAC,IAC0C,CAC1C,MAAMtD,EAASC,EAAIvB,EAAA,EAAgB2E,EAAaC,EAAWlH,CAAE,EACzD,GAAA,CACI6D,MAAAA,EAAM,MAAME,EAAOH,CAAM,EACxB,OAAAI,GAAaH,EAAI,KAAA,CAAM,QACvBf,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,EAAM,OAAO,CAC5B,CACF,EAEMQ,GAAS,MACbkI,EACA9H,EACAC,IAC8B,CAC9B,MAAMS,EAAUnB,EAAWX,EAAa,EAAGoB,EAAaC,CAAS,EAC7D,GAAA,CACI,MAAAT,EAAWqB,GAAWiH,CAAI,EAC1B5H,EAASC,EAAIO,EAASlB,EAAS,EAAE,EACjC,aAAAsB,GAAOZ,EAAQV,CAAQ,EACtBc,GAAad,CAAQ,QACrBJ,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,EAEMS,GAAS,MACbiI,EACAvE,EACAC,IAC8B,CAC9B,MAAMtD,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWsE,EAAK,EAAE,EAC9D,GAAA,CACI3H,MAAAA,EAAMU,GAAWiH,CAAI,EACrB,aAAAzG,EAAUnB,EAAQC,CAAG,EACdG,GAAaH,CAAG,QAEtBf,EAAO,CACd,OAAO,MAAMA,CAAK,CACpB,CACF,EAEMW,GAAU,MACdgI,EACAxE,EACAC,IAC0B,CAC1B,UAAWsE,KAAQC,EAAO,CACxB,MAAM7H,EAASC,EAAIvB,IAAgB2E,EAAaC,EAAWsE,EAAK,EAAE,EAC9D,GAAA,CACF,MAAMvG,GAAUrB,CAAM,QACfd,EAAO,CACd,eAAQ,MAAMA,CAAK,EACZ,MAAMA,CAAK,CACpB,CACF,CAEF,EAEMyB,GAAciH,GAAmB,CACrC,KAAM,CAAE,GAAAxL,EAAI,YAAA0L,EAAa,GAAGxG,GAASsG,EAE9B,MAAA,CACL,GAFkBrG,GAASnF,CAAE,EAAIA,EAAKC,EAAG,EAGzC,YAAaqF,EAAU,SAASoG,CAAW,EAC3C,GAAGxG,CAAA,CAEP,EAEMlB,GAAgBwH,GAAwB,CAC5C,KAAM,CAAE,YAAAE,EAAa,GAAGxG,CAAA,EAASsG,EAC1B,MAAA,CACL,YAAaE,EAAY,OAAO,OAAS,KACzC,GAAGxG,CAAA,CAEP,ECpHMgE,GAA0B,CAC9B,UAAW,CAAC,EACZ,kBAAmB,CAAC,EACpB,UAAW,GACX,gBAAiB,OACjB,MAAO,OACP,KAAM,CAAC,EACP,aAAc,CAAC,CACjB,EAEMmB,GAAUkB,GAAsB,EAEzBI,GAAepC,GAAY,iBAAkB,CACxD,MAAO,IAAML,GACb,QAAS,CACP,gBAA0B+B,GAACjL,GACzBiL,EAAM,UAAU,KAAKxM,GAAMA,EAAG,KAAOuB,CAAE,CAC3C,EACA,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EACA,MAAM,OAAQ,CACR,GAAA,CACF,KAAK,UAAY,GACjB,KAAK,WAAc,MAAMqK,GAAQ,OAAyB,GAAA,KACxDuB,EAAA,EAEF,KAAK,kBAAoB,KAAK,UAC9B,KAAK,KAAO,CAAC,GAAG,IAAI,IAAI,KAAK,UAAU,QAAcnN,GAAAA,EAAG,IAAI,CAAC,CAAC,QACvDqE,EAAO,CACd,QAAQ,MAAMA,CAAK,CAAA,QACnB,CACA,KAAK,UAAY,EACnB,CACF,EACA,MAAM,KAAK9C,EAAY,CAChB,KAAA,gBAAkB,KAAK,gBAAgBA,CAAE,EAC9C,KAAK,QAAQ,KAAK,CAAE,KAAM,SAASA,CAAE,GAAI,CAC3C,EACA,MAAM,sBAAuB,CACvB,GAAA,CAAC,KAAK,gBAAiB,CACzB,MAAM6J,EAAU,KAAK,QAAQ,aAAa,MAAM,OAAO,GACvD,MAAM,KAAK,QACN,KAAA,gBAAkB,KAAK,gBAAgBA,CAAO,CACrD,CACF,EACA,UAAUgC,EAAa,CACjB,KAAK,aAAa,SAASA,CAAG,EAChC,KAAK,aAAe,KAAK,aAAa,OAAOpN,GAAMA,IAAOoN,CAAG,EAE7D,KAAK,aAAe,CAACA,EAAK,GAAG,KAAK,YAAY,EAE5C,KAAK,aAAa,OAAS,EACxB,KAAA,kBAAoB,KAAK,UAAU,OAChCpN,GAAAA,EAAG,KAAK,OAAOA,GAAM,KAAK,aAAa,SAASA,CAAE,CAAC,EAAE,OAAS,CAAA,EAGtE,KAAK,kBAAoB,KAAK,SAElC,EACA,MAAO,CACL,KAAK,QAAQ,MACf,CACF,CACF,CAAC,EAEKmN,GAAiB,CAAClC,EAAaC,IACnCA,EAAE,YAAY,UAAYD,EAAE,YAAY,QAAQ,g8CC/D1CoC,GAAW,4DADjB,MAAMhC,EAAQ6B,KAERI,EAASnK,GACboK,EAAa,MAAM,SAASpK,CAAI,EAAIkK,GAAW,GAC3C,CAAE,KAAAG,EAAM,aAAAD,CAAa,EAAIvB,GAAYX,CAAK,EAC1C,CAAE,UAAAoC,CAAc,EAAApC,6TCFtB,MAAMA,EAAQ6B,KACR,CAAE,kBAAAQ,CAAA,EAAsB1B,GAAYX,CAAK,EACzC,CAAE,KAAAsC,CAAS,EAAAtC,EACjB,OAAAtM,EAAUsM,EAAM,IAAI,oOCdpB,MAAMA,EAAQ6B,KACR,CAAE,KAAAb,CAAS,EAAAhB,8tBC2BjB,MAAMA,EAAQ6B,KACR,CAAE,gBAAAU,CAAA,EAAoB5B,GAAYX,CAAK,EAC7CtM,EAAUsM,EAAM,oBAAoB,EAEpC,MAAMwC,EAAiB,CACrB,QAAUC,GAAoB,CAC5BA,EAAG,iBAAiB,MAAM,EAAE,QAAQC,GAAK,gBAAgB,CAC3D,CAAA,iUCzCSC,GAA+B,CAC1C,CACE,KAAM,GACN,UAAWC,EACb,EACA,CACE,KAAM,MACN,UAAWC,EACb,CACF,ECTMtC,GAAU5B,GAAqB,EAExBmE,GAAerD,GAAY,uBAAwB,CAC9D,MAAO,UAAa,CAClB,WAAYzM,EAAI,MAAMuN,GAAQ,YAAY,CAAA,GAE5C,QAAS,CACP,MAAM,QAAS,CACb,MAAMA,GAAQ,UACd,KAAK,QAAQ,QAAQ,CAAE,KAAM,QAAU,CAAA,CACzC,EACA,KAAK5I,EAAW,CACd,KAAK,QAAQ,QAAQ,CAAE,KAAAA,CAAY,CAAA,CACrC,CACF,CACF,CAAC,ksDCsHC,MAAMqI,EAAQ8C,k0ECpHR,MAAAC,EAAa/P,EAAa,EAAK,8TCnBjCgQ,GAAU,IAEHC,EAAgB9K,IAA2C,CACtE,SAAU,UACV,QAAS,UACT,OAAQA,EACR,KAAM6K,EACR,GAEaE,EAAc/K,IAA2C,CACpE,SAAU,QACV,QAAS,QACT,OAAQA,EACR,KAAM6K,EACR,GCLM5D,GAAkC,CACtC,aAAc,IAAI9J,GAClB,UAAW,GACX,MAAO,MACT,EAEMiL,GAAUrD,GAA0B,EAE7BiG,GAAuB1D,GAClC,oCACA,CACE,MAAO,IAAyBL,GAChC,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EACA,MAAM,OAAQ,CACZ,KAAK,UAAY,GACjB,KAAK,MAAQ,OACT,GAAA,CACI,MAAAgE,EAAU,MAAM7C,GAAQ,MAC9B,KAAK,aAAe6C,QACbpK,EAAO,CACd,KAAK,MAAQA,EACb,QAAQ,MAAMA,CAAK,CACrB,CACA,KAAK,UAAY,EACnB,EACA,MAAM,QAAS,CACT,GAAA,CACF,MAAMoK,EAAS,MAAM7C,GAAQ,IAAI,KAAK,YAAY,EAClD,KAAK,aAAe6C,EACf,KAAA,OAAO,IAAIH,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,CAAK,CAAC,EACjC,QAAQ,MAAMA,CAAK,CACrB,CACF,CACF,CACF,CACF,wcCFE,MAAMgH,EAAQmD,KACR,CAAE,aAAA9N,CAAA,EAAiBsL,EAAYX,CAAK,+pBCpC1C,MAAMA,EAAQmD,KACR,CAAE,UAAAE,EAAW,MAAArK,CAAM,EAAI2H,EAAYX,CAAK,EAC9C,OAAAtM,EAAUsM,EAAM,IAAI,gSCPhBZ,GAAgC,CACpC,SAAU,CAAE,KAAM,EAAG,CACvB,EAEMmB,GAAUxC,GAAwB,EAE3BuF,GAAqB7D,GAChC,mCACA,CACE,MAAO,IAAML,GACb,QAAS,CACP,MAAM,MAAO,CACL,MAAAhG,EAAW,MAAMmH,GAAQ,MAC/B,KAAK,SAAWnH,CAClB,EAEA,MAAM,QAAS,CACT,GAAA,CACF,MAAMA,EAAW,MAAMmH,GAAQ,IAAI,KAAK,QAAQ,EAChD,KAAK,SAAWnH,EACX,KAAA,OAAO,IAAI6J,EAAc,CAAA,QACvBjK,EAAO,CACT,KAAA,OAAO,IAAIkK,EAAY,CAAA,EAC5B,QAAQ,MAAMlK,CAAK,CACrB,CACF,CACF,CACF,CACF,qMChBE,MAAMgH,EAAQsD,KACR,CAAE,SAAAlK,CAAA,EAAauH,EAAYX,CAAK,EAChC,CAAE,OAAAuD,CAAW,EAAAvD,EACnB,OAAAtM,EAAUsM,EAAM,IAAI,u1CClBhBO,GAAUrH,GAAwB,EAiBlCkG,GAAiC,CACrC,YAAa,CAAC,EACd,SAAU,CAAC,EACX,SAAU,CAAC,EAEX,KAAM,OACN,YAAa,CAAC,EACd,UAAW,GAEX,QAAS,OACT,aAAc,GAEd,MAAO,MACT,EAEaoE,GAAe/D,GAAY,kCAAmC,CACzE,MAAO,IAAwBL,GAC/B,QAAS,CACP,eAAgB+B,GAASA,EAAM,SAAS,SAAW,EACnD,kBAAmBA,GAASA,EAAM,SAAS,SAAW,EACtD,mBAAoBA,GAASA,EAAM,YAAY,SAAW,EAC1D,qBAAsBA,GAASA,EAAM,YAAY,SAAW,CAC9D,EACA,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EAEA,MAAM,OAAQ,CACN,MAAAiC,EAAS,MAAM7C,GAAQ,SAC7B,KAAK,YAAc,MAAM,QAAQ6C,CAAM,EAAKA,EAA0B,GACjE,KAAA,MAAQA,aAAkB,MAAQA,EAAS,MAClD,EAEA,MAAM,SAAU,CACd,KAAK,UAAY,GACZ,KAAA,KAAO,IAAInN,GAChB,KAAK,SAAW,GACX,KAAA,QAAQ,KAAK,CAAE,KAAM,sBAAsB,KAAK,KAAK,EAAE,EAAI,CAAA,CAClE,EAEA,MAAM,UAAW,CACf,KAAK,UAAY,GACZ,KAAA,KAAO,KAAK,SAAS,CAAC,EAC3B,KAAK,SAAW,GACX,KAAA,QAAQ,KAAK,CAAE,KAAM,sBAAsB,KAAK,KAAK,EAAE,EAAI,CAAA,CAClE,EAEA,MAAM,UAAW,CACf,GAAI,KAAK,WAAa,CAACqG,EAAQ,QAAA,KAAK,IAAI,EAAG,CACzC,MAAMf,EAAQ,MAAMgF,GAAQ,OAAO,KAAK,IAAI,EAC5C,KAAK,YAAc,CACjB,GAAG,KAAK,YAAY,UAAa5L,EAAG,KAAO4G,EAAK,EAAE,EAClDA,CAAA,CACF,SACS,CAAC,KAAK,WAAa,CAACe,EAAAA,QAAQ,KAAK,IAAI,EAAG,CACjD,MAAMf,EAAQ,MAAMgF,GAAQ,OAAO,KAAK,IAAI,EAC5C,KAAK,YAAc,CACjB,GAAG,KAAK,YAAY,UAAa5L,EAAG,KAAO4G,EAAK,EAAE,EAClDA,CAAA,CAEJ,CACA,KAAK,WAAW,CAClB,EAEA,MAAM,aAAc,CAClB,MAAM,KAAK,QACb,EAEA,MAAM,YAAa,CACjB,KAAK,QAAQ,OACb,KAAK,UAAY,GACjB,KAAK,KAAO,OACZ,KAAK,YAAc,EACrB,EAEA,MAAM,YAAa,CACjB,KAAK,aAAe,GACf,KAAA,QAAU,IAAI3E,GACnB,KAAK,YAAc,GACnB,KAAK,QAAQ,KAAK,CAChB,KAAM,sBAAsB,KAAK,KAAO,EAAE,QAAQ,KAAK,QAAQ,EAAE,EAAA,CAClE,CACH,EAEA,MAAM,aAAc,CAClB,KAAK,aAAe,GACf,KAAA,QAAU,KAAK,YAAY,CAAC,EACjC,KAAK,YAAc,GACnB,KAAK,QAAQ,KAAK,CAChB,KAAM,sBAAsB,KAAK,KAAO,EAAE,QAAQ,KAAK,QAAQ,EAAE,EAAA,CAClE,CACH,EAEA,MAAM,eAAgB,OACd,MAAA6M,IACJtP,EAAA,KAAK,OAAL,YAAAA,EAAW,eAAe,OAClBQ,GAAA,CAAC,KAAK,YAAY,SAASA,CAAE,KAChC,GACP,KAAK,KAAO,CAAE,GAAG,KAAK,KAAO,eAAgB8O,EAC/C,EAEA,MAAM,aAAc,CAClB,MAAMA,EAAwB,CAC5B,GAAG,KAAK,KAAM,eAAe,UAAa9O,EAAG,KAAO,KAAK,KAAM,EAAE,EACjE,KAAK,OAAA,EAEP,KAAK,KAAO,CAAE,GAAG,KAAK,KAAO,eAAgB8O,GAC7C,KAAK,cAAc,CACrB,EAEA,MAAM,eAAgB,CACpB,KAAK,QAAQ,OACb,KAAK,aAAe,GACpB,KAAK,QAAU,MACjB,EAEA,MAAM,OAAOlK,EAAwB,CAC/B,GAAA,CACA,MAAMgH,GAAQ,OAAOhH,CAAU,EACjC,MAAM,KAAK,QACX,KAAK,SAAW,GACX,KAAA,OAAO,IAAI0J,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,CAAK,CAAC,EACjC,QAAQ,MAAMA,CAAK,CACrB,CACF,EAEA,MAAM,OAAOO,EAAwB,CAC/B,GAAA,CACI,MAAAgH,GAAQ,OAAOhH,CAAU,EAC/B,MAAM,KAAK,QACX,KAAK,SAAW,GACX,KAAA,OAAO,IAAI0J,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,CAAK,CAAC,EACjC,QAAQ,MAAMA,CAAK,CACrB,CACF,EAEA,MAAM,QAAS,CACT,GAAA,CACI,MAAAuH,GAAQ,OAAO,KAAK,QAAQ,EAClC,MAAM,KAAK,QACX,KAAK,SAAW,GACX,KAAA,OAAO,IAAI0C,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,CAAK,CAAC,EACjC,QAAQ,MAAMA,CAAK,CACrB,CACF,CACF,CACF,CAAC,iRCtFC,MAAMgH,EAAQwD,KACR,CAAE,YAAAjO,EAAa,SAAAyM,EAAU,SAAA0B,EAAU,eAAAC,EAAgB,kBAAAC,CAAkB,EACzEjD,EAAYX,CAAK,EACb,CAAE,QAAA6D,EAAS,SAAAC,EAAU,YAAAC,CAAA,EAAgB/D,EAC3C,OAAAtM,EAAUsM,EAAM,IAAI,k/CC3EpB,MAAMA,EAAQwD,KACR,CAAE,SAAAQ,EAAU,WAAAC,CAAe,EAAAjE,k7BCsDjC,MAAMA,EAAQwD,KACR,CAAE,KAAMzC,CAAK,EAAIJ,EAAYX,CAAK,uyCCMxC,MAAMA,EAAQwD,KACR,CAAE,WAAAU,EAAY,YAAAC,EAAa,cAAAC,CAAA,EAAkBpE,EAC7C,CACJ,KAAMe,EACN,YAAAsD,EACA,mBAAAC,EACA,qBAAAC,CAAA,EACE5D,EAAYX,CAAK,29CCvErB,MAAMA,EAAQwD,KACR,CAAE,UAAAgB,CAAA,EAAc7D,EAAYX,CAAK,qLCCvC,MAAMA,EAAQwD,KACR,CAAE,YAAAiB,EAAa,cAAAC,CAAkB,EAAA1E,6+BC6DvC,MAAMA,EAAQwD,KACR,CAAE,QAASzC,EAAM,aAAA4D,CAAa,EAAIhE,EAAYX,CAAK,ivCC7E9C4E,GAAsC,CACjD,CACE,KAAM,GACN,UAAWC,EACb,EACA,CACE,KAAM,MACN,UAAWC,EACb,EACA,CACE,KAAM,iBACN,UAAWC,EACb,CACF,ECDM3F,GAA8B,CAClC,OAAQ,OACR,SAAU,CAAC,EACX,SAAU,CAAC,EAEX,KAAM,OACN,UAAW,GAEX,MAAO,MACT,EAEMmB,GAAU9C,GAAqB,EAExBuH,GAAkBvF,GAAY,gCAAiC,CAC1E,MAAO,IAAqBL,GAE5B,QAAS,CACP,eAAgB+B,GAASA,EAAM,SAAS,SAAW,EACnD,iBAAkBA,GAASA,EAAM,SAAS,SAAW,EACrD,eAAyBA,GAACjL,GACxBiL,EAAM,SAAS,KAAKzD,GAAWA,EAAQ,KAAOxH,CAAE,CACpD,EAEA,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EAEA,MAAM,OAAQ,CACR,GAAA,CACI,MAAAkN,EAAU,MAAM7C,GAAQ,SAC9B,KAAK,SAAW6C,EAChB,KAAK,MAAQ,OACb,KAAK,OAAS,SACPpK,EAAO,CACd,KAAK,MAAQA,CACf,CACF,EAEA,MAAM,SAAU,CACd,KAAK,UAAY,GACZ,KAAA,KAAO,IAAInC,GAChB,KAAK,SAAW,GAChB,KAAK,QAAQ,KAAK,CAAE,KAAM,qBAAuB,CAAA,CACnD,EAEA,MAAM,UAAW,CACf,KAAK,UAAY,GACZ,KAAA,KAAO,KAAK,SAAS,CAAC,EAC3B,KAAK,SAAW,GACX,KAAA,QAAQ,KAAK,CAAE,KAAM,mBAAmB,KAAK,KAAK,EAAE,EAAI,CAAA,CAC/D,EAEA,MAAM,aAAc,CAClB,MAAM,KAAK,SACX,KAAK,SAAW,EAClB,EAEA,aAAaoO,EAAkB,CAC7B,KAAK,KAAQ,CAAE,GAAG,KAAK,KAAO,YAAaA,EAAO,IAAUtQ,GAAA,IAAIe,EAAIf,CAAE,CAAC,CAAE,CAC3E,EAEA,MAAM,MAAO,CACP,KAAK,WAAa,CAAC2H,EAAQ,QAAA,KAAK,IAAI,EAChC,MAAA,KAAK,OAAO,KAAK,IAAI,EAClB,CAAC,KAAK,WAAa,CAACA,EAAAA,QAAQ,KAAK,IAAI,GACxC,MAAA,KAAK,OAAO,KAAK,IAAI,EAE7B,MAAM,KAAK,QACb,EAEA,MAAM,QAAS,CACb,KAAK,UAAY,GACjB,KAAK,KAAO,OACZ,KAAK,QAAQ,MACf,EAEA,MAAM,OAAOoB,EAAkB,CACzB,GAAA,CACI,MAAA6C,GAAQ,OAAO7C,CAAO,EACvB,KAAA,OAAO,IAAIuF,EAAc,CAAA,QACvBjK,EAAO,CACT,KAAA,OAAO,IAAIkK,EAAY,CAAA,EAC5B,QAAQ,MAAMlK,CAAK,CACrB,CACF,EAEA,MAAM,OAAO0E,EAAkB,CACzB,GAAA,CACI,MAAA6C,GAAQ,OAAO7C,CAAO,EACvB,KAAA,OAAO,IAAIuF,EAAc,CAAA,QACvBjK,EAAO,CACT,KAAA,OAAO,IAAIkK,EAAY,CAAA,EAC5B,QAAQ,MAAMlK,CAAK,CACrB,CACF,EAEA,MAAM,QAAS,CACT,GAAA,CACI,MAAAuH,GAAQ,OAAO,KAAK,QAAQ,EAC7B,KAAA,SAAW,KAAK,SAAS,OAAO5L,GAAM,CAAC,KAAK,SAAS,SAASA,CAAE,CAAC,EACtE,KAAK,SAAW,GACX,KAAA,OAAO,IAAIsO,EAAc,CAAA,QACvBjK,EAAO,CACT,KAAA,OAAO,IAAIkK,EAAY,CAAA,EAC5B,QAAQ,MAAMlK,CAAK,CACrB,CACF,CACF,CACF,CAAC,yQC7DC,MAAMgH,EAAQgF,KACR,CAAE,eAAArB,EAAgB,iBAAAuB,EAAkB,SAAA1P,EAAU,SAAAwM,GAClDrB,EAAYX,CAAK,EACb,CAAE,QAAA6D,EAAS,SAAAC,EAAU,YAAAC,CAAA,EAAgB/D,EAC3C,OAAAtM,EAAUsM,EAAM,IAAI,s/BCnDpB,MAAMA,EAAQgF,KACR,CAAE,KAAAG,EAAM,OAAAC,CAAW,EAAApF,6yCC+FzB,MAAMA,EAAQgF,KACR,CAAE,KAAAzJ,EAAM,UAAA8J,CAAU,EAAI1E,EAAYX,CAAK,EACvCiF,EAAS/D,GAAmB,CAChC,IAAK,IAAA,OAAM,QAAA/M,EAAA6L,EAAM,OAAN,YAAA7L,EAAY,YAAY,IAAUQ,GAAAA,EAAG,QAAS,CAAC,GAC1D,IAAM2Q,GAAoB,CACxBtF,EAAM,KAAO,CACX,GAAGA,EAAM,KACT,YAAasF,EAAM,OAAU,IAAI5P,EAAIf,CAAE,CAAC,CAAA,CAE5C,CAAA,CACD,izDCxHU4Q,GAAkC,CAC7C,CACE,KAAM,GACN,UAAWC,EACb,EACA,CACE,KAAM,MACN,UAAWC,EACb,CACF,ECFMrG,GAA2B,CAC/B,MAAO,CAAC,EACR,SAAU,CAAC,EACX,MAAO,MACT,EAEMmB,GAAUtC,GAAmB,EAEtByH,GAAgBjG,GAAY,6BAA8B,CACrE,MAAO,IAAkBL,GACzB,QAAS,CACP,gBAAiB+B,GAASA,EAAM,SAAS,SAAW,EACpD,iBAAkBA,GAASA,EAAM,SAAS,SAAW,EACrD,OAAQA,GAASA,EAAM,SAAS,CAAC,CACnC,EACA,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EACA,MAAM,OAAQ,CACR,GAAA,CACG,KAAA,MAAS,MAAMZ,GAAQ,OAAO,QAC5BvH,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,EACA,MAAM,SAAU,CACR,MAAAkF,EAAO,KAAK,SAAS,CAAC,EACvB,KAAA,QAAQ,KAAK,CAAE,KAAM,gBAAgBA,EAAK,EAAE,GAAI,CACvD,EACA,MAAM,QAAS,CACb,KAAK,QAAQ,OACb,KAAK,SAAW,EAClB,EACA,MAAM,YAAa,CACX,MAAA,KAAK,OAAO,KAAK,QAAQ,EAC/B,MAAM,KAAK,QACX,KAAK,SAAW,EAClB,EACA,MAAM,OAAOC,EAAe,CACtB,GAAA,CACI,MAAAoC,GAAQ,OAAOpC,CAAK,EAC1B,KAAK,MAAQ,CAAC,GAAG,KAAK,MAAM,OAAaxJ,GAAA,CAAC,KAAK,MAAM,SAASA,CAAE,CAAC,CAAC,EAC7D,KAAA,OAAO,IAAIsO,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,EAAM,OAAO,CAAC,EACzC,QAAQ,MAAMA,CAAK,CACrB,CACF,CACF,CACF,CAAC,0PCJC,MAAMgH,EAAQ0F,KACR,CAAE,MAAAvH,EAAO,SAAA6D,EAAU,gBAAA2D,EAAiB,iBAAAT,GACxCvE,EAAYX,CAAK,EACb,CAAE,QAAA4F,EAAS,WAAAC,CAAe,EAAA7F,EAChC,OAAAtM,EAAUsM,EAAM,IAAI,+0BC3CpB,MAAMA,EAAQ0F,KACR,CAAE,WAAAG,EAAY,OAAAT,CAAW,EAAApF,ueCY/B,MAAMA,EAAQ0F,KACR,CAAE,OAAAI,CAAA,EAAWnF,EAAYX,CAAK,4TC5BzB+F,GAAgC,CAC3C,CACE,KAAM,GACN,UAAWC,EACb,EACA,CACE,KAAM,MACN,UAAWC,EACb,CACF,ECGM7G,GAAkC,CACtC,aAAc,CAAC,EACf,SAAU,CAAC,EACX,KAAM,OACN,UAAW,GACX,MAAO,MACT,EAEMmB,GAAUnC,GAA0B,EAE7B8H,GAAuBzG,GAClC,oCACA,CACE,MAAO,IAAyBL,GAChC,QAAS,CACP,eAAgB+B,GAASA,EAAM,SAAS,SAAW,EACnD,iBAAkBA,GAASA,EAAM,SAAS,SAAW,CACvD,EACA,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EAEA,MAAM,OAAQ,CACR,GAAA,CACG,KAAA,aAAgB,MAAMZ,GAAQ,OAAO,QACnCvH,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,EACA,MAAM,SAAU,CACd,KAAK,UAAY,GACZ,KAAA,KAAO,IAAIpB,GAChB,KAAK,SAAW,GAChB,KAAK,QAAQ,KAAK,CAAE,KAAM,yBAA2B,CAAA,CACvD,EACA,MAAM,UAAW,CACf,KAAK,UAAY,GACZ,KAAA,KAAO,KAAK,SAAS,CAAC,EAC3B,KAAK,SAAW,GACX,KAAA,QAAQ,KAAK,CAAE,KAAM,uBAAuB,KAAK,KAAK,EAAE,EAAI,CAAA,CACnE,EACA,MAAM,YAAa,CACX,MAAA,KAAK,OAAO,KAAK,QAAQ,EAC/B,KAAK,SAAW,EAClB,EACA,MAAM,WAAWuO,EAAuB,CAChC,MAAA5F,GAAQ,YAAY4F,CAAO,EACjC,MAAM,KAAK,OACb,EACA,MAAM,MAAO,CACP,KAAK,WAAa,CAAC7J,EAAQ,QAAA,KAAK,IAAI,EAChC,MAAA,KAAK,OAAO,KAAK,IAAI,EACjBA,EAAAA,QAAQ,KAAK,IAAI,GACrB,MAAA,KAAK,OAAO,KAAK,IAAI,EAE7B,MAAM,KAAK,QACb,EACA,MAAM,QAAS,CACb,KAAK,UAAY,GACjB,KAAK,KAAO,OACZ,KAAK,QAAQ,MACf,EACA,MAAM,OAAO+B,EAAwB,CAC/B,GAAA,CACI,MAAAkC,GAAQ,OAAOlC,CAAU,EAC/B,KAAK,aAAe,CAAC,GAAG,KAAK,aAAcA,CAAU,EAChD,KAAA,OAAO,IAAI4E,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,EAAM,OAAO,CAAC,EACzC,QAAQ,MAAMA,CAAK,CACrB,CACF,EACA,MAAM,OAAOqF,EAAwB,CAC/B,GAAA,CACI,MAAAkC,GAAQ,OAAOlC,CAAU,EAC/B,KAAK,aAAe,CAClB,GAAG,KAAK,aAAa,UAAa1J,EAAG,KAAO0J,EAAW,EAAE,EACzDA,CAAA,EAEG,KAAA,OAAO,IAAI4E,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,EAAM,OAAO,CAAC,EACzC,QAAQ,MAAMA,CAAK,CACrB,CACF,EACA,MAAM,OAAOsF,EAA4B,CACnC,GAAA,CACI,MAAAiC,GAAQ,OAAOjC,CAAY,EACjC,KAAK,aAAe,CAClB,GAAG,KAAK,aAAa,UAAa,CAACA,EAAa,SAAS3J,CAAE,CAAC,CAAA,EAEzD,KAAA,OAAO,IAAIsO,EAAc,CAAA,QACvBjK,EAAO,CACd,KAAK,OAAO,IAAIkK,EAAWlK,EAAM,OAAO,CAAC,EACzC,QAAQ,MAAMA,CAAK,CACrB,CACF,CACF,CACF,CACF,oOC3CE,MAAMgH,EAAQkG,KACR,CAAE,aAAA5H,EAAc,SAAA0D,EAAU,eAAA2B,EAAgB,iBAAAuB,GAC9CvE,EAAYX,CAAK,EACb,CAAE,WAAAoG,EAAY,QAAAvC,EAAS,SAAAC,EAAU,WAAA+B,GAAe7F,EACtD,OAAAtM,EAAUsM,EAAM,IAAI,ujCC3DpB,MAAMA,EAAQkG,KACR,CAAE,KAAAf,EAAM,OAAAC,CAAW,EAAApF,0pBC2BzB,MAAMA,EAAQkG,KACR,CAAE,KAAA3K,EAAM,UAAA8J,CAAU,EAAI1E,EAAYX,CAAK,ynBC3ClCqG,GAAuC,CAClD,CACE,KAAM,GACN,UAAWC,EACb,EACA,CACE,KAAM,MACN,UAAWC,EACb,CACF,6BCTU,EADJpG,GAAAC,EAAW,MAAA,CAAA,MAAA,wCAAqD,EAAA,+EAC5DxM,GAAA,KAHR,SAAAC,GAAAC,EAAAC,EAAA,yJCCK,MAAM8O,EAAS,CACpB,YACkB3M,EAAaC,IACbP,EAAgB,GAChB4Q,EAAkB,GAClB1P,EAAkB,GAClB8K,EAAwB,IAAA,KACxBO,EAAiB,CAAA,EACjBsE,EAAyB,QACzBC,EAAoB,EACpC,CARgB,KAAA,GAAAxQ,EACA,KAAA,MAAAN,EACA,KAAA,QAAA4Q,EACA,KAAA,QAAA1P,EACA,KAAA,YAAA8K,EACA,KAAA,KAAAO,EACA,KAAA,OAAAsE,EACA,KAAA,UAAAC,CACf,CACL,CCEA,MAAMtH,GAA0B,CAC9B,UAAW,CAAC,EACZ,SAAU,CAAC,EACX,UAAW,GACX,MAAO,GACP,SAAU,MACZ,EAEMmB,GAAUkB,GAAsB,EAEzBI,GAAepC,GAAY,iBAAkB,CACxD,MAAO,IAAML,GACb,QAAS,CACP,eAAgB+B,GAASA,EAAM,SAAS,SAAW,EACnD,iBAAkBA,GAASA,EAAM,SAAS,OAAS,EACnD,gBAA0BA,GAACjL,GACzBiL,EAAM,UAAU,KAAKxM,GAAMA,EAAG,KAAOuB,CAAE,CAC3C,EACA,QAAS,CACP,MAAM,MAAO,CACX,MAAM,KAAK,OACb,EACA,MAAM,OAAQ,CACR,GAAA,CACF,KAAK,UAAY,GACZ,KAAA,UAAa,MAAMqK,GAAQ,OAAO,QAChCvH,EAAO,CACd,QAAQ,MAAMA,CAAK,CAAA,QACnB,CACA,KAAK,UAAY,EACnB,CACF,EACA,MAAM,aAAa9C,EAAY,CACxB,KAAA,SAAW,KAAK,gBAAgBA,CAAE,EACnC,KAAK,WAAa,OACpB,KAAK,MAAQ,IAEb,KAAK,MAAQ,GACR,KAAA,SAAW,IAAI2M,IAEtB,KAAK,QAAQ,KAAK,CAAE,KAAM,eAAe3M,CAAE,GAAI,CACjD,EACA,MAAM,sBAAuB,CACvB,GAAA,CAAC,KAAK,SAAU,CAClB,MAAM6J,EAAU,KAAK,QAAQ,aAAa,MAAM,OAAO,GACnDA,IAAY,OACd,MAAM,KAAK,QACN,KAAA,SAAW,KAAK,gBAAgBA,CAAO,EAC5C,KAAK,MAAQ,KAEb,KAAK,MAAQ,GACR,KAAA,SAAW,IAAI8C,GAExB,CACF,EACA,MAAM,SAAU,CACR,MAAA,KAAK,aAAa,KAAK,CAC/B,EACA,MAAM,UAAW,CACT,MAAA8D,EAAO,KAAK,SAAS,CAAC,EACtB,MAAA,KAAK,aAAaA,EAAK,EAAE,CACjC,EACA,MAAM,UAAW,CACX,GAAA,CACE,KAAK,OAAS,CAACrK,EAAQ,QAAA,KAAK,QAAQ,EAChC,MAAAiE,GAAQ,OAAO,KAAK,QAAQ,EACzB,CAAC,KAAK,OAAS,CAACjE,EAAAA,QAAQ,KAAK,QAAQ,GACxC,MAAAiE,GAAQ,OAAO,KAAK,QAAQ,EAEpC,MAAM,KAAK,mBACJvH,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACF,EACA,MAAM,YAAa,CACjB,KAAK,MAAQ,GACb,KAAK,SAAW,OAChB,KAAK,QAAQ,MACf,EACA,MAAM,aAAc,CAClB,MAAMzE,EAAQ,KAAK,SACJ,MAAMgM,GAAQ,OAAOhM,CAAK,YAClB,OAAO,MAAM,KAAK,OAC3C,CACF,CACF,CAAC,yPClCC,MAAMyL,EAAQ6B,KACR,CAAE,UAAA+E,EAAW,SAAA5E,EAAU,eAAA2B,EAAgB,iBAAAuB,GAC3CvE,GAAYX,CAAK,EACb,CAAE,KAAA6G,EAAM,QAAAhD,EAAS,SAAAC,EAAU,YAAAC,GAAgB/D,EACjD,OAAAtM,EAAUmT,CAAI,s8BCtEhB;AAAA;AAAA;AAAA,GAwEA,MAAMC,WAAeC,EAAc,CAuInC,CAvIMD,GACmB,eAAiB,CACtCE,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAJ,GACAK,GACAC,GACAC,GACAC,GACAC,GACAC,GAEAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,EACF,EA1DIvD,GA4DmB,cAAgB,CACrC,MAAO,CACL,QAAS,CACP,CACE,KAAM,mBACN,MAAO,YACP,MAAO,CACL,uBACA,wBACA,wBACF,EACA,YAAa,sBACf,EACA,CACE,KAAM,sBACN,MAAO,QACP,MAAO,CAAC,mBAAoB,iBAAiB,EAC7C,YAAa,kBACf,EACA,IACA,qBACA,WACF,CACF,EACA,QAAS,CACP,MAAO,CACL,IACA,OACA,SACA,eACA,eACA,IACA,UACA,SACA,IACA,aACA,mBACA,kBACA,oBACA,uBACA,wBACA,yBACA,cACA,cACA,aACA,OACA,OACA,sBACA,YACA,WACA,aACA,YACA,YACA,QACA,gBACA,YACA,YACA,OACA,YACA,gBACA,mBACA,SACF,CACF,EACA,SAAU,KACV,MAAO,CACL,eAAgB,CACd,cACA,WACA,kBACA,sBACA,iBACF,CACF,CACF,gpBChIA,OAAO,SAAP,OAAO,OAAW,QAalB,MAAM9G,EAAQ6B,KACRyI,EAAWC,GAAS,UACpBC,EAAS1D,GACT2D,EAAevJ,GAAkB,CACrC,KAAM,OACG,QAAA/M,EAAA6L,EAAM,WAAN,YAAA7L,EAAgB,UAAW,WACpC,EACA,IAAImR,EAAO,CACTtF,EAAM,SAAW,CACf,GAAGA,EAAM,SACT,OAAQsF,EAAQ,YAAc,OAAA,CAElC,CAAA,CACD,EACD,OAAA5R,EAAUsM,EAAM,oBAAoB,k9CCrGzB0K,GAAoC,CAC/C,CACE,KAAM,GACN,UAAW9H,EACb,EACA,CACE,KAAM,MACN,UAAW+H,EACb,CACF,ECGaC,GAAgC,CAC3C,CACE,KAAM,SACN,UAAWC,EACb,EACA,CACE,KAAM,sBACN,UAAWC,EACb,EACA,CACE,KAAM,qBACN,UAAWC,GACX,SAAUnG,EACZ,EACA,CACE,KAAM,mBACN,UAAWoG,EACb,EACA,CACE,KAAM,kBACN,UAAWC,GACX,SAAU1F,EACZ,EACA,CACE,KAAM,sBACN,UAAW2F,GACX,SAAU7E,EACZ,EACA,CACE,KAAM,eACN,UAAW8E,GACX,SAAUpF,EACZ,EACA,CACE,KAAM,cACN,UAAWqF,GACX,SAAUV,EACZ,CACF,EC5CMtL,GAA2B,CAC/B,SAAU,GACV,SAAU,GACV,WAAY,GACZ,UAAW,EACb,EAEMmB,GAAU5B,GAAqB,EAExB0M,GAAgB5L,GAAY,wBAAyB,CAChE,MAAO,IAAML,GACb,QAAS,CAAC,EACV,QAAS,CACP,MAAM,OAAQ,CACZ,KAAK,UAAY,GACb,GAAA,CACF,MAAMmB,GAAQ,OAAO,KAAK,SAAU,KAAK,SAAU,KAAK,UAAU,EAClE,KAAK,QAAQ,QAAQ,CAAE,KAAM,QAAU,CAAA,QAChCvH,EAAO,CACd,QAAQ,MAAMA,CAAK,CACrB,CACA,KAAK,UAAY,EACnB,CACF,CACF,CAAC,ikBC4BC,MAAMgH,EAAQqL,KACR,CAAE,SAAAC,EAAU,SAAAC,EAAU,WAAAzM,EAAY,UAAAuE,GAAc1C,GAAYX,CAAK,EACjE,CAAE,MAAAwL,CAAU,EAAAxL,+vBC1DdyL,GAA2B,CAC/B,CACE,KAAM,IACN,UAAWC,GACX,SAAUtK,EACZ,EACA,CACE,KAAM,QACN,UAAWuK,GACX,SAAUhJ,EACZ,EACA,CACE,KAAM,SACN,UAAWiJ,GACX,SAAUhB,EACZ,EACA,CACE,KAAM,SACN,UAAWiB,EACb,CACF,EAEaC,GAASC,GAAa,CACjC,QAASC,GAAiB,EAC1B,OAAAP,GACA,eAAeQ,EAAIlP,EAAGmP,EAAI,CACxB,GAAID,EAAG,KACE,MAAA,CACL,GAAIA,EAAG,KACP,SAAU,QAAA,EAEd,GAAWA,EAAG,WAAa,IAClB,MAAA,CAAE,IAAK,EAElB,CACF,CAAC,EAEKE,GAAcxN,GAAqB,EAEzCmN,GAAO,WAAW,MAAOG,EAAIlP,EAAGqP,IAAS,CACjC,MAAAC,EAAgB,MAAMF,GAAY,aACfF,EAAG,SAAS,SAAS,OAAO,GAC7B,CAACI,EAClBD,EAAA,CAAE,KAAM,QAAA,CAAU,EAElBA,GAET,CAAC,EC1BDE,GAAS,GAAG,OAAO,OAAO,CAAE,GAAGC,EAAA,CAAS,CAAC,EAGzCC,GAAUC,EAAG,EACV,UAAU,SAAUC,EAAS,EAC7B,UAAU,QAASC,EAAK,EACxB,IAAIha,EAAQ,EACZ,IAAIia,EAAY,EAChB,IACCC,KAAc,IAAI,CAAC,CAAE,MAAA7M,KAAY,CACzBA,EAAA,QAAU8M,GAAQhB,EAAM,EACxB9L,EAAA,OAAS8M,GAAQC,GAAU,CAAA,CAAA,CAClC,CACH,EACC,IAAIjB,EAAM,EACV,MAAM,MAAM,EAGfxT,GAAmB"}