{"version":3,"file":"index-38539a79.js","sources":["../../src/assets/themes/dark-mode-setup.ts","../../src/app.vue","../../../../packages/ui-components/src/assets/icons/photo-camera.vue","../../../../packages/ui-components/src/components/upload/image-upload.vue","../../../../packages/ui-components/src/components/upload/image-multi-upload.vue","../../../../packages/ui-components/src/components/upload/document-upload.vue","../../../../packages/home/web/src/ui/home/employment/employment-item.vue","../../../../packages/home/web/src/assets/icons/briefcase-icon.vue","../../../../packages/home/web/src/assets/icons/download-icon.vue","../../../../packages/home/domain/src/entities.ts","../../../../config/firebase/src/init-firebase.ts","../../../../packages/home/web-services/src/blob-to-file.ts","../../../../packages/home/web-services/src/firebase-db/employments.ts","../../../../packages/home/web-services/src/firebase-file-storage/image-file-storage.ts","../../../../packages/home/web-services/src/firebase-db/introduction.ts","../../../../packages/home/web-services/src/firebase-db/projects.ts","../../../../packages/home/web-services/src/firebase-db/cv-document.ts","../../../../packages/home/web-services/src/firebase-auth/auth.ts","../../../../packages/home/web/src/ui/home/home.store.ts","../../../../packages/home/web/src/ui/home/employment/employment-list.vue","../../../../packages/home/web/src/assets/icons/chain-icon.vue","../../../../packages/home/web/src/ui/home/projects/project-list.vue","../../../../packages/home/web/src/ui/home/page.vue","../../../../packages/home/web/src/ui/components/back-button.vue","../../../../packages/home/web/src/ui/employment/page.vue","../../../../packages/home/web/src/ui/project/page.vue","../../../../packages/home/web/src/routes/home.routes.ts","../../../../packages/admin/web/src/ui/dashboard/admin.store.ts","../../../../packages/admin/web/src/ui/dashboard/side-nav.vue","../../../../packages/home/web-admin/src/shared/toast-message.ts","../../../../packages/home/web-admin/src/ui/introduction/introduction.store.ts","../../../../packages/home/web-admin/src/ui/introduction/introduction.vue","../../../../packages/home/web-admin/src/ui/introduction/page.vue","../../../../packages/home/web-admin/src/ui/document-cv/upload-cv.store.ts","../../../../packages/home/web-admin/src/ui/document-cv/page.vue","../../../../packages/home/web-admin/src/ui/employments/list/list.store.ts","../../../../packages/home/web-admin/src/ui/employments/list/list.page.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item-buttons.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item-table.vue","../../../../packages/home/web-admin/src/ui/employments/item/list-item.page.vue","../../../../packages/home/web-admin/src/ui/employments/item-sub/list-item-sub-buttons.vue","../../../../packages/home/web-admin/src/ui/employments/item-sub/list-item-sub.page.vue","../../../../packages/home/web-admin/src/routes/employment-routes.ts","../../../../packages/home/web-admin/src/ui/projects/projects.store.ts","../../../../packages/home/web-admin/src/ui/projects/projects-table.vue","../../../../packages/home/web-admin/src/ui/projects/action-buttons.vue","../../../../packages/home/web-admin/src/ui/projects/project-edit.vue","../../../../packages/home/web-admin/src/routes/project-routes.ts","../../../../packages/admin/web/src/ui/dashboard/welcome.vue","../../../../packages/admin/web/src/routes/admin-routes.ts","../../../../packages/admin/web/src/ui/login/login.store.ts","../../../../packages/admin/web/src/ui/login/page.vue","../../src/router/router.ts","../../src/index.ts"],"sourcesContent":["import { usePrimeVue } from \"primevue/config\"\n\nconst lightTheme = \"bootstrap4-light-blue\"\nconst darkTheme = \"bootstrap4-dark-blue\"\n\nexport const darkModeSetup = () => {\n  const PrimeVue = usePrimeVue()\n  const isDarkMode = window.matchMedia(\"(prefers-color-scheme: dark)\").matches\n  PrimeVue?.changeTheme(\n    isDarkMode ? lightTheme : darkTheme,\n    isDarkMode ? darkTheme : lightTheme,\n    \"theme-link\",\n    () => {}\n  )\n  window\n    .matchMedia(\"(prefers-color-scheme: dark)\")\n    .addEventListener(\"change\", event => {\n      const isDarkMode = event.matches\n      PrimeVue?.changeTheme(\n        isDarkMode ? lightTheme : darkTheme,\n        isDarkMode ? darkTheme : lightTheme,\n        \"theme-link\",\n        () => {}\n      )\n    })\n}\n","<template>\n  <div\n    class=\"container mx-auto bg-zinc-50 dark:bg-zinc-900 2xl:max-w-[60%] xl:max-w-[65%]\">\n    <toast />\n    <router-view />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { onMounted } from \"vue\"\n  import { darkModeSetup } from \"./assets/themes/dark-mode-setup\"\n  onMounted(darkModeSetup)\n</script>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    height=\"48\"\n    viewBox=\"0 -960 960 960\"\n    width=\"48\">\n    <path\n      d=\"M479.5-266q72.5 0 121.5-49t49-121.5q0-72.5-49-121T479.5-606q-72.5 0-121 48.5t-48.5 121q0 72.5 48.5 121.5t121 49Zm0-60q-47.5 0-78.5-31.5t-31-79q0-47.5 31-78.5t78.5-31q47.5 0 79 31t31.5 78.5q0 47.5-31.5 79t-79 31.5ZM140-120q-24 0-42-18t-18-42v-513q0-23 18-41.5t42-18.5h147l73-87h240l73 87h147q23 0 41.5 18.5T880-693v513q0 24-18.5 42T820-120H140Zm680-60v-513H645l-73-87H388l-73 87H140v513h680ZM480-436Z\" />\n  </svg>\n</template>\n","<template>\n  <div\n    class=\"relative flex aspect-square border border-zinc-200 dark:border-zinc-400 rounded-xl min-w-20 min-h-20\">\n    <img\n      class=\"z-0 object-cover rounded-lg\"\n      ref=\"imagePreview\"\n      :src=\"props.modelValue\" />\n    <div\n      class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n      <photo-camera-icon\n        class=\"dark:fill-zinc-400\"\n        @click=\"chooseImage\" />\n    </div>\n    <input\n      ref=\"imagePicker\"\n      type=\"file\"\n      accept=\"image/png,image/jpeg\"\n      style=\"display: none\"\n      @change=\"choosenImage\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ref } from \"vue\"\n  import photoCameraIcon from \"@/assets/icons/photo-camera.vue\"\n\n  const imagePicker = ref<HTMLInputElement>()\n  const imagePreview = ref<HTMLImageElement>()\n\n  const props = defineProps<{ modelValue: string }>()\n  const emits = defineEmits<{\n    (e: \"update:modelValue\", modelValue: string): void\n  }>()\n\n  const chooseImage = () => imagePicker.value?.click()\n  const choosenImage = (event: any) => {\n    const selectedImageFile = event.srcElement.files[0]\n    imagePreview.value!.src = URL.createObjectURL(selectedImageFile)\n    emits(\"update:modelValue\", URL.createObjectURL(selectedImageFile))\n  }\n</script>\n","<template>\n  <div class=\"flex flex-wrap items-center justify-start gap-4\">\n    <div\n      v-for=\"item in items\"\n      :key=\"item\"\n      class=\"relative w-32 h-32 aspect-square rounded-2xl\">\n      <div class=\"absolute top-0 right-0 z-10 -m-2\">\n        <div\n          class=\"rounded-full w-8 h-8 bg-red-600 flex justify-center items-center\"\n          @click=\"deleteImage(item)\">\n          <div class=\"pi pi-times w-4 h-4 text-white\"></div>\n        </div>\n      </div>\n      <div class=\"absolute v-full h-full\">\n        <img\n          class=\"v-full h-full rounded\"\n          :src=\"item\" />\n      </div>\n    </div>\n    <div\n      class=\"relative flex aspect-square border border-zinc-200 dark:border-zinc-400 rounded-xl w-32 h-32\">\n      <img\n        class=\"z-0 object-cover rounded-lg\"\n        ref=\"imagePreview\" />\n      <div\n        class=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n        <photo-camera-icon\n          class=\"dark:fill-zinc-400\"\n          @click=\"chooseImage\" />\n      </div>\n      <input\n        ref=\"imagePicker\"\n        type=\"file\"\n        accept=\"image/png,image/jpeg\"\n        style=\"display: none\"\n        @change=\"chosenImage\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import photoCameraIcon from \"@/assets/icons/photo-camera.vue\"\n  import { ref } from \"vue\"\n\n  const props = defineProps<{ modelValue: string[] }>()\n  const emits = defineEmits<{\n    (e: \"update:modelValue\", modelValue: string[]): void\n  }>()\n\n  const items = ref<string[]>(props.modelValue ?? [])\n\n  const imagePicker = ref<HTMLInputElement>()\n  const chooseImage = () => imagePicker.value?.click()\n  const chosenImage = async (event: any) => {\n    const image = URL.createObjectURL(event.srcElement.files[0])\n    items.value = [...items.value, image]\n    emits(\"update:modelValue\", items.value)\n  }\n\n  const deleteImage = (image: string) => {\n    items.value = items.value.filter(it => it !== image)\n    if (image.startsWith(\"blob:\")) URL.revokeObjectURL(image)\n    emits(\"update:modelValue\", items.value)\n  }\n</script>\n","<template>\n  <div\n    class=\"flex flex-wrap items-center justify-start gap-4 border border-zinc-200 dark:border-zinc-400 p-2 rounded-xl\">\n    <a\n      v-if=\"isHttp(props.modelValue)\"\n      :href=\"props.modelValue\"\n      >CV Document\n    </a>\n    <a\n      v-else-if=\"isBlob(props.modelValue)\"\n      :href=\"props.modelValue\">\n      Loaded, hit upload button\n    </a>\n    <div v-else>No document</div>\n    <Button\n      label=\"Browse PDF\"\n      severity=\"info\"\n      @click=\"chooseFile\" />\n    <input\n      ref=\"filePicker\"\n      type=\"file\"\n      accept=\"application/pdf\"\n      style=\"display: none\"\n      @change=\"chosenFile\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { ref } from \"vue\"\n\n  const props = defineProps<{ modelValue: string }>()\n  const emits = defineEmits<{\n    (e: \"update:modelValue\", modelValue: string): void\n  }>()\n\n  const filePicker = ref<HTMLInputElement>()\n  const filePicked = ref<File>()\n\n  const chooseFile = () => filePicker.value?.click()\n  const chosenFile = (event: any) => {\n    const selectedDocumentFile = event.srcElement.files[0] as File\n    filePicked.value = event.srcElement.files[0] as File\n    emits(\"update:modelValue\", URL.createObjectURL(selectedDocumentFile))\n  }\n\n  const isHttp = (url: string) => url.startsWith(\"http\")\n  const isBlob = (url: string) => url.startsWith(\"blob\")\n</script>\n","<template>\n  <div\n    class=\"relative flex h-10 w-10 flex-none items-center justify-center rounded-full shadow-md shadow-zinc-800/5 ring-1 ring-zinc-900/5 dark:border dark:border-zinc-700/50 dark:bg-zinc-800 dark:ring-0\">\n    <img\n      alt=\"\"\n      loading=\"lazy\"\n      decoding=\"async\"\n      data-nimg=\"1\"\n      class=\"h-9 w-9 rounded-full\"\n      style=\"color: transparent\"\n      :src=\"data.employerIcon.path\"\n      width=\"32\"\n      height=\"32\" />\n  </div>\n  <dl class=\"flex flex-auto flex-wrap gap-x-2\">\n    <dt class=\"sr-only\">Company</dt>\n    <dd\n      class=\"w-full flex-none text-sm font-medium text-zinc-900 dark:text-zinc-100\">\n      {{ props.data.employer }}\n    </dd>\n    <dt class=\"sr-only\">Role</dt>\n    <dd class=\"text-xs text-zinc-500 dark:text-zinc-400\">\n      {{ props.data.role }}\n    </dd>\n    <dt class=\"sr-only\">Date</dt>\n    <dd\n      class=\"ml-auto text-xs text-zinc-400 dark:text-zinc-500\"\n      aria-label=\"2019 until Present\">\n      <time datetime=\"2019\">{{ dateFormat(props.data.fromDate) }}</time>\n      <span aria-hidden=\"true\"> — </span>\n      <time datetime=\"2023\">{{ dateFormat(props.data.tillDate) }}</time>\n    </dd>\n  </dl>\n</template>\n\n<script setup lang=\"ts\">\n  import { Employment } from \"@home/domain\"\n  const props = defineProps<{ data: Employment }>()\n\n  const dateFormat = (date: Date) =>\n    new Intl.DateTimeFormat(\"en\", {\n      year: \"numeric\",\n      month: \"long\",\n    }).format(date)\n</script>\n","<template>\n  <svg\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke-width=\"1.5\"\n    stroke-linecap=\"round\"\n    stroke-linejoin=\"round\"\n    aria-hidden=\"true\"\n    class=\"h-6 w-6 flex-none\">\n    <path\n      d=\"M2.75 9.75a3 3 0 0 1 3-3h12.5a3 3 0 0 1 3 3v8.5a3 3 0 0 1-3 3H5.75a3 3 0 0 1-3-3v-8.5Z\"\n      class=\"fill-zinc-100 stroke-zinc-400 dark:fill-zinc-100/10 dark:stroke-zinc-500\"></path>\n    <path\n      d=\"M3 14.25h6.249c.484 0 .952-.002 1.316.319l.777.682a.996.996 0 0 0 1.316 0l.777-.682c.364-.32.832-.319 1.316-.319H21M8.75 6.5V4.75a2 2 0 0 1 2-2h2.5a2 2 0 0 1 2 2V6.5\"\n      class=\"stroke-zinc-400 dark:stroke-zinc-500\"></path>\n  </svg>\n</template>\n","<template>\n  <svg\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    aria-hidden=\"true\"\n    class=\"h-4 w-4 stroke-zinc-400 transition group-active:stroke-zinc-600 dark:group-hover:stroke-zinc-50 dark:group-active:stroke-zinc-50\">\n    <path\n      d=\"M4.75 8.75 8 12.25m0 0 3.25-3.5M8 12.25v-8.5\"\n      stroke-width=\"1.5\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"></path>\n  </svg>\n</template>\n","import { v4 } from \"uuid\"\n\nexport class HomePage {\n  constructor(\n    public readonly introduction: Introduction = new Introduction(),\n    public readonly employments: Employment[] = [],\n    public readonly projects: Project[] = [],\n    public readonly cvDocument: Url = new Url()\n  ) {}\n}\n\nexport class Introduction {\n  constructor(\n    public readonly title: string = \"\",\n    public readonly description: string = \"\",\n    public readonly photo: Url = new Url(),\n    public readonly contacts: Contacts = new Contacts()\n  ) {}\n}\n\nexport class Employment {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly employer: string = \"\",\n    public readonly employerIcon: Url = new Url(),\n    public readonly role: string = \"\",\n    public readonly description: string = \"\",\n    public readonly location: string = \"\",\n    public readonly subEmployments: SubEmployment[] = [],\n    public readonly fromDate: Date = new Date(),\n    public readonly tillDate: Date = new Date()\n  ) {}\n}\n\nexport class SubEmployment {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly employer: string = \"\",\n    public readonly employerIcon: Url = new Url(),\n    public readonly role: string = \"\",\n    public readonly description: string = \"\",\n    public readonly location: string = \"\",\n    public readonly fromDate: Date = new Date(),\n    public readonly tillDate: Date = new Date()\n  ) {}\n}\n\nexport class Project {\n  constructor(\n    public readonly id: string = v4(),\n    public readonly title: string = \"\",\n    public readonly summary: string = \"\",\n    public readonly description: string = \"\",\n    public readonly owner: string = \"\",\n    public readonly contributions: string = \"\",\n    public readonly storeURL: Url = new Url(),\n    public readonly sourceURL: Url = new Url(),\n    public readonly logo: Url = new Url(),\n    public readonly screenshots: Url[] = [],\n    public readonly date: Date = new Date()\n  ) {}\n}\n\nexport class Contacts {\n  constructor(\n    public readonly email: string = \"\",\n    public readonly telephone: string = \"\",\n    public readonly skype: string = \"\",\n    public readonly github: string = \"\",\n    public readonly linkedin: string = \"\"\n  ) {}\n}\n\nexport class Url {\n  constructor(public readonly path: string = \"\") {}\n}\n","import { FirebaseApp, deleteApp, initializeApp } from \"firebase/app\"\nimport { getFirestore } from \"firebase/firestore\"\nimport { getStorage } from \"firebase/storage\"\nimport { getAuth } from \"firebase/auth\"\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCSWwExeOhtuxeFsvZhsXiZlEQxmOdON5M\",\n  authDomain: \"my-world-0690.firebaseapp.com\",\n  databaseURL:\n    \"https://my-world-0690-default-rtdb.europe-west1.firebasedatabase.app\",\n  projectId: \"my-world-0690\",\n  storageBucket: \"my-world-0690.appspot.com\",\n  messagingSenderId: \"367700046064\",\n  appId: \"1:367700046064:web:3c3a0d649d1e08e016d235\",\n}\n\nlet app: FirebaseApp\n\nexport const initializeFirebase = () => (app = initializeApp(firebaseConfig))\nexport const deIntitializeFirebase = () => deleteApp(app)\n\nexport const firestoreApp = () => getFirestore(app)\nexport const storageApp = () => getStorage(app)\nexport const authApp = () => getAuth(app)\n","export const blobUrlToFile = async (\n  blobUrl: string\n): Promise<File | undefined> => {\n  try {\n    const response = await fetch(blobUrl)\n    const blob = await response.blob()\n\n    // Extract the filename from the blob URL\n    const urlParts = blobUrl.split(\"/\")\n    const filename = urlParts[urlParts.length - 1]\n\n    // Determine the file type based on the blob's content\n    const contentType = blob.type || \"application/octet-stream\"\n\n    // Create a new File object with the blob data, filename, and content type\n    const file = new File([blob], filename, { type: contentType })\n\n    return file\n  } catch (error) {\n    console.error(\"Error extracting file:\", error)\n    return undefined\n  }\n}\n\nexport const blobUrlToBuffer = async (\n  blobUrl: string\n): Promise<ArrayBuffer | undefined> => {\n  try {\n    const response = await fetch(blobUrl)\n    return await response.arrayBuffer()\n  } catch (error) {\n    console.error(\"Error extracting file:\", error)\n    return undefined\n  }\n}\n\nexport const isBlobUrl = (url: string) => url.match(\"blob:*\")\n","import { Employment, SubEmployment } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport {\n  collection,\n  setDoc,\n  updateDoc,\n  query,\n  getDocs,\n  getDoc,\n  doc,\n  deleteDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { v4, validate } from \"uuid\"\nimport { isBlobUrl, blobUrlToBuffer } from \"@/blob-to-file\"\nimport { deleteStored, uploadImage } from \"..\"\nimport { isEmpty } from \"lodash\"\n\nexport interface EmploymentStorage {\n  getById: (id: string) => Promise<Employment|Error>\n  getAll: () => Promise<Employment[] | Error>\n  create: (employment: Employment) => Promise<Employment | Error>\n  update: (employment: Employment) => Promise<Employment | Error>\n  delete: (employment: Employment[]) => Promise<void | Error>\n}\n\nexport const createEmploymentStorage = (\n  collection: string = \"/home/content\",\n  document: string = \"/employments\"\n): EmploymentStorage => ({\n  getById: async (id: string) => await getById(id, collection, document),\n  getAll: async () => await getAll(collection, document),\n  create: async (employment: Employment) =>\n    await create(employment, collection, document),\n  update: async (employment: Employment) =>\n    await update(employment, collection, document),\n  delete: async (emlpoyment: Employment[]) =>\n    await deletes(emlpoyment, collection, document),\n})\n\nconst getById = async (\n  id: string,\n  collection_: string,\n  document_: string\n): Promise<Employment | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, id)\n  try {\n    const docSnapshot = await getDoc(docRef)\n    return fromFirebase(docSnapshot.data())\n  } catch (error) {\n    return Error(error.message)\n  }\n}\n\nconst getAll = async (\n  collection_: string,\n  document_: string\n): Promise<Employment[] | Error> => {\n  const queryRef = query(collection(firestoreApp(), collection_, document_))\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    return Error(error.message)\n  }\n}\n\nconst create = async (\n  employment: Employment,\n  collection_: string,\n  document_: string\n): Promise<Employment | Error> => {\n  const collRef = collection(firestoreApp(), collection_, document_)\n  try {\n    const newEmployemnt = await uploadImages(employment, collection_, document_)\n    const document = toFirebase(newEmployemnt)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst update = async (\n  employment: Employment,\n  collection_: string,\n  document_: string\n): Promise<Employment | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, employment.id)\n  try {\n    const dbEmployment = fromFirebase((await getDoc(docRef)).data())\n    const dbIcons = [\n      dbEmployment.employerIcon.path,\n      ...dbEmployment.subEmployments.map(it => it.employerIcon.path),\n    ]\n\n    const icons = [\n      employment.employerIcon.path,\n      ...employment.subEmployments.map(it => it.employerIcon.path),\n    ]\n    const deleteIcons = dbIcons\n      .filter(it => !icons.includes(it))\n      .filter(it => !isBlobUrl(it))\n\n    await Promise.all(deleteIcons.map(async it => await deleteStored(it)))\n\n    const updatedEmployement = await uploadImages(\n      employment,\n      collection_,\n      document_\n    )\n\n    const doc = toFirebase(updatedEmployement)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst deletes = async (\n  employments: Employment[],\n  collection_: string,\n  document_: string\n) => {\n  for (const employment of employments) {\n    const docRef = doc(firestoreApp(), collection_, document_, employment.id)\n    try {\n      const employment_ = fromFirebase((await getDoc(docRef)).data())\n      try {\n        await Promise.all(\n          [\n            employment_.employerIcon.path,\n            ...employment_.subEmployments.map(it => it.employerIcon.path),\n          ].map(async it => await deleteStored(it))\n        )\n      } catch (error) {\n        console.error(error)\n      }\n      await deleteDoc(docRef)\n    } catch (error) {\n      return Error(error)\n    }\n  }\n}\n\nconst toFirebase = (employment: Employment) => {\n  const { id, fromDate, tillDate, subEmployments, ...rest } = employment\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    subEmployments: Object.fromEntries(\n      new Map(subEmployments.map(toFirebaseSub).map(item => [item.id, item]))\n    ),\n    fromDate: Timestamp.fromDate(fromDate),\n    tillDate: Timestamp.fromDate(tillDate),\n    ...rest,\n  }\n}\n\nconst toFirebaseSub = (subEmployment: SubEmployment) => {\n  const { id, fromDate, tillDate, ...rest } = subEmployment\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    fromDate: Timestamp.fromDate(fromDate),\n    tillDate: Timestamp.fromDate(tillDate),\n    ...rest,\n  }\n}\n\nconst fromFirebase = (employment: any): Employment => {\n  const { fromDate, tillDate, subEmployments, ...rest } = employment\n  return {\n    ...rest,\n    subEmployments: Object.values(subEmployments).map(fromFirebaseSub),\n    fromDate: fromDate.toDate(),\n    tillDate: tillDate.toDate(),\n  }\n}\n\nconst fromFirebaseSub = (subEmployment: any): SubEmployment => {\n  const { fromDate, tillDate, ...rest } = subEmployment\n  return {\n    ...rest,\n    fromDate: fromDate.toDate(),\n    tillDate: tillDate.toDate(),\n  }\n}\n\nconst uploadImages = async (\n  employment: Employment,\n  collection_: string,\n  document_: string\n): Promise<Employment> => {\n  const blobs = extractBlobs(employment)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".jpg\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(employment, blobs)\n}\n\nconst extractBlobs = (employment: Employment): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  if (\n    isBlobUrl(employment.employerIcon.path) &&\n    employment.employerIcon.path !== \"\"\n  )\n    blobMap.set(employment.employerIcon.path, \"\")\n  employment.subEmployments\n    .map(it => it.employerIcon.path)\n    .filter(it => isBlobUrl(it))\n    .forEach(it => blobMap.set(it, \"\"))\n  return blobMap\n}\n\nconst replaceBlobs = (\n  employment: Employment,\n  blobs: Map<string, string>\n): Employment => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...employment,\n    employerIcon: { path: get(employment.employerIcon.path) },\n    subEmployments: employment.subEmployments.map(sub => ({\n      ...sub,\n      employerIcon: { path: get(sub.employerIcon.path) },\n    })),\n  }\n}\n","import { storageApp } from \"@config/firebase\"\nimport {\n  deleteObject,\n  getDownloadURL,\n  ref,\n  uploadBytesResumable,\n  UploadTask,\n} from \"firebase/storage\"\n\nexport const uploadImage = async (\n  remotePath: string,\n  file: File | ArrayBuffer\n): Promise<string | Error> =>\n  new Promise((resolve, reject) => {\n    const storageRef = ref(storageApp(), remotePath)\n    try {\n      const uploadTask: UploadTask = uploadBytesResumable(storageRef, file, {\n        contentType: \"image/*\",\n      })\n      uploadTask.on(\n        \"state_changed\",\n        _ => {},\n        error => {\n          reject(error)\n        },\n        () =>\n          getDownloadURL(uploadTask.snapshot.ref).then(resolve).catch(reject)\n      )\n    } catch (error) {\n      return Error(error)\n    }\n  })\n\nexport const deleteImage = async (\n  remotePath: string\n): Promise<string | Error> => {\n  const storageRef = ref(storageApp(), remotePath)\n  try {\n    await deleteObject(storageRef)\n    return remotePath\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nexport const deleteStored = async (url: string): Promise<void> =>\n  await deleteObject(ref(storageApp(), url))\n","import { Introduction } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\"\nimport { isEmpty } from \"lodash\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport { uploadImage } from \"@/firebase-file-storage/image-file-storage\"\nimport { v4 } from \"uuid\"\n\nexport interface IntroductionStorage {\n  get: () => Promise<Introduction>\n  set: (i: Introduction) => Promise<Introduction>\n}\n\nexport const createIntroductionStorage = (\n  _collection: string = \"/home/content\",\n  _document: string = \"/introduction/value\"\n): IntroductionStorage => ({\n  get: async () => await get(_collection, _document),\n  set: async i => await set(i, _collection, _document),\n})\n\nconst get = async (\n  _collection: string,\n  _document: string\n): Promise<Introduction> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const snapshot = await getDoc(docRef)\n  return snapshot.exists()\n    ? (snapshot.data() as Introduction)\n    : new Introduction()\n}\n\nconst set = async (\n  introduction: Introduction,\n  _collection: string,\n  _document: string\n): Promise<Introduction> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const oldIntroduction = (await getDoc(docRef)).data() as Introduction\n  if (oldIntroduction === undefined) {\n    await setDoc(docRef, { ...introduction })\n  } else {\n    const updatedIntroduction = await uploadImages(\n      introduction,\n      _collection,\n      _document\n    )\n    await updateDoc(docRef, { ...updatedIntroduction })\n  }\n  return introduction\n}\n\nconst uploadImages = async (\n  introduction: Introduction,\n  collection_: string,\n  document_: string\n): Promise<Introduction> => {\n  const blobs = extractBlobs(introduction)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".jpg\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(introduction, blobs)\n}\n\nconst extractBlobs = (introduction: Introduction): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  if (isBlobUrl(introduction.photo.path))\n    blobMap.set(introduction.photo.path, \"\")\n  return blobMap\n}\n\nconst replaceBlobs = (\n  introduction: Introduction,\n  blobs: Map<string, string>\n): Introduction => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...introduction,\n    photo: { path: get(introduction.photo.path) },\n  }\n}\n","import { Project, Url } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport {\n  collection,\n  updateDoc,\n  query,\n  getDocs,\n  doc,\n  deleteDoc,\n  setDoc,\n  getDoc,\n  Timestamp,\n} from \"firebase/firestore\"\nimport { v4, validate } from \"uuid\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport {\n  deleteStored,\n  uploadImage,\n} from \"@/firebase-file-storage/image-file-storage\"\nimport { isEmpty } from \"lodash\"\n\nexport interface ProjectStorage {\n  create: (project: Project) => Promise<Project | Error>\n  get: (project: Project) => Promise<Project | Error>\n  getById: (id: string) => Promise<Project| Error>\n  getAll: () => Promise<Project[] | Error>\n  update: (project: Project) => Promise<Project | Error>\n  delete: (project: Project[]) => Promise<void | Error>\n}\n\nexport const createProjectStorage = (\n  _collection = \"/home/content\",\n  _document = \"/projects\"\n): ProjectStorage => ({\n  create: async (project: Project) =>\n    await create(project, _collection, _document),\n  get: async (project: Project) => await get(project, _collection, _document),\n  getById: async (id: string) => await getById(id, _collection, _document),\n  getAll: async () => await getAll(_collection, _document),\n  update: async (project: Project) =>\n    await update(project, _collection, _document),\n  delete: async (project: Project[]) =>\n    await deletes(project, _collection, _document),\n})\n\nconst create = async (\n  project: Project,\n  collection_: string,\n  document_: string\n): Promise<Project | Error> => {\n  const collRef = collection(firestoreApp(), collection_, document_)\n  try {\n    const newProject = await uploadImages(project, collection_, document_)\n    const document = toFirebase(newProject)\n    const docRef = doc(collRef, document.id)\n    await setDoc(docRef, document)\n    return fromFirebase(document)\n  } catch (error) {\n    console.error(error)\n    return Error(error)\n  }\n}\n\nconst get = async (\n  project: Project,\n  collection_: string,\n  document_: string\n): Promise<Project | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, project.id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst getById = async (\n  id: string,\n  collection_: string,\n  document_: string\n): Promise<Project| Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, id)\n  try {\n    const doc = await getDoc(docRef)\n    return fromFirebase(doc.data())\n  } catch(error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst getAll = async (\n  collection_: string,\n  document_: string\n): Promise<Project[] | Error> => {\n  const queryRef = query(collection(firestoreApp(), collection_, document_))\n  try {\n    const docSnapshot = await getDocs(queryRef)\n    return docSnapshot.docs.map(doc => doc.data()).map(fromFirebase)\n  } catch (error) {\n    console.error(error)\n    return Error(error.message)\n  }\n}\n\nconst update = async (\n  project: Project,\n  collection_: string,\n  document_: string\n): Promise<Project | Error> => {\n  const docRef = doc(firestoreApp(), collection_, document_, project.id)\n  try {\n    const dbProject = fromFirebase((await getDoc(docRef)).data())\n    const dbScreenshots = dbProject.screenshots.map(it => it.path)\n    const deleteScreenshots = dbScreenshots\n      .filter(it => !project.screenshots.map(it => it.path).includes(it))\n      .filter(it => !isBlobUrl(it))\n    try {\n      await Promise.all(\n        deleteScreenshots.map(async it => await deleteStored(it))\n      )\n    } catch (error) {\n      console.error(error)\n    }\n    const updatedProject = await uploadImages(project, collection_, document_)\n    const doc = toFirebase(updatedProject)\n    await updateDoc(docRef, doc)\n    const from = fromFirebase(doc)\n    return from\n  } catch (error) {\n    return Error(error)\n  }\n}\n\nconst deletes = async (\n  projects: Project[],\n  collection_: string,\n  document_: string\n): Promise<void | Error> => {\n  for (const project of projects) {\n    const docRef = doc(firestoreApp(), collection_, document_, project.id)\n    try {\n      const project_ = fromFirebase((await getDoc(docRef)).data())\n      try {\n        await Promise.all(\n          project_.screenshots.map(async it => await deleteStored(it.path))\n        )\n      } catch (error) {\n        console.error(error)\n      }\n      await deleteDoc(docRef)\n    } catch (error) {\n      console.error(error)\n      return Error(error)\n    }\n  }\n  return\n}\n\nconst toFirebase = (project: Project) => {\n  const { id, storeURL, sourceURL, logo, screenshots, date, ...rest } = project\n  const validatedId = validate(id) ? id : v4()\n  return {\n    id: validatedId,\n    storeURL: { path: storeURL.path },\n    sourceURL: { path: sourceURL.path },\n    logo: logo.path,\n    screenshots: screenshots.map(it => it.path),\n    date: Timestamp.fromDate(date),\n    ...rest,\n  }\n}\n\nconst fromFirebase = (project: any): Project => {\n  const { storeURL, sourceURL, logo, screenshots, date, ...rest } = project\n  return {\n    storeURL: new Url(storeURL.path),\n    sourceURL: new Url(sourceURL.path),\n    logo: new Url(logo),\n    screenshots: screenshots.map((it: any) => new Url(it)),\n    date: date?.toDate() ?? new Date(),\n    ...rest,\n  }\n}\n\nconst uploadImages = async (\n  project: Project,\n  collection_: string,\n  document_: string\n): Promise<Project> => {\n  const blobs = extractBlobs(project)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".jpg\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(project, blobs)\n}\n\nconst extractBlobs = (project: Project): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  const images = [project.logo, ...project.screenshots]\n  images\n    .map(it => it.path)\n    .filter(it => isBlobUrl(it))\n    .forEach(it => blobMap.set(it, \"\"))\n  return blobMap\n}\n\nconst replaceBlobs = (\n  project: Project,\n  blobs: Map<string, string>\n): Project => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    ...project,\n    logo: new Url(get(project.logo.path)),\n    screenshots: project.screenshots.map(it => new Url(get(it.path))),\n  }\n}\n","import { Url } from \"@home/domain\"\nimport { firestoreApp } from \"@config/firebase\"\nimport { doc, getDoc, setDoc, updateDoc } from \"firebase/firestore\"\nimport { isEmpty } from \"lodash\"\nimport { blobUrlToBuffer, isBlobUrl } from \"@/blob-to-file\"\nimport { uploadImage } from \"@/firebase-file-storage/image-file-storage\"\nimport { v4 } from \"uuid\"\n\nexport interface CVDocumentStore {\n  set: (path: Url) => Promise<Url>\n  get: () => Promise<Url>\n}\n\nexport const createCVDocumentStorage = (\n  _collection: string = \"/home/content\",\n  _document: string = \"/document/link\"\n): CVDocumentStore => ({\n  get: async () => await get(_collection, _document),\n  set: async url => await set(url, _collection, _document),\n})\n\nconst get = async (_collection: string, _document: string): Promise<Url> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const snapshot = await getDoc(docRef)\n  return snapshot.exists() ? (snapshot.data() as Url) : new Url()\n}\n\nconst set = async (\n  url: Url,\n  _collection: string,\n  _document: string\n): Promise<Url> => {\n  const docRef = doc(firestoreApp(), _collection, _document)\n  const oldIntroduction = (await getDoc(docRef)).data() as Url\n  if (oldIntroduction === undefined) await setDoc(docRef, { ...url })\n  const updatedIntroduction = await uploadDocument(url, _collection, _document)\n  await updateDoc(docRef, { ...updatedIntroduction })\n  return updatedIntroduction\n}\n\nconst uploadDocument = async (\n  url: Url,\n  collection_: string,\n  document_: string\n): Promise<Url> => {\n  const blobs = extractBlobs(url)\n  for (const entry of blobs.entries()) {\n    const blobUrl = entry[0]\n    const filePath = `${collection_}${document_}/${v4() + \".pdf\"}`\n    const fileBuffer = (await blobUrlToBuffer(blobUrl)) as ArrayBuffer\n    const downloadUrl = (await uploadImage(filePath, fileBuffer)) as string\n    blobs.set(blobUrl, downloadUrl)\n  }\n  return replaceBlobs(url, blobs)\n}\n\nconst extractBlobs = (url: Url): Map<string, string> => {\n  const blobMap = new Map<string, string>()\n  if (isBlobUrl(url.path)) blobMap.set(url.path, \"\")\n  return blobMap\n}\n\nconst replaceBlobs = (url: Url, blobs: Map<string, string>): Url => {\n  const get = (key: string) =>\n    isEmpty(blobs.get(key)) ? key : blobs.get(key) ?? \"\"\n  return {\n    path: get(url.path),\n  }\n}\n","import { authApp } from \"@config/firebase/src/init-firebase\"\nimport {\n  setPersistence,\n  signInWithEmailAndPassword,\n  signOut,\n  browserLocalPersistence,\n  browserSessionPersistence,\n} from \"firebase/auth\"\n\nexport interface AppAuthStorage {\n  signIn: (user: string, pass: string, rememberMe: boolean) => Promise<boolean>\n  signOut: () => Promise<boolean>\n  isLoggedIn: () => Promise<boolean>\n}\n\nexport const createAppAuthStorage = (): AppAuthStorage => ({\n  signIn: async (\n    user: string,\n    pass: string,\n    rememberMe: boolean\n  ): Promise<boolean> => {\n    try {\n      await setPersistence(\n        authApp(),\n        rememberMe ? browserLocalPersistence : browserSessionPersistence\n      )\n      await signInWithEmailAndPassword(authApp(), user, pass)\n      return true\n    } catch (error) {\n      console.error(error)\n    }\n    return false\n  },\n  signOut: async (): Promise<boolean> => {\n    try {\n      await signOut(authApp())\n      return true\n    } catch (error) {\n      console.error(error)\n    }\n    return false\n  },\n  isLoggedIn: async (): Promise<boolean> => {\n    const checkAuthStatus = async (): Promise<boolean> =>\n      new Promise((resolve, _) => {\n        authApp().onAuthStateChanged(user => {\n          resolve(user !== undefined && user !== null)\n        })\n      })\n    return await checkAuthStatus()\n  },\n})\n","import { defineStore } from \"pinia\"\nimport { Employment, HomePage, Introduction, Project, Url } from \"@home/domain\"\nimport {\n  createIntroductionStorage,\n  createEmploymentStorage,\n  createProjectStorage,\n  createCVDocumentStorage,\n} from \"@home/web-services\"\n\ninterface HomePageState {\n  homePage: HomePage\n  isLoading: boolean\n  error?: Error\n\n  employment?: Employment\n  project?: Project\n}\n\nconst defaultState: HomePageState = {\n  homePage: new HomePage(),\n  isLoading: true,\n  error: undefined,\n\n  employment: undefined,\n  project: undefined\n}\n\nconst employmentStore = createEmploymentStorage()\nconst projectStore = createProjectStorage()\n\nexport const useHomePageStore = defineStore(\"home-web-store\", {\n  state: () => defaultState,\n  actions: {\n    async init() {\n      this.isLoading = true\n      await this.fetch()\n      this.isLoading = false\n    },\n    async fetch() {\n      const promises = [\n        createIntroductionStorage().get(),\n        employmentStore.getAll(),\n        projectStore.getAll(),\n        createCVDocumentStorage().get(),\n      ]\n      try {\n        const results = await Promise.all(promises)\n        this.homePage = new HomePage(\n          results[0] as Introduction,\n          (results[1] as Employment[]).sort((a, b) =>\n            descending(a.tillDate, b.tillDate)\n          ),\n          (results[2] as Project[]).sort((a, b) => descending(a.date, b.date)),\n          results[3] as Url\n        )\n      } catch (error) {\n        console.error(error)\n      }\n    },\n    goToEmploymentDetails(employment: Employment) {\n      this.employment = employment\n      this.$router.push({ path: `/employment/${employment.id}` })\n    },\n    async checkEmploymentDetails() {\n      if (this.employment === undefined) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        this.employment = await employmentStore.getById(routeId) as Employment\n      }\n    },\n    async checkProjectDetails() {\n      if (this.project === undefined) {\n        const routeId = this.$router.currentRoute.value.params.id as string\n        this.project = await projectStore.getById(routeId) as Project\n      }\n    },\n    goToProjectDetails(project: Project) {\n      this.project = project\n      this.$router.push({ path: `/project/${project.id}` })\n    },\n    back() {\n      this.project = undefined\n      this.employment = undefined\n      this.$router.back()\n    },\n  },\n})\n\nconst descending = (a: Date, b: Date) => b.getTime() - a.getTime()\n","<template>\n  <div class=\"rounded-2xl border border-zinc-100 p-6 dark:border-zinc-700/40\">\n    <h2 class=\"flex text-sm font-semibold text-zinc-900 dark:text-zinc-100\">\n      <briefcase-icon />\n      <span class=\"ml-3\">Work</span>\n    </h2>\n    <ol class=\"mt-6 space-y-4\">\n      <li\n        class=\"flex gap-4 dark:hover:bg-zinc-800 rounded-lg -m-2 p-2\"\n        v-for=\"employment in props.data\"\n        @click=\"goToEmploymentDetails(employment)\"\n        v-bind:key=\"employment.employer\">\n        <employment-item :data=\"employment\" />\n      </li>\n    </ol>\n    <a\n      class=\"inline-flex items-center gap-2 justify-center rounded-md py-2 px-3 text-sm outline-offset-2 transition active:transition-none bg-zinc-50 font-medium text-zinc-900 hover:bg-zinc-100 active:bg-zinc-100 active:text-zinc-900/60 dark:bg-zinc-800/50 dark:text-zinc-300 dark:hover:bg-zinc-800 dark:hover:text-zinc-50 dark:active:bg-zinc-800/50 dark:active:text-zinc-50/70 mt-6 w-full\"\n      :href=\"props.document.path\"\n      >Download CV\n      <download-icon />\n    </a>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Employment, Url } from \"@home/domain\"\n  import employmentItem from \"@/ui/home/employment/employment-item.vue\"\n  import briefcaseIcon from \"@/assets/icons/briefcase-icon.vue\"\n  import downloadIcon from \"@/assets/icons/download-icon.vue\"\n  import { useHomePageStore } from \"../home.store\"\n  const props = defineProps<{ data: Employment[]; document: Url }>()\n  const store = useHomePageStore()\n  const { goToEmploymentDetails } = store\n</script>\n","<template>\n  <svg\n    viewBox=\"0 0 24 24\"\n    aria-hidden=\"true\"\n    class=\"h-6 w-6 flex-none\">\n    <path\n      d=\"M15.712 11.823a.75.75 0 1 0 1.06 1.06l-1.06-1.06Zm-4.95 1.768a.75.75 0 0 0 1.06-1.06l-1.06 1.06Zm-2.475-1.414a.75.75 0 1 0-1.06-1.06l1.06 1.06Zm4.95-1.768a.75.75 0 1 0-1.06 1.06l1.06-1.06Zm3.359.53-.884.884 1.06 1.06.885-.883-1.061-1.06Zm-4.95-2.12 1.414-1.415L12 6.344l-1.415 1.413 1.061 1.061Zm0 3.535a2.5 2.5 0 0 1 0-3.536l-1.06-1.06a4 4 0 0 0 0 5.656l1.06-1.06Zm4.95-4.95a2.5 2.5 0 0 1 0 3.535L17.656 12a4 4 0 0 0 0-5.657l-1.06 1.06Zm1.06-1.06a4 4 0 0 0-5.656 0l1.06 1.06a2.5 2.5 0 0 1 3.536 0l1.06-1.06Zm-7.07 7.07.176.177 1.06-1.06-.176-.177-1.06 1.06Zm-3.183-.353.884-.884-1.06-1.06-.884.883 1.06 1.06Zm4.95 2.121-1.414 1.414 1.06 1.06 1.415-1.413-1.06-1.061Zm0-3.536a2.5 2.5 0 0 1 0 3.536l1.06 1.06a4 4 0 0 0 0-5.656l-1.06 1.06Zm-4.95 4.95a2.5 2.5 0 0 1 0-3.535L6.344 12a4 4 0 0 0 0 5.656l1.06-1.06Zm-1.06 1.06a4 4 0 0 0 5.657 0l-1.061-1.06a2.5 2.5 0 0 1-3.535 0l-1.061 1.06Zm7.07-7.07-.176-.177-1.06 1.06.176.178 1.06-1.061Z\"\n      fill=\"currentColor\"></path>\n  </svg>\n</template>\n","<template>\n  <ul\n    role=\"list\"\n    class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4\">\n    <li\n      v-for=\"project of props.data\"\n      :key=\"project.id\"\n      @click=\"goToProjectDetails(project)\">\n      <project-item :data=\"project\" />\n    </li>\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\n  import { Project } from \"@home/domain\"\n  import projectItem from \"./project-item.vue\"\n  import { useHomePageStore } from \"../home.store\"\n  const props = defineProps<{ data: Project[] }>()\n  const store = useHomePageStore()\n  const { goToProjectDetails } = store\n</script>\n","<template>\n  <div class=\"p-12 pt-24\">\n    <Loading\n      :data=\"data\"\n      :error=\"error\">\n      <introduction\n        class=\"mb-12\"\n        :data=\"data.introduction\" />\n      <employement-list\n        class=\"mb-12\"\n        :data=\"data.employments\"\n        :document=\"data.cvDocument\" />\n      <projects-list :data=\"data.projects\" />\n    </Loading>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { Loading } from \"@ui/components\"\n  import introduction from \"@/ui/home/introduction/introduction.vue\"\n  import employementList from \"@/ui/home/employment/employment-list.vue\"\n  import projectsList from \"@/ui/home/projects/project-list.vue\"\n  import { useHomePageStore } from \"./home.store\"\n  import { onMounted } from \"vue\"\n  import { storeToRefs } from \"pinia\"\n  const store = useHomePageStore()\n  const { homePage: data, error } = storeToRefs(store)\n  onMounted(store.init)\n</script>\n","<template>\n  <div\n    class=\"rounded-full border-2 dark:text-zinc-200 w-10 h-10 place-items-center flex justify-center\"\n    @click=\"back\">\n    <v-icon name=\"fa-arrow-left\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useHomePageStore } from \"../home/home.store\"\n  const store = useHomePageStore()\n  const { back } = store\n</script>\n","<template>\n  <suspense>\n    <div class=\"flex flex-col gap-6 p-6 overflow-hidden min-h-screen\">\n      <back-button />\n\n      <div class=\"flex justify-center items-center gap-6 mb-6\">\n        <img\n          class=\"rounded-full w-16 h-16\"\n          :src=\"employment?.employerIcon.path\" />\n        <div class=\"text-5xl\">{{ employment?.employer }}</div>\n      </div>\n\n      <div class=\"grid grid-cols-2 gap-6\">\n        <div class=\"text-right\">Position role</div>\n        <div>{{ employment?.role }}</div>\n        <div class=\"text-right\">Location</div>\n        <div>{{ employment?.location }}</div>\n        <div class=\"text-right\">\n          {{ dateFormat(employment?.fromDate ?? new Date()) }}\n        </div>\n        <div>{{ dateFormat(employment?.tillDate ?? new Date()) }}</div>\n      </div>\n\n      <div class=\"flex p-6\">\n        <div v-html=\"employment?.description\" />\n      </div>\n\n      <div\n        v-if=\"!isEmpty(employment?.subEmployments)\"\n        class=\"flex p-6\">\n        <div class=\"text-xl\">Clients</div>\n      </div>\n\n      <div\n        class=\"grid grid-cols-2 p-6 gap-4\"\n        v-for=\"sub of employment?.subEmployments\"\n        :key=\"sub.id\">\n        <div class=\"flex items-center gap-4\">\n          <img\n            class=\"rounded-full w-10 h-10\"\n            :src=\"sub.employerIcon.path\" />\n          <div>{{ sub.employer }}, {{ sub.location }}</div>\n          <div>{{ sub.role }}</div>\n        </div>\n        <div class=\"flex items-center place-content-end\">\n          <div>\n            {{ dateFormat(sub.fromDate) }} - {{ dateFormat(sub.tillDate) }}\n          </div>\n        </div>\n        <div\n          class=\"col-span-2\"\n          v-html=\"sub.description\" />\n      </div>\n    </div>\n  </suspense>\n</template>\n\n<script setup lang=\"ts\">\n  import backButton from \"@/ui/components/back-button.vue\"\n  import { useHomePageStore } from \"../home/home.store\"\n  import { isEmpty } from \"lodash\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useHomePageStore()\n  const { employment } = storeToRefs(store)\n  onMounted(store.checkEmploymentDetails)\n  const dateFormat = (date: Date) =>\n    new Intl.DateTimeFormat(\"en\", {\n      year: \"numeric\",\n      month: \"long\",\n    }).format(date)\n</script>\n","<template>\n  <Suspense>\n    <div class=\"flex flex-col gap-6 p-6\">\n      <back-button />\n\n      <div class=\"flex justify-center items-center gap-4\">\n        <img\n          class=\"rounded-full -p-4 w-20 h-20\"\n          :src=\"project?.logo.path\" />\n        <span class=\"text-5xl\">{{ project?.title }}</span>\n      </div>\n\n      <div class=\"flex justify-center items-center\">\n        <span class=\"text-2xl\">{{ project?.owner }}</span>\n      </div>\n\n      <div class=\"flex justify-center\">\n        <span\n          class=\"text-xl\"\n          v-html=\"project?.contributions\" />\n      </div>\n\n      <div class=\"flex justify-center\">\n        <span\n          class=\"text-xl\"\n          v-html=\"project?.description\" />\n      </div>\n\n      <div\n        v-if=\"\n          !isEmpty(project?.storeURL.path) || !isEmpty(project?.sourceURL.path)\n        \"\n        class=\"flex justify-center items-center gap-8\">\n        <a\n          v-if=\"!isEmpty(project?.storeURL.path)\"\n          :href=\"project?.storeURL.path\">\n          <v-icon\n            class=\"w-10 h-10\"\n            name=\"fa-google-play\" />\n        </a>\n        <a\n          v-if=\"!isEmpty(project?.sourceURL.path)\"\n          :href=\"project?.sourceURL.path\">\n          <v-icon\n            class=\"w-10 h-10\"\n            name=\"fa-github\" />\n        </a>\n      </div>\n\n      <div class=\"flex place-items-center justify-center\">\n        <div\n          class=\"min-[320px]:w-3/4 min-[320px]:h-3/4 sm:w-2/3 sm:h-2/3 md:w-1/2 md:h-1/2 lg:w-1/3 lg:h-1/3 xl:w-1/4 xl:h-1/4\">\n          <Galleria\n            :value=\"project?.screenshots\"\n            :numVisible=\"8\"\n            :circular=\"true\"\n            :showItemNavigators=\"true\"\n            :showThumbnailNavigators=\"false\">\n            <template #item=\"slotProps\">\n              <img\n                class=\"object-contain w-full h-full\"\n                :src=\"slotProps.item.path\" />\n            </template>\n            <template #thumbnail=\"slotProps\">\n              <img\n                class=\"aspect-square object-fit w-20 h-20\"\n                :src=\"slotProps.item.path\" />\n            </template>\n          </Galleria>\n        </div>\n      </div>\n    </div>\n  </Suspense>\n</template>\n\n<script setup lang=\"ts\">\n  import Galleria from \"primevue/galleria\"\n  import backButton from \"@/ui/components/back-button.vue\"\n  import { useHomePageStore } from \"../home/home.store\"\n  import { isEmpty } from \"lodash\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const state = useHomePageStore()\n  const { project } = storeToRefs(state)\n  onMounted(state.checkProjectDetails)\n</script>\n","import HomePage from \"@/ui/home/page.vue\"\nimport EmploymentPage from \"@/ui/employment/page.vue\"\nimport ProjectPage from \"@/ui/project/page.vue\"\nimport { RouteRecordRaw } from \"vue-router\"\n\nexport const HomeRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: HomePage,\n  },\n  {\n    path: \"/employment/:id\",\n    component: EmploymentPage,\n  },\n  {\n    path: \"/project/:id\",\n    component: ProjectPage,\n  },\n]\n","import { createAppAuthStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\nimport { ref } from \"vue\"\n\nconst storage = createAppAuthStorage()\n\nexport const useAuthStore = defineStore(\"admin-web-auth-store\", {\n  state: async () => ({\n    isLoggedIn: ref(await storage.isLoggedIn()),\n  }),\n  actions: {\n    async logout() {\n      await storage.signOut()\n      this.$router.replace({ path: \"/login\" })\n    },\n    goTo(path: any) {\n      this.$router.replace({ path: path })\n    },\n  },\n})\n","<template>\n  <div\n    class=\"flex h-screen flex-col justify-between border-e bg-white dark:bg-zinc-900\">\n    <div class=\"px-4\">\n      <nav\n        aria-label=\"Main Nav\"\n        class=\"mt-6 flex flex-col space-y-1\">\n        <details class=\"group [&_summary::-webkit-details-marker]:hidden\">\n          <summary\n            class=\"flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\">\n            <div class=\"flex items-center gap-2\">\n              <v-icon\n                name=\"fa-home\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Home </span>\n            </div>\n            <span\n              class=\"shrink-0 transition duration-300 group-open:-rotate-180\">\n            </span>\n          </summary>\n\n          <nav\n            aria-label=\"Teams Nav\"\n            class=\"mt-2 flex flex-col px-4\">\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/introduction')\">\n              <v-icon\n                name=\"fa-address-card\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Introduction </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/employments')\">\n              <v-icon\n                name=\"fa-algolia\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Employments </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/upload-cv')\">\n              <v-icon\n                name=\"fa-file-upload\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Upload Cv </span>\n            </a>\n\n            <a\n              class=\"flex items-center gap-2 rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\"\n              @click=\"store.goTo('/admin/projects')\">\n              <v-icon\n                name=\"fa-briefcase\"\n                scale=\"1.5\" />\n              <span class=\"text-sm font-medium\"> Projects </span>\n            </a>\n          </nav>\n        </details>\n\n        <summary\n          @click=\"store.logout()\"\n          class=\"flex cursor-pointer items-center justify-between rounded-lg px-4 py-2 text-gray-500 hover:bg-gray-100 hover:text-gray-700\">\n          <div class=\"flex items-center gap-2\">\n            <v-icon\n              name=\"fa-sign-out-alt\"\n              scale=\"1.5\"\n              class=\"text-red-500\" />\n            <span class=\"text-sm font-medium\"> Logout </span>\n          </div>\n\n          <span class=\"shrink-0 transition duration-300 group-open:-rotate-180\">\n          </span>\n        </summary>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { useAuthStore } from \"./admin.store\"\n  const store = useAuthStore()\n</script>\n","import { ToastMessageOptions } from \"primevue/toast\"\n\nconst timeout = 3000\n\nexport const successToast = (message?: string): ToastMessageOptions => ({\n  severity: \"success\",\n  summary: \"Success\",\n  detail: message,\n  life: timeout,\n})\n\nexport const errorToast = (message?: string): ToastMessageOptions => ({\n  severity: \"error\",\n  summary: \"Error\",\n  detail: message,\n  life: timeout,\n})\n\nexport const infoToast = (message?: string): ToastMessageOptions => ({\n  severity: \"info\",\n  summary: \"Info\",\n  detail: message,\n  life: timeout,\n})\n","import { Introduction } from \"@home/domain\"\nimport { defineStore } from \"pinia\"\nimport { createIntroductionStorage } from \"@home/web-services\"\nimport { successToast, errorToast } from \"@/shared/toast-message\"\n\ninterface IntroductionState {\n  introduction: Introduction\n  isLoading: boolean\n  error?: Error\n}\n\nconst defaultState: IntroductionState = {\n  introduction: new Introduction(),\n  isLoading: true,\n  error: undefined,\n}\n\nconst storage = createIntroductionStorage()\n\nexport const useIntroductionStore = defineStore(\n  \"home-web-admin-introduction-store\",\n  {\n    state: (): IntroductionState => defaultState,\n    actions: {\n      async init() {\n        await this.fetch()\n      },\n      async fetch() {\n        this.isLoading = true\n        this.error = undefined\n        try {\n          const result = (await storage.get()) as Introduction\n          this.introduction = result\n        } catch (error) {\n          this.error = error\n          console.error(error)\n        }\n        this.isLoading = false\n      },\n      async update() {\n        try {\n          const result = await storage.set(this.introduction)\n          this.introduction = result\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast(error))\n          console.error(error)\n        }\n      },\n    },\n  }\n)\n","<template>\n  <div class=\"flex flex-col w-full p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">\n      Update introduction section\n    </h1>\n\n    <div class=\"grid grid-cols-2 gap-4 w-full\">\n      <div class=\"flex flex-col gap-12 pt-6\">\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              class=\"w-full\"\n              id=\"title\"\n              v-model=\"introduction.title\" />\n            <label for=\"title\">Title</label>\n          </span>\n        </div>\n\n        <div class=\"field grow\">\n          <span class=\"p-float-label h-full\">\n            <TextArea\n              class=\"w-full h-full\"\n              id=\"description\"\n              v-model=\"introduction.description\" />\n            <label for=\"description\">Description</label>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"\">\n        <image-upload v-model=\"introduction.photo.path\" />\n      </div>\n    </div>\n\n    <Button\n      class=\"mt-6\"\n      label=\"Update\"\n      severity=\"info\"\n      @click=\"store.update()\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ImageUpload } from \"@ui/components\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Button from \"primevue/button\"\n  import { useIntroductionStore } from \"./introduction.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useIntroductionStore()\n  const { introduction } = storeToRefs(store)\n</script>\n","<template>\n  <Loading\n    :data=\"isLoading\"\n    :error=\"error\">\n    <edit-introduction />\n  </Loading>\n</template>\n\n<script setup lang=\"ts\">\n  import editIntroduction from \"@/ui/introduction/introduction.vue\"\n  import { Loading } from \"@ui/components\"\n  import { useIntroductionStore } from \"./introduction.store\"\n  import { onMounted } from \"vue\"\n  import { storeToRefs } from \"pinia\"\n  const store = useIntroductionStore()\n  const { isLoading, error } = storeToRefs(store)\n  onMounted(store.init)\n</script>\n","import { errorToast, successToast } from \"@/shared/toast-message\"\nimport { Url } from \"@home/domain\"\nimport { createCVDocumentStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface CVDocumentState {\n  document: Url\n}\n\nconst defaultState: CVDocumentState = {\n  document: { path: \"\" },\n}\n\nconst storage = createCVDocumentStorage()\n\nexport const useCVDocumentStore = defineStore(\n  \"home-web-admin-cv-document-store\",\n  {\n    state: () => defaultState,\n    actions: {\n      async init() {\n        const document = await storage.get()\n        this.document = document\n      },\n\n      async upload() {\n        try {\n          const document = await storage.set(this.document)\n          this.document = document\n          this.$toast.add(successToast())\n        } catch (error) {\n          this.$toast.add(errorToast())\n          console.error(error)\n        }\n      },\n    },\n  }\n)\n","<template>\n  <div class=\"container p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Upload CV Document</h1>\n    <div class=\"flex flex-wrap mb-6\">\n      <document-upload v-model=\"document.path\" />\n    </div>\n    <div class=\"flex flex-wrap\">\n      <Button\n        label=\"Upload\"\n        severity=\"info\"\n        @click=\"upload\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { DocumentUpload } from \"@ui/components\"\n  import Button from \"primevue/button\"\n  import { useCVDocumentStore } from \"./upload-cv.store\"\n  import { storeToRefs } from \"pinia\"\n  import { onMounted } from \"vue\"\n  const store = useCVDocumentStore()\n  const { document } = storeToRefs(store)\n  const { upload } = store\n  onMounted(store.init)\n</script>\n","import { Employment, SubEmployment } from \"@home/domain\"\nimport { defineStore } from \"pinia\"\nimport { createEmploymentStorage } from \"@home/web-services\"\nimport { isEmpty } from \"lodash\"\nimport { successToast, errorToast } from \"@/shared/toast-message\"\n\nconst storage = createEmploymentStorage()\n\ninterface EmploymentsState {\n  employments: Employment[]\n  selected: Employment[]\n  expanded: Employment[]\n\n  item?: Employment\n  subSelected: SubEmployment[]\n  isItemNew: boolean\n\n  subItem?: SubEmployment\n  isSubItemNew: boolean\n\n  error?: Error\n}\n\nconst defaultState: EmploymentsState = {\n  employments: [],\n  selected: [],\n  expanded: [],\n\n  item: undefined,\n  subSelected: [],\n  isItemNew: true,\n\n  subItem: undefined,\n  isSubItemNew: true,\n\n  error: undefined,\n}\n\nexport const useListStore = defineStore(\"home-web-employments-list-store\", {\n  state: (): EmploymentsState => defaultState,\n  getters: {\n    isEditDisabled: state => state.selected.length !== 1,\n    isDeleteDiasabled: state => state.selected.length === 0,\n    isItemEditDisabled: state => state.subSelected.length !== 1,\n    isItemDeleteDisabled: state => state.subSelected.length === 0,\n  },\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n\n    async fetch() {\n      const result = await storage.getAll()\n      this.employments = Array.isArray(result) ? (result as Employment[]) : []\n      this.error = result instanceof Error ? result : undefined\n    },\n\n    async newItem() {\n      this.isItemNew = true\n      this.item = new Employment()\n      this.selected = []\n      this.$router.push({ path: `/admin/employments/${this.item.id}` })\n    },\n\n    async editItem() {\n      this.isItemNew = false\n      this.item = this.selected[0]\n      this.selected = []\n      this.$router.push({ path: `/admin/employments/${this.item.id}` })\n    },\n\n    async saveItem() {\n      if (this.isItemNew && !isEmpty(this.item)) {\n        const item = (await storage.create(this.item)) as Employment\n        this.employments = [\n          ...this.employments.filter(it => it.id !== item.id),\n          item,\n        ]\n      } else if (!this.isItemNew && !isEmpty(this.item)) {\n        const item = (await storage.update(this.item)) as Employment\n        this.employments = [\n          ...this.employments.filter(it => it.id !== item.id),\n          item,\n        ]\n      }\n      this.cancelItem()\n    },\n\n    async deleteItems() {\n      await this.delete()\n    },\n\n    async cancelItem() {\n      this.$router.back()\n      this.isItemNew = false\n      this.item = undefined\n      this.subSelected = []\n    },\n\n    async newSubItem() {\n      this.isSubItemNew = true\n      this.subItem = new SubEmployment()\n      this.subSelected = []\n      this.$router.push({\n        path: `/admin/employments/${this.item!!.id}/sub/${this.subItem.id}`,\n      })\n    },\n\n    async editSubItem() {\n      this.isSubItemNew = false\n      this.subItem = this.subSelected[0]\n      this.subSelected = []\n      this.$router.push({\n        path: `/admin/employments/${this.item!!.id}/sub/${this.subItem.id}`,\n      })\n    },\n\n    async deleteSubItem() {\n      const subs: SubEmployment[] =\n        this.item?.subEmployments.filter(\n          it => !this.subSelected.includes(it)\n        ) ?? []\n      this.item = { ...this.item!, subEmployments: subs }\n    },\n\n    async saveSubItem() {\n      const subs: SubEmployment[] = [\n        ...this.item!.subEmployments.filter(it => it.id !== this.item!.id),\n        this.subItem!,\n      ]\n      this.item = { ...this.item!, subEmployments: subs }\n      this.cancelSubItem()\n    },\n\n    async cancelSubItem() {\n      this.$router.back()\n      this.isSubItemNew = true\n      this.subItem = undefined\n    },\n\n    async create(employment: Employment) {\n      try {\n        ;(await storage.create(employment)) as Employment\n        await this.fetch()\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error))\n        console.error(error)\n      }\n    },\n\n    async update(employment: Employment) {\n      try {\n        await storage.update(employment)\n        await this.fetch()\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error))\n        console.error(error)\n      }\n    },\n\n    async delete() {\n      try {\n        await storage.delete(this.selected)\n        await this.fetch()\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast(error))\n        console.error(error)\n      }\n    },\n  },\n})\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Update employment section</h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isEditDisabled\"\n        size=\"small\"\n        @click=\"editItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDiasabled\"\n        size=\"small\"\n        @click=\"deleteItems\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :value=\"employments\"\n      v-model:selection=\"selected\"\n      v-model:expanded-rows=\"expanded\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column expander />\n      <Column\n        field=\"employerIcon\"\n        header=\"Logo\">\n        <template #body=\"{ data }\">\n          <img\n            class=\"w-8 h-8 rounded-lg\"\n            :src=\"data.employerIcon.path\" />\n        </template>\n      </Column>\n      <Column\n        field=\"employer\"\n        header=\"Employer\">\n      </Column>\n      <Column\n        field=\"role\"\n        header=\"Role\" />\n      <Column\n        field=\"description\"\n        header=\"Description\" />\n      <Column\n        field=\"location\"\n        header=\"Location\">\n      </Column>\n      <Column\n        field=\"fromDate\"\n        header=\"From\"\n        sortable>\n        <template #body=\"{ data }\">{{ data.fromDate.toDateString() }}</template>\n      </Column>\n      <Column\n        field=\"tillDate\"\n        header=\"Till\"\n        sortable>\n        <template #body=\"{ data }\">{{ data.tillDate.toDateString() }}</template>\n      </Column>\n      <template #expansion=\"{ data }\">\n        <sub-list :employment=\"data\" />\n      </template>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Column from \"primevue/column\"\n  import DataTable from \"primevue/datatable\"\n  import subList from \"./sub-list.vue\"\n  import { onMounted } from \"vue\"\n  import { useListStore } from \"./list.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useListStore()\n  const { employments, selected, expanded, isEditDisabled, isDeleteDiasabled } =\n    storeToRefs(store)\n  const { newItem, editItem, deleteItems } = store\n  onMounted(store.init)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n  :deep(.p-datatable .p-datatable-tbody > .p-datatable-row-expansion > td) {\n    padding: 0px;\n    margin: 0px;\n  }\n</style>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"saveItem\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancelItem\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useListStore } from \"../list/list.store\"\n\n  const store = useListStore()\n  const { saveItem, cancelItem } = store\n</script>\n","<template>\n  <div\n    v-if=\"data !== undefined\"\n    class=\"mb-6\">\n    <div class=\"flex flex-wrap gap-8 pt-8 mb-6 overflow-auto\">\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"employer\"\n            v-model=\"data.employer\" />\n          <label for=\"employer\">Employer</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"role\"\n            v-model=\"data.role\" />\n          <label for=\"role\">Role</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"location\"\n            v-model=\"data.location\" />\n          <label for=\"employer\">Location</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <Calendar\n            id=\"fromDate\"\n            v-model=\"data.fromDate\" />\n          <label for=\"fromDate\">From date</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <Calendar\n            id=\"tillDate\"\n            v-model=\"data.tillDate\" />\n          <label for=\"tillDate\">Till date</label>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"field w-40 h-40 max-h-40 max-w-40 mb-6\">\n      <image-upload v-model=\"data.employerIcon.path\" />\n    </div>\n\n    <div class=\"field mx-auto\">\n      <span class=\"p-float-label h-fit\">\n        <TextArea\n          class=\"w-full h-60\"\n          id=\"description\"\n          v-model=\"data.description\" />\n        <label for=\"description\">Description</label>\n      </span>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ImageUpload } from \"@ui/components\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Calendar from \"primevue/calendar\"\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { item: data } = storeToRefs(store)\n</script>\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll\">\n    <div class=\"flex flex-row gap-2 mb-4\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newSubItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isItemEditDisabled\"\n        size=\"small\"\n        @click=\"editSubItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isItemDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteSubItem\" />\n    </div>\n    <DataTable\n      dataKey=\"id\"\n      v-if=\"data !== undefined\"\n      :value=\"data.subEmployments\"\n      v-model:selection=\"subSelected\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"employerIcon\"\n        header=\"Logo\">\n        <template #body=\"{ data }\">\n          <img\n            class=\"w-8 h-8 rounded-xl\"\n            :src=\"data.employerIcon.path\" />\n        </template>\n      </Column>\n      <Column\n        field=\"employer\"\n        header=\"Employer\" />\n      <Column\n        field=\"role\"\n        header=\"Role\" />\n      <Column\n        field=\"description\"\n        header=\"Description\" />\n      <Column\n        field=\"location\"\n        header=\"Location\" />\n      <Column\n        field=\"fromDate\"\n        header=\"From\"\n        sortable\n        style=\"min-width: 12rem\">\n        <template #body=\"{ data }\">{{ data.fromDate.toDateString() }}</template>\n      </Column>\n      <Column\n        field=\"tillDate\"\n        header=\"Till\"\n        sortable\n        style=\"min-width: 12rem\">\n        <template #body=\"{ data }\">{{ data.tillDate.toDateString() }}</template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Column from \"primevue/column\"\n  import DataTable from \"primevue/datatable\"\n\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { newSubItem, editSubItem, deleteSubItem } = store\n  const {\n    item: data,\n    subSelected,\n    isItemEditDisabled,\n    isItemDeleteDisabled,\n  } = storeToRefs(store)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n</style>\n","<template>\n  <div class=\"overflow-hidden flex flex-col p-6\">\n    <div class=\"text-2xl dark:text-zinc-400 mb-6\">\n      {{ isItemNew ? \"Create\" : \"Update\" }} employment\n    </div>\n    <list-item-buttons />\n    <list-item />\n    <list-item-table />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import listItemButtons from \"./list-item-buttons.vue\"\n  import listItem from \"./list-item.vue\"\n  import listItemTable from \"./list-item-table.vue\"\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { isItemNew } = storeToRefs(store)\n</script>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"saveSubItem\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancelSubItem\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useListStore } from \"../list/list.store\"\n\n  const store = useListStore()\n  const { saveSubItem, cancelSubItem } = store\n</script>\n","<template>\n  <div class=\"p-6\">\n    <div class=\"text-2xl dark:text-zinc-400 mb-6\">\n      {{ isSubItemNew ? \"Create\" : \"Update\" }} Sub Employment\n    </div>\n\n    <list-item-sub-buttons />\n\n    <div v-if=\"data !== undefined\">\n      <div class=\"flex flex-wrap gap-8 pt-8 mb-6 overflow-auto\">\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              id=\"employer\"\n              v-model=\"data.employer\" />\n            <label for=\"employer\">Employer</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              id=\"role\"\n              v-model=\"data.role\" />\n            <label for=\"role\">Role</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <InputText\n              id=\"location\"\n              v-model=\"data.location\" />\n            <label for=\"employer\">Location</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <Calendar\n              id=\"fromDate\"\n              v-model=\"data.fromDate\" />\n            <label for=\"fromDate\">From date</label>\n          </span>\n        </div>\n\n        <div class=\"field\">\n          <span class=\"p-float-label\">\n            <Calendar\n              id=\"tillDate\"\n              v-model=\"data.tillDate\" />\n            <label for=\"tillDate\">Till date</label>\n          </span>\n        </div>\n      </div>\n\n      <div class=\"field w-40 h-40 max-h-40 max-w-40 mb-6\">\n        <image-upload v-model=\"data.employerIcon.path\" />\n      </div>\n\n      <div class=\"field mx-auto\">\n        <span class=\"p-float-label h-fit\">\n          <TextArea\n            class=\"w-full h-60\"\n            id=\"description\"\n            v-model=\"data.description\" />\n          <label for=\"description\">Description</label>\n        </span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import { ImageUpload } from \"@ui/components\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Calendar from \"primevue/calendar\"\n  import listItemSubButtons from \"./list-item-sub-buttons.vue\"\n  import { storeToRefs } from \"pinia\"\n  import { useListStore } from \"../list/list.store\"\n  const store = useListStore()\n  const { subItem: data, isSubItemNew } = storeToRefs(store)\n</script>\n","import { RouteRecordRaw } from \"vue-router\"\nimport List from \"@/ui/employments/list/list.page.vue\"\nimport ListItem from \"@/ui/employments/item/list-item.page.vue\"\nimport ListItemSub from \"@/ui/employments/item-sub/list-item-sub.page.vue\"\n\nexport const employmentsRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: List,\n  },\n  {\n    path: \":id\",\n    component: ListItem,\n  },\n  {\n    path: \":id/sub/:subId\",\n    component: ListItemSub,\n  },\n]\n","import { Project, Url } from \"@home/domain\"\nimport { defineStore } from \"pinia\"\nimport { createProjectStorage } from \"@home/web-services\"\nimport { isEmpty } from \"lodash\"\nimport { errorToast, successToast } from \"@/shared/toast-message\"\n\ninterface ProjectsStore {\n  loaded: undefined | boolean\n  projects: Project[]\n  selected: Project[]\n\n  item?: Project\n  isNewItem: boolean\n\n  error?: Error\n}\n\nconst defaultState: ProjectsStore = {\n  loaded: undefined,\n  projects: [],\n  selected: [],\n\n  item: undefined,\n  isNewItem: false,\n\n  error: undefined,\n}\n\nconst storage = createProjectStorage()\n\nexport const useProjectStore = defineStore(\"home-web-admin-projects-store\", {\n  state: (): ProjectsStore => defaultState,\n\n  getters: {\n    isEditDisabled: state => state.selected.length !== 1,\n    isDeleteDisabled: state => state.selected.length === 0,\n    getProjectById: state => (id: string) =>\n      state.projects.find(project => project.id === id),\n  },\n\n  actions: {\n    async init() {\n      await this.fetch()\n    },\n\n    async fetch() {\n      try {\n        const result = (await storage.getAll()) as Project[]\n        this.projects = result\n        this.error = undefined\n        this.loaded = true\n      } catch (error) {\n        this.error = error\n      }\n    },\n\n    async newItem() {\n      this.isNewItem = true\n      this.item = new Project()\n      this.selected = []\n      this.$router.push({ path: \"/admin/projects/new\" })\n    },\n\n    async editItem() {\n      this.isNewItem = false\n      this.item = this.selected[0]\n      this.selected = []\n      this.$router.push({ path: `/admin/projects/${this.item.id}` })\n    },\n\n    async deleteItems() {\n      await this.delete()\n      this.selected = []\n    },\n\n    updateImages(images: string[]) {\n      this.item! = { ...this.item!, screenshots: images.map(it => new Url(it)) }\n    },\n\n    async save() {\n      if (this.isNewItem && !isEmpty(this.item)) {\n        await this.create(this.item)\n      } else if (!this.isNewItem && !isEmpty(this.item)) {\n        await this.update(this.item)\n      }\n      this.isNewItem = false\n      this.$router.back()\n    },\n\n    async cancel() {\n      this.isNewItem = false\n      this.$router.back()\n    },\n\n    async create(project: Project) {\n      try {\n        await storage.create(project)\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast())\n        console.error(error)\n      }\n    },\n\n    async update(project: Project) {\n      try {\n        await storage.update(project)\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast())\n        console.error(error)\n      }\n    },\n\n    async delete() {\n      try {\n        await storage.delete(this.selected)\n        this.projects = this.projects.filter(it => !this.selected.includes(it))\n        this.selected = []\n        this.$toast.add(successToast())\n      } catch (error) {\n        this.$toast.add(errorToast())\n        console.error(error)\n      }\n    },\n  },\n})\n","<template>\n  <div class=\"flex flex-col w-full overflow-scroll p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">Update projects section</h1>\n\n    <div class=\"flex flex-row gap-2 mb-6\">\n      <Button\n        label=\"New\"\n        class=\"h-10\"\n        icon=\"pi pi-plus\"\n        severity=\"success\"\n        size=\"small\"\n        @click=\"newItem\" />\n      <Button\n        label=\"Edit\"\n        class=\"h-10\"\n        icon=\"pi pi-pencil\"\n        severity=\"info\"\n        :disabled=\"isEditDisabled\"\n        size=\"small\"\n        @click=\"editItem\" />\n      <Button\n        label=\"Delete\"\n        class=\"h-10\"\n        icon=\"pi pi-trash\"\n        severity=\"danger\"\n        :disabled=\"isDeleteDisabled\"\n        size=\"small\"\n        @click=\"deleteItems\" />\n    </div>\n\n    <DataTable\n      ref=\"dt\"\n      dataKey=\"id\"\n      :value=\"projects\"\n      v-model:selection=\"selected\">\n      <Column\n        selectionMode=\"multiple\"\n        :exportable=\"false\" />\n      <Column\n        field=\"title\"\n        header=\"Title\">\n      </Column>\n      <Column\n        field=\"description\"\n        header=\"Description\">\n      </Column>\n      <Column\n        field=\"owner\"\n        header=\"Owner\" />\n      <Column\n        field=\"screenshots\"\n        header=\"Screenshots\">\n        <template #body=\"{ data }\">{{ data.screenshots.length }}</template>\n      </Column>\n    </DataTable>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Column from \"primevue/column\"\n  import DataTable from \"primevue/datatable\"\n  import { useProjectStore } from \"./projects.store\"\n  import { onMounted } from \"vue\"\n  import { storeToRefs } from \"pinia\"\n  const store = useProjectStore()\n  const { isEditDisabled, isDeleteDisabled, projects, selected } =\n    storeToRefs(store)\n  const { newItem, editItem, deleteItems } = store\n  onMounted(store.init)\n</script>\n\n<style scoped>\n  :deep(.p-datatable .p-datatable-tbody > tr > td) {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    min-width: auto;\n    max-width: 12rem;\n  }\n</style>\n","<template>\n  <div class=\"flex gap-4\">\n    <Button\n      class=\"h-10 w-28\"\n      label=\"save\"\n      severity=\"info\"\n      @click=\"save\" />\n    <Button\n      class=\"h-10 w-28\"\n      label=\"cancel\"\n      severity=\"info\"\n      @click=\"cancel\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import { useProjectStore } from \"./projects.store\"\n  const store = useProjectStore()\n  const { save, cancel } = store\n</script>\n","<template>\n  <div\n    v-if=\"item !== undefined\"\n    class=\"overflow-hidden flex flex-col flex-grow p-6\">\n    <h1 class=\"text-2xl mb-6 dark:text-zinc-400\">\n      {{ isNewItem ? \"Create\" : \"Update\" }} project\n    </h1>\n\n    <action-buttons />\n\n    <div class=\"flex flex-wrap gap-8 pt-8 mb-8 overflow-auto\">\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"title\"\n            v-model=\"item.title\" />\n          <label for=\"title\">Title</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"storeURL\"\n            v-model=\"item.storeURL.path\" />\n          <label for=\"storeURL\">Store URL</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"sourceURL\"\n            v-model=\"item.sourceURL.path\" />\n          <label for=\"sourceURL\">Source URL</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            id=\"owner\"\n            v-model=\"item.owner\" />\n          <label for=\"owner\">Owner</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <Calendar\n            id=\"fromDate\"\n            v-model=\"item.date\" />\n          <label for=\"fromDate\">From date</label>\n        </span>\n      </div>\n    </div>\n\n    <div class=\"field mb-8\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full h-20\"\n          id=\"summary\"\n          v-model=\"item.summary\" />\n        <label for=\"summary\">Summary</label>\n      </span>\n    </div>\n\n    <div class=\"field mb-8\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full h-20\"\n          id=\"contributions\"\n          v-model=\"item.contributions\" />\n        <label for=\"contributions\">Contributions</label>\n      </span>\n    </div>\n\n    <div class=\"field mb-8\">\n      <span class=\"p-float-label\">\n        <TextArea\n          class=\"w-full h-60\"\n          id=\"description\"\n          v-model=\"item.description\" />\n        <label for=\"description\">Description</label>\n      </span>\n    </div>\n\n    <div class=\"flex flex-col mb-8\">\n      <div class=\"mb-2\">Logo</div>\n      <image-upload\n        class=\"rounded min-w-fit border-black max-w-xs w-32 h-32\"\n        v-model=\"item.logo.path\" />\n    </div>\n\n    <div class=\"flex flex-col min-h-screen\">\n      <div class=\"mb-2\">Screenshots</div>\n      <image-multi-upload\n        class=\"rounded min-w-fit min-h-fit border-black max-w-xs w-10 h-10\"\n        v-model=\"images\" />\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import actionButtons from \"./action-buttons.vue\"\n  import InputText from \"primevue/inputtext\"\n  import TextArea from \"primevue/textarea\"\n  import Calendar from \"primevue/calendar\"\n  import { ImageUpload, ImageMultiUpload } from \"@ui/components\"\n  import { useProjectStore } from \"./projects.store\"\n  import { storeToRefs } from \"pinia\"\n  import { computed } from \"vue\"\n  import { Url } from \"@home/domain\"\n\n  const store = useProjectStore()\n  const { item, isNewItem } = storeToRefs(store)\n  const images = computed<string[]>({\n    get: () => store.item?.screenshots.map(it => it.path) ?? [],\n    set: (value: string[]) => {\n      store.item = {\n        ...store.item!,\n        screenshots: value.map(it => new Url(it)),\n      }\n    },\n  })\n</script>\n","import ProjectTable from \"@/ui/projects/projects-table.vue\"\nimport ProjectEdit from \"@/ui/projects/project-edit.vue\"\nimport { RouteRecordRaw } from \"vue-router\"\n\nexport const projectRoutes: RouteRecordRaw[] = [\n  {\n    path: \"\",\n    component: ProjectTable,\n  },\n  {\n    path: \":id\",\n    component: ProjectEdit,\n  },\n]\n","<template>\n  <div class=\"container\">\n    <div class=\"flex items-center justify-center h-1/2\">\n      <div class=\"text-4xl dark:text-zinc-200\">Welcome to admin panel!</div>\n    </div>\n  </div>\n</template>\n","import {\n  DocumentAdminPage,\n  EmploymentsAdminPage,\n  IntroductionAdminPage,\n  ProjectsAdminPage,\n  employmentsRoutes,\n  projectRoutes,\n} from \"@home/web-admin\"\nimport Welcome from \"@/ui/dashboard/welcome.vue\"\nimport { RouteRecordRaw } from \"vue-router\"\n\nexport const adminRoutes: RouteRecordRaw[] = [\n  {\n    path: \"/admin\",\n    component: Welcome,\n  },\n  {\n    path: \"/admin/introduction\",\n    component: IntroductionAdminPage,\n  },\n  {\n    path: \"/admin/employments\",\n    component: EmploymentsAdminPage,\n    children: employmentsRoutes,\n  },\n  {\n    path: \"/admin/upload-cv\",\n    component: DocumentAdminPage,\n  },\n  {\n    path: \"/admin/projects\",\n    component: ProjectsAdminPage,\n    children: projectRoutes,\n  },\n]\n","import { createAppAuthStorage } from \"@home/web-services\"\nimport { defineStore } from \"pinia\"\n\ninterface LoginStore {\n  username: string\n  password: string\n  rememberMe: boolean\n  isLoading: boolean\n}\n\nconst defaultState: LoginStore = {\n  username: \"\",\n  password: \"\",\n  rememberMe: false,\n  isLoading: false,\n}\n\nconst storage = createAppAuthStorage()\n\nexport const useLoginStore = defineStore(\"admin-web-login-store\", {\n  state: () => defaultState,\n  getters: {},\n  actions: {\n    async login() {\n      this.isLoading = true\n      try {\n        await storage.signIn(this.username, this.password, this.rememberMe)\n        this.$router.replace({ path: \"/admin\" })\n      } catch (error) {\n        console.error(error)\n      }\n      this.isLoading = false\n    },\n  },\n})\n","<template>\n  <div class=\"flex justify-center h-screen\">\n    <div class=\"flex flex-col gap-8\">\n      <div\n        class=\"text-center mb-8 mt-16 text-900 text-3xl font-medium dark:text-zinc-400\">\n        Sign in to admin dashboard!\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            class=\"w-full\"\n            id=\"username\"\n            v-model=\"username\" />\n          <label for=\"username\">Username</label>\n        </span>\n      </div>\n\n      <div class=\"field\">\n        <span class=\"p-float-label\">\n          <InputText\n            type=\"password\"\n            class=\"w-full\"\n            id=\"password\"\n            v-model=\"password\" />\n          <label for=\"password\">Password</label>\n        </span>\n      </div>\n\n      <div class=\"flex align-items-start dark:text-zinc-400 items-center\">\n        <Checkbox\n          id=\"rememberme\"\n          :binary=\"true\"\n          v-model=\"rememberMe\"\n          class=\"mr-2 dark:bg-zinc-900\"></Checkbox>\n        <label for=\"rememberme\">Remember me</label>\n      </div>\n\n      <div v-if=\"!isLoading\">\n        <Button\n          label=\"Sign In\"\n          icon=\"pi pi-user\"\n          severity=\"info\"\n          @click=\"login\"\n          class=\"w-full\"></Button>\n      </div>\n      <div\n        v-else\n        class=\"flex w-full\">\n        <ProgressSpinner stroke-width=\"2\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\n  import Button from \"primevue/button\"\n  import Checkbox from \"primevue/checkbox\"\n  import InputText from \"primevue/inputtext\"\n  import ProgressSpinner from \"primevue/progressspinner\"\n  import { useLoginStore } from \"./login.store\"\n  import { storeToRefs } from \"pinia\"\n  const store = useLoginStore()\n  const { username, password, rememberMe, isLoading } = storeToRefs(store)\n  const { login } = store\n</script>\n","import { Home, HomeRoutes } from \"@home/web\"\nimport { AdminDashboard, AdminLogin, adminRoutes } from \"@admin/web\"\nimport { createRouter, createWebHistory, RouteRecordRaw } from \"vue-router\"\nimport { createAppAuthStorage } from \"@home/web-services\"\n\nconst routes: RouteRecordRaw[] = [\n  {\n    path: \"/\",\n    component: Home,\n    children: HomeRoutes,\n  },\n  {\n    path: \"/admin\",\n    component: AdminDashboard,\n    children: adminRoutes,\n  },\n  {\n    path: \"/login\",\n    component: AdminLogin,\n  },\n]\n\nexport const router = createRouter({\n  history: createWebHistory(),\n  routes: routes,\n})\n\nconst authStorage = createAppAuthStorage()\n\nrouter.beforeEach(async (to, _, next) => {\n  const isAdminLogged = await authStorage.isLoggedIn()\n  const isRouteProtected = to.fullPath.includes(\"admin\")\n  if (isRouteProtected && !isAdminLogged) {\n    next({ path: \"/login\" })\n  } else {\n    next()\n  }\n})\n","import { createApp, markRaw } from \"vue\"\nimport App from \"./app.vue\"\nimport { router } from \"./router/router\"\nimport { createPinia } from \"pinia\"\n\nimport { initializeFirebase } from \"@config/firebase\"\nimport * as FaIcons from \"oh-vue-icons/icons/fa\"\nimport { OhVueIcon, addIcons } from \"oh-vue-icons\"\nimport PrimeVue from \"primevue/config\"\nimport ToastService from \"primevue/toastservice\"\nimport Toast from \"primevue/toast\"\nimport { useToast } from \"primevue/usetoast\"\n\n// Tailwind css\nimport \"./assets/styles/main.css\"\n\n// Prime vue css\n//import \"primevue/resources/themes/viva-dark/theme.css\" - see index.html\n\n// Primeflex\n// import 'primeflex/primeflex.css'\n\n// Prime Icons\nimport \"primeicons/primeicons.css\"\n\n// Icons\n// https://oh-vue-icons.netlify.app/ - Font Awesome\naddIcons(...Object.values({ ...FaIcons }))\n\n// App\ncreateApp(App)\n  .component(\"v-icon\", OhVueIcon)\n  .component(\"Toast\", Toast)\n  .use(PrimeVue)\n  .use(ToastService)\n  .use(\n    createPinia().use(({ store }) => {\n      store.$router = markRaw(router)\n      store.$toast = markRaw(useToast())\n    })\n  )\n  .use(router)\n  .mount(\"#app\")\n\n// Firebase\ninitializeFirebase()\n"],"names":["lightTheme","darkTheme","darkModeSetup","PrimeVue","usePrimeVue","isDarkMode","event","onMounted","_hoisted_1","_hoisted_3","_sfc_render","_ctx","_cache","imagePicker","ref","imagePreview","chooseImage","_a","choosenImage","selectedImageFile","emits","items","chosenImage","image","deleteImage","it","filePicker","filePicked","chooseFile","chosenFile","selectedDocumentFile","isHttp","url","isBlob","dateFormat","date","_hoisted_2","_createElementVNode","_hoisted_4","HomePage","introduction","Introduction","employments","projects","cvDocument","Url","title","description","photo","contacts","Contacts","Employment","id","v4","employer","employerIcon","role","location","subEmployments","fromDate","tillDate","SubEmployment","Project","summary","owner","contributions","storeURL","sourceURL","logo","screenshots","email","telephone","skype","github","linkedin","path","firebaseConfig","app","initializeFirebase","initializeApp","firestoreApp","getFirestore","storageApp","getStorage","authApp","getAuth","blobUrlToBuffer","blobUrl","error","isBlobUrl","createEmploymentStorage","collection","document","getById","getAll","employment","create","update","emlpoyment","deletes","collection_","document_","docRef","doc","docSnapshot","getDoc","fromFirebase","queryRef","query","getDocs","collRef","newEmployemnt","uploadImages","toFirebase","setDoc","dbEmployment","dbIcons","icons","deleteIcons","deleteStored","updatedEmployement","updateDoc","employment_","deleteDoc","rest","validate","toFirebaseSub","item","Timestamp","subEmployment","fromFirebaseSub","blobs","extractBlobs","entry","filePath","fileBuffer","downloadUrl","uploadImage","replaceBlobs","blobMap","get","key","isEmpty","sub","remotePath","file","resolve","reject","storageRef","uploadTask","uploadBytesResumable","_","getDownloadURL","deleteObject","createIntroductionStorage","_collection","_document","i","set","snapshot","updatedIntroduction","createProjectStorage","project","newProject","deleteScreenshots","updatedProject","project_","createCVDocumentStorage","uploadDocument","createAppAuthStorage","user","pass","rememberMe","setPersistence","browserLocalPersistence","browserSessionPersistence","signInWithEmailAndPassword","signOut","defaultState","employmentStore","projectStore","useHomePageStore","defineStore","promises","results","a","b","descending","routeId","store","goToEmploymentDetails","goToProjectDetails","data","storeToRefs","back","state","HomeRoutes","EmploymentPage","ProjectPage","storage","useAuthStore","timeout","successToast","message","errorToast","useIntroductionStore","result","isLoading","useCVDocumentStore","upload","useListStore","subs","selected","expanded","isEditDisabled","isDeleteDiasabled","newItem","editItem","deleteItems","saveItem","cancelItem","newSubItem","editSubItem","deleteSubItem","subSelected","isItemEditDisabled","isItemDeleteDisabled","isItemNew","saveSubItem","cancelSubItem","isSubItemNew","employmentsRoutes","List","ListItem","ListItemSub","useProjectStore","images","isDeleteDisabled","save","cancel","isNewItem","computed","value","projectRoutes","ProjectTable","ProjectEdit","adminRoutes","Welcome","IntroductionAdminPage","EmploymentsAdminPage","DocumentAdminPage","ProjectsAdminPage","useLoginStore","username","password","login","routes","Home","AdminDashboard","AdminLogin","router","createRouter","createWebHistory","authStorage","to","next","isAdminLogged","addIcons","FaIcons","createApp","App","OhVueIcon","Toast","ToastService","createPinia","markRaw","useToast"],"mappings":"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"}